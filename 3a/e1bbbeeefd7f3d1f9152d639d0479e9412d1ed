From: charles.unix.pro@gmail.com (Charles Anthony)
Date: Wed, 18 Jan 2017 10:58:40 -0800
Subject: [TUHS] [TUHS} PDP-11, Unix, octal?
In-Reply-To: <20170118184709.GC82883@server.rulingia.com>
References: <50a7fbcbb6af280eb108fff1361c37ee1718bff0@webmail.yaccman.com>
 <86lgu8rjio.fsf@molnjunk.nocrew.org>
 <20170118184709.GC82883@server.rulingia.com>
Message-ID: <CANV78LTKjYVLWa4_-TKSa5oxHrzf48jmmOKbhj5zh_TS_Sz+jg@mail.gmail.com>

On Wed, Jan 18, 2017 at 10:47 AM, Peter Jeremy <peter at rulingia.com> wrote:

> On 2017-Jan-18 07:04:31 +0100, Lars Brinkhoff <lars at nocrew.org> wrote:
> >The PDP-10 did not have a fixed byte size.  Were there any 9-bit
> >machines?
>
> The Honeywell 6000 series (aka 66/DPS, a rebadged GE 6xx series) was
> 36-bit and supported either 6-bit or 9-bit characters.  I don't recall
> how you selected which you were using but I recall both Pascal and APL
> used the 9-bit byte.
>
>
The [EIS] instruction set supported 4, 6 and 9 bit operands; it was a
matter of which instructions you used.

For pl1, the instructions generated were driven by the DCLs; for Pascal and
APL, [I would guess] that the compiler/interpreter writers defined
character size to be 9 bits and generated the 9 bit variants of the
instructions.

Move 9 6-bit bytes starting at the 3rd byte in the word, convert to 4 bit
bytes in some signed manner, and store as 10 4-bit bytes starting at offset
6.


MLR ,,400        move with sign captured
ADSC6 FLD1,3,9   sending descriptor
ADSC4 FLD2,6,10  receiving descriptor


-- Charles
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20170118/4b116f73/attachment.html>

