X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 8532 invoked from network); 16 May 2020 17:40:42 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 16 May 2020 17:40:42 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id B7CF59C5FC; Sun, 17 May 2020 03:40:39 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id ACDA39C5E5;
	Sun, 17 May 2020 03:40:09 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (2048-bit key; unprotected) header.d=bsdimp-com.20150623.gappssmtp.com header.i=@bsdimp-com.20150623.gappssmtp.com header.b="ItcuQZs1";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 35D649C5E5; Sun, 17 May 2020 03:40:07 +1000 (AEST)
Received: from mail-qt1-f180.google.com (mail-qt1-f180.google.com
 [209.85.160.180])
 by minnie.tuhs.org (Postfix) with ESMTPS id 8C3A39C5E4
 for <tuhs@tuhs.org>; Sun, 17 May 2020 03:40:06 +1000 (AEST)
Received: by mail-qt1-f180.google.com with SMTP id m44so4737485qtm.8
 for <tuhs@tuhs.org>; Sat, 16 May 2020 10:40:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=bsdimp-com.20150623.gappssmtp.com; s=20150623;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=+wQjXM5IX72b7hq3ujcpX8Am3AzHsimljkU95v2Rq0M=;
 b=ItcuQZs1TNVr3+6qFgw+grUvGdyYzODgcfWZmwkqtUBtSKT3Q9tw+DTV5P4m59EfCU
 X9c/vPFo5sS9A/eclx0ZwFuB1JaQLbBxd6rU75AcGhE2fV9auJoDCiG1KA+QZHigkhtC
 Ss6DDUfRtxRpAOKEZQcGCZNDS56LaV4qRG8ZAHI6CUCKRoX3clhvyUGcHKpBqboJz+1a
 MGzl2nI3YLxELIljGlAXJMWrFh+VracvRfqGtcq1EhxYCcSoTD3c3peYBL2oeQBAtcXX
 sWS8jYif/ixEofyPMJ08hYkPCVZavQgbSV504hOmRcr7ybNPcLHZB3J0KvFxyFX20IfG
 xC6g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=+wQjXM5IX72b7hq3ujcpX8Am3AzHsimljkU95v2Rq0M=;
 b=D09HSTf/+M/IBVTV2xT1DsXqIGfWcJsE0W0RE6G2eADy3B7w7Ll/9fZlSuCJPf5rZb
 xZh18z4nfQzQE4QtewRXS8N+XdPt0GyiBCw1mg3fJPw9CMo4KJ0g0WTbeIpWo0IOqfoX
 9QvPD+52eT7hbZdE+XiTYgwfoFMKVUX8Im0ZBC9pbS2ywrLCI2vgJtbQGeKwBuK0vqij
 tWG1Y8fwasz8IdmzWg7ZyMXIRS2w/LPACYs7DZgFViu3Y04iYPTQYsif9d2JTCt/205b
 uep8OPFIPHr1lHUZiMzvSO5KfTE1Q3UztoItntC/eov0LP8WhtHT5+cF8iKkQ8rs41x1
 r+zw==
X-Gm-Message-State: AOAM531l61QPp6OvQQKEOJBX5uYaZ27xLCPVMYTr4DZMRFKjugFKzRkT
 EcU20NLigh8MfS2qVcP0gJ/LlCeOLaPY690R5xM1gRiwTlw=
X-Google-Smtp-Source: ABdhPJz5zvPBk5YCn89QGF1xnG5wUKTDMj14Qmjf44LQaynMaV8l0cdQG3irVL9K7yGal+1s8Y6LQwENTaB3Bi+WG8E=
X-Received: by 2002:aed:3185:: with SMTP id 5mr9102494qth.187.1589650805555;
 Sat, 16 May 2020 10:40:05 -0700 (PDT)
MIME-Version: 1.0
References: <202005141841.04EIfvEZ063529@tahoe.cs.Dartmouth.EDU>
 <CAKzdPgworqAHGFATWOao8PEpXeVP48UvCq-iE94jsaCUOXBD5w@mail.gmail.com>
 <D3259CA9-784C-4E37-888C-95D01E92ADB5@csp-partnership.co.uk>
 <20200515150122.GF30160@mcvoy.com>
 <CAC0cEp_HD6sSgxw9NmuS=tuvBkwRxL-tmP-rmuEMe3Y5JD_sUQ@mail.gmail.com>
 <014001d62af3$9cc209b0$d6461d10$@ronnatalie.com>
 <CAC0cEp9WGsj+1wyC-3AzSMTkbffBJTf+G9EMUfToD5g5joa9sw@mail.gmail.com>
 <CABH=_VRLMfjybWd+pNREFZUWcYr8deJmvvsdmN+9Htx_AX1Xww@mail.gmail.com>
In-Reply-To: <CABH=_VRLMfjybWd+pNREFZUWcYr8deJmvvsdmN+9Htx_AX1Xww@mail.gmail.com>
From: Warner Losh <imp@bsdimp.com>
Date: Sat, 16 May 2020 11:39:54 -0600
Message-ID: <CANCZdfrpUJ4iPQ9b0=dowOPat0eupG_Z2vHLfp1=6At7Pgp6Uw@mail.gmail.com>
To: Paul Winalski <paul.winalski@gmail.com>
Content-Type: multipart/alternative; boundary="0000000000009519f805a5c76bef"
Subject: Re: [TUHS] v7 K&R C
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--0000000000009519f805a5c76bef
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

On Sat, May 16, 2020 at 10:28 AM Paul Winalski <paul.winalski@gmail.com>
wrote:

> > On Fri, May 15, 2020 at 4:02 PM <ron@ronnatalie.com> wrote:
> >
> >Unfortunately, if c is char on a machine with unsigned chars, or it=E2=
=80=99s of
> >type unsigned char, the EOF will never be detected.
> >
> >    - while ((c =3D getchar()) !=3D EOF) if (c =3D=3D '\n') { /* entire =
record is
> now there */
>
> The function prototype for getchar() is:    int getchar(void);
>
> It returns an int, not a char.  In all likelihood this is specifically
> *because* EOF is defined as -1.  The above code works fine if c is an
> int.  One always has to be very careful when doing a typecast of a
> function return value.
>

In the early days of my involvement with FreeBSD, I went through and fixed
about a dozen cases where getopt was being assigned to a char and then
compared with EOF. I'm certain that this is why. Also EOF has to be a value
that's not representable by a character, or your 0xff bytes would disappear=
.

Warner

--0000000000009519f805a5c76bef
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><br></div><br><div class=3D"gmail_quote">=
<div dir=3D"ltr" class=3D"gmail_attr">On Sat, May 16, 2020 at 10:28 AM Paul=
 Winalski &lt;<a href=3D"mailto:paul.winalski@gmail.com">paul.winalski@gmai=
l.com</a>&gt; wrote:<br></div><blockquote class=3D"gmail_quote" style=3D"ma=
rgin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:=
1ex">&gt; On Fri, May 15, 2020 at 4:02 PM &lt;<a href=3D"mailto:ron@ronnata=
lie.com" target=3D"_blank">ron@ronnatalie.com</a>&gt; wrote:<br>
&gt;<br>
&gt;Unfortunately, if c is char on a machine with unsigned chars, or it=E2=
=80=99s of<br>
&gt;type unsigned char, the EOF will never be detected.<br>
&gt;<br>
&gt;=C2=A0 =C2=A0 - while ((c =3D getchar()) !=3D EOF) if (c =3D=3D &#39;\n=
&#39;) { /* entire record is now there */<br>
<br>
The function prototype for getchar() is:=C2=A0 =C2=A0 int getchar(void);<br=
>
<br>
It returns an int, not a char.=C2=A0 In all likelihood this is specifically=
<br>
*because* EOF is defined as -1.=C2=A0 The above code works fine if c is an<=
br>
int.=C2=A0 One always has to be very careful when doing a typecast of a<br>
function return value.<br></blockquote><div><br></div><div>In the early day=
s of my involvement with FreeBSD, I went through and fixed about a dozen ca=
ses where getopt was being assigned to a char and then compared with EOF. I=
&#39;m certain that this is why. Also EOF has to be a value that&#39;s not =
representable by a character, or your 0xff bytes would disappear.</div><div=
><br></div><div>Warner=C2=A0</div></div></div>

--0000000000009519f805a5c76bef--
