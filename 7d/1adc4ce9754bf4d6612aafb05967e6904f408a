From: imp@bsdimp.com (Warner Losh)
Date: Thu, 9 Jan 2014 13:43:04 -0700
Subject: [TUHS] History of chown semantics
In-Reply-To: <CAGSRWbimR7u6H33Zgphw-6dFQ2zrQ-yKzKGeTkP4iBLUXR86Ww@mail.gmail.com>
References: <F174F3EE-BFED-4561-9A1A-B4D33D179513@tfeb.org>
 <alpine.NEB.2.02.1401090914270.4786@t1.m.reedmedia.net>
 <20140109191336.GD24304@mercury.ccil.org>
 <CAGSRWbimR7u6H33Zgphw-6dFQ2zrQ-yKzKGeTkP4iBLUXR86Ww@mail.gmail.com>
Message-ID: <4B63B254-11FA-401C-81EE-7B4A8B97EDF6@bsdimp.com>


On Jan 9, 2014, at 1:19 PM, Tim Newsham wrote:

> On Thu, Jan 9, 2014 at 9:13 AM, John Cowan <cowan at mercury.ccil.org> wrote:
>> Quotas aren't very useful any more, what with most systems being either
>> single-user clients or servers with no need for privilege separation
>> other than root/non-root.  Unless you are using mandatory access
>> control, which has never been a standard part of any Unix-like system, I
>> see no reason to continue to forbid changes of ownership.
> 
> I think such a drastic change in semantics is bound to violate
> some security assumption of some software.
> 
> For example, some program might have you create a file
> and use your ownership of that file as proof of your
> authorization.

I always had been told it was so that you could chown the tape drive back to root when you were done with it... Or was that the weird, fancy type-setter... But this is far from a first-hand account.

Warner



