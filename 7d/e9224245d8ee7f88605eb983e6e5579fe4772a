From: tfb@tfeb.org (Tim Bradshaw)
Date: Fri, 3 Feb 2012 11:10:02 +0000
Subject: [TUHS] Understanding the /bin, /sbin, /usr/bin, /usr/sbin Split
In-Reply-To: <AF73B35E-BB6C-44FE-A128-2EEE0A4CF0E0@orthanc.ca>
References: <CAFCBnZvMuUvZNm72pvWkS30PH7o3eS8ii2WQ5XaZyviAxhwHOA@mail.gmail.com>
	<20120201121214.55c73577@cnb.csic.es>
	<4F2A907D.9000000@fastmail.us>
	<89159FF1-5521-4890-A5F0-30DC9E5B7EC9@bsdimp.com>
	<20120202173623.GQ30634@mercury.ccil.org>
	<alpine.BSF.2.00.1202030759350.66525@aneurin.horsfall.org>
	<52BD3851-95AF-4DFC-8728-9F2DB1E1614C@bsdimp.com>
	<AF73B35E-BB6C-44FE-A128-2EEE0A4CF0E0@orthanc.ca>
Message-ID: <0D449762-FD45-4528-B46E-AEA962E6B7CA@tfeb.org>

On 2 Feb 2012, at 22:53, Lyndon Nerenberg wrote:
> 
> In the day of sub-hundred dollar terabyte drives, you're kidding me, right?
> 
> Also, ever lost libc.so on a Solaris box?

This is missing the point.  A system with shared libraries can deliver a fix to a bug in a library by a new version of that library, instead of a new version of every program which is statically linked against that library.

