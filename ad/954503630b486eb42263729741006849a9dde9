From: jsteve@superglobalmegacorp.com (jsteve@superglobalmegacorp.com)
Date: Wed, 22 Feb 2017 16:57:26 +0800
Subject: [TUHS] Mach for i386 / Mt Xinu or other
In-Reply-To: <20170221213754.GA6103@mcvoy.com>
References: <635c06b4-0048-4951-95ca-283c64c30fed@SG2APC01FT017.eop-APC01.prod.protection.outlook.com>
 <CAC20D2NStqm47mfSFUvtVaLZfB-cdWUfc7r4RoZBWUp4fTmaOw@mail.gmail.com>
 <CAJfiPzz3Wvvgye0rRjZG4HAGWLU3ZtpGnii3KOBzOWkV4r5zvg@mail.gmail.com>
 <1ba0f584-6478-4332-bcae-63ac6cedf2f6@SG2APC01FT041.eop-APC01.prod.protection.outlook.com>
 <alpine.BSF.2.02.1702190200300.94021@frieza.hoshinet.org>
 <F28F6A9F-F0C3-43AE-A1A6-1335998AAE38@superglobalmegacorp.com>
 <20170219154432.GA19243@mcvoy.com>
 <58ab3214.+jRaJEWVki5gYHFz%schily@schily.net>
 <20170220222457.GB3163@mcvoy.com>
 <58ac16ca.V0zEZijwK0rh0Cyr%schily@schily.net>
 <20170221213754.GA6103@mcvoy.com>
Message-ID: <4652e32b-d39d-480f-8adf-6f84934bfb79@SG2APC01FT046.eop-APC01.prod.protection.outlook.com>

Wow that captures so much there.  I think the big thing at the time was the tools, and even the precious kernel source code.

I got into Linux around 0.12-0.95.  To me it was so amazing to get the kernel source code, and actually compile it myself.  Prior that that, I’d only been a user on VAX Ultrix, and helped out some mom & pop resellers that got in over their heads with Xenix.  BSD Unix was something that ran on massively expensive hardware, and was guarded like a state secret, so I never bothered to look it up as I didn’t get the exciting computerlab job, and by the time I had one we ran AIX, and were 100% against doing anything else, especially talks of using GCC/F2c instead of IBM’s XLC/Fortran.  We also had another lab with AT&T 3B2’s that one college kid had apparently ‘stolen’ source code to the kernel had relinked the kernels with his ‘improved’ modules .. and which is what they always blamed for stability issues (certainly not having 30 users on a machine that could barely keep up with 5).

There was such a high bar to get a UNIX system to mess around with, and it was such a castle vs peasant thing that it really reminded me of the whole microcomputer revolution.  Had I known that 386BSD was a thing I would have been interested.  But it was digging around on a BBS where I found SLS Linux diskette images that I could install on a 386sx that was just as useful as Xenix.  But with GCC I could actually port over my own stupid stuff.  The SDK didn’t cost more than a car and it was amazing.  Even better you not only could download the kernel, but were encouraged to do so, as the generic kernel sucked.

So reading comments up to here, it seems that being baggage free in terms of not working with ‘existing good’ code gave them a chance to challenge every known idea of what things should be, and then like extfs trying things, failing, and improving like ext2fs, ext3fs and ext4fs …  My personal catastrophic issues with Linux has always been the ‘hookers and blackjack’ approach, where someone doesn’t like LIBC then they’ll just replace it, over and over and over.  Then you get binary commercial products (Oracle) which are a nightmare to deal with, and now you end up with containers as a way to deal with the horrible impossibility of deploying binaries to Linux.  I’m still hopeful someone will just “borrow” what NeXT did with packages, and fat binaries.

I guess the other takeaway is that with Linus only focusing on a kernel is that everyone could make their own, while forking or making your own BSD as a user was (and Im sure is still) looked highly down on.  Just as we went through the whole NetBSD ouster of Theo and OpenBSD thing, and of course Matt’s Dragonfly.

I used to think it was more so right place at the right time, but really that blank slate seems to have been a big thing too, just as there has been some ancient bugs in BSD like the 33 year yacc bug (http://undeadly.org/cgi?action=article&sid=20080708155228) and a 25 year BSD bug (http://www.osnews.com/story/19731/The-25-Year-Old-UNIX-Bug).  

Linux would have never existed without the 386 Minix branch, which of course relied on there being a UNIX to copy and ‘improve’ with it’s microkernel in the first place, but now we seem to be really in that post UNIX world.

By modern standards SYSVr4 is embedded sized.  Although last time I asked Attachmate about it they didn’t know what a UNIX was.  I suspect it’s about the same with Microfocus.

From: Larry McVoy
Sent: Thursday, 23 February 2017 5:53 AM
To: Joerg Schilling
Cc: lm at mcvoy.com; tuhs at minnie.tuhs.org; jsteve at superglobalmegacorp.com
Subject: Re: [TUHS] Mach for i386 / Mt Xinu or other

On Tue, Feb 21, 2017 at 11:30:34AM +0100, Joerg Schilling wrote:
> Larry McVoy <lm at mcvoy.com> wrote:
> 
> > I've worked with Linus, I know him pretty well.  I stand by my description
> > above and nothing you've said has changed (and isn't likely to).
> 
> I know him as well, he send various personal attacks against me.

Linus attacks anyone who he thinks is misguided.  He's been wrong but
he's usually right.

> As Linux personally and incorrectly claimed that I was talking about kernel 
> internal interfaces even though I was definitely talking about 
> kernel/userspace interfaces, I assume that he has a problem with understanding
> what an external interface is. 

Yeah, uh huh.  If it makes you feel better to say stuff like that, go
for it.  You do realize it doesn't reflect well on you, right?  The
guy is a pretty darn good kernel engineer, I think he knows what a 
kernel/userspace interface is.  It's a big part of the job description.

> You may have started with Linux later than I did - I started in 1996.

Was running Linux well before that, I ran it when you booted off of
floppies and there was no networking.  I don't know when I started but
this was in 1993:

http://www.mcvoy.com/lm/bitmover/lm/papers/srcos.html

and I'm sure I'd been running it for quite a while by that time.  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20170222/0a781c09/attachment-0001.html>

