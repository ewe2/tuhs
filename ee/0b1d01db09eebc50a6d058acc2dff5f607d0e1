From: tfb@tfeb.org (Tim Bradshaw)
Date: Mon, 5 Jan 2015 12:02:59 +0000
Subject: [TUHS] Illumos )
In-Reply-To: <20141231224249.GA5833@mcvoy.com>
References: <20141231062219.GA21046@mcvoy.com>
 <1420018115.54a3c1c32faaa@www.paradise.net.nz>
 <20141231131335.GA26926@mercury.ccil.org> <54A4357F.9040703@aueb.gr>
 <CAC20D2POf41Psp6gWdsX9a5PvYsMag-YBQLbawtbFaXpo0wG-A@mail.gmail.com>
 <20141231203617.GB3922@mcvoy.com>
 <CAHYQbfAJC32YuzDHQfBQ4Jbk5uDOsUxGbg3qDv0ZdA_j2eNb_Q@mail.gmail.com>
 <20141231224249.GA5833@mcvoy.com>
Message-ID: <EA114F48-926C-4729-A900-E28D645AC57D@tfeb.org>

On 31 Dec 2014, at 22:42, Larry McVoy <lm at mcvoy.com> wrote:

> My view is Linux is pragmatic about stuff, Solaris was dogmatic about it.
> Yeah, the latter leads to better thought out stuff but the former tends
> to be useful sooner.

I think that this is exactly right. I used Solaris for pretty much my whole 
career (BSD then SunOS then Solaris) and eventually I had to give up and just admit that, for reasons I don't understand but are probably to do with culture at Sun, Solaris was making a lot of decisions which smelt like ones that an academic who didn't need to actually care about use in the real world might make, while Linux almost never did that (it had/has other problems, specifically long-term interface stability).

The case that made me finally realise that Solaris Had Lost was ZFS, and specifically ZFS consistency check.  There is (was in ~2010) *no way to check a zpool outside the kernel*, so if you had a zpool which you thought might be damaged you were supposed to check it by importing it.  So all that check code which had to deal with possibly completely random crap in the pool ran in the kernel where any kind of serious mistake involved, if you're lucky, the machine crashing, and if you're not lucky some awful data-corruption problem.  But that's OK, because the ZFS code is all perfect, and never has any problems at all, of course.

