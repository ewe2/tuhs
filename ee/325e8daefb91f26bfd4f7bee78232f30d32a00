From: usotsuki@buric.co (Steve Nickolas)
Date: Thu, 14 Sep 2017 15:54:19 -0400 (EDT)
Subject: [TUHS] Happy birthday,
 Dennis Ritchie! [ really sun vs dec/apollo --> X and NeWS ]
In-Reply-To: <f05f5fe905a5279e242c1ff265f43c690eb4052e@webmail.yaccman.com>
References: <f05f5fe905a5279e242c1ff265f43c690eb4052e@webmail.yaccman.com>
Message-ID: <alpine.BSF.2.02.1709141552240.1652@frieza.hoshinet.org>

On Thu, 14 Sep 2017, Steve Johnson wrote:

> I'm not aware of any profanity per se in the early Unix sources, but
> there certainly were some snarky error messages.   Like "eh?"   Or
> "Very Funny".  I contributed a few: "gummy structure".
>
> I've become truly PO'd at the state of error messages in today's
> software.   Things like "file error" or "cannot open file" without
> telling you what file was being opened.   And every encounter with
> git gives me additional fodder.  The information in many of git's
> error messages is roughly one bit, that is best translated with
> profanity.
>
> I wrote a paper on error messages at one point.  I had examples from
> bad to best.  In a nutshell (worst to best):
>
> 	* <program aborts, leaving the world in an unknown state>
> 	* "internal error",  "beta table overflow", "operation failed"
> 	* "Writing the output file failed"
> 	* "File xxx could not be opened for writing."
> 	* "File xxx could not be opened for writing: check the file location
> and permissions"
>
> 	* "Writing the output file xxx caused an error.  See <link> for
> possible reasons and corrections" 
>
> Most git messages fall between 2 and 3.  But there are occasional 4's
> and 5's.
>
> Steve

You got perror(), use it (not you)... >_>

All my code that outputs error messages for stuff in the C library uses 
perror(), so a typical error might be "foo: cannot open file bar: No such 
file or directory", with the last part coming from the C runtime itself.

-uso.

