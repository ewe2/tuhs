From: cdl@mpl.ucsd.edu (Carl Lowenstein)
Date: Thu, 30 Sep 2004 20:59:43 -0700 (PDT)
Subject: [TUHS] 6-bit, 7-bit and 9-bit byte UNIXes
Message-ID: <200410010359.i913xhf16995@opihi.ucsd.edu>

> Subject: Re: [TUHS] 6-bit, 7-bit and 9-bit byte UNIXes
> From: Norman Wilson <norman at nose.cs.utoronto.ca>
> To: tuhs at tuhs.org
> Date: Thu, 30 Sep 2004 20:47:22 -0400
> 
> The very first UNIX ran on the PDP-7, which had 18-bit words.
> 
> I happen to have the assembly-language source code to parts
> of that system.  Many programs contain error-handling code
> that does something like this:
> 
> 	lac d1
> 	sys write; 1f; 1
> 	jmp somewhere
> 
> 1:	077012
> 
> 	...
> 
> d1:	1
> 
> Evidently the system thought in words in those days
> (the second argument to sys write is presumably a word
> count), but the single word written is a strong clue
> that 9-bit bytes were used, and that a certain concise
> error message that people love to complain about was
> there from the beginning (and why not?).

?

I would say "the PDP7 computer was word-addressable".  In this
context, characters seem to have been packed as 9-bit half-words
in a big-endian fashion.  No 'bytes'.

Maybe tomorrow I will be near my DEC literature archives, and see
if I can find some clues about PDP7 instructions that might deal
with half-words.  If it's anything like the PDP8 of similar vintage,
there aren't any.  Late in its life the PDP8 got a BSW "byte swap"
instruction to swap the half-words in the AC register.  6 bits,
of course.

    carl
-- 
    carl lowenstein         marine physical lab     u.c. san diego
                                                 clowenst at ucsd.edu

