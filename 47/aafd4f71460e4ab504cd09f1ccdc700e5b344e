From: ron@ronnatalie.com (Ronald Natalie)
Date: Sat, 10 Sep 2016 22:41:52 -0400
Subject: [TUHS] Shell control through external commands
In-Reply-To: <201609110239.u8B2dgDJ010272@freefriends.org>
References: <201607151647.u6FGlqvW037575@tahoe.cs.Dartmouth.EDU>
 <20160910174011.GF5970@dnied%tiscali.it>
 <alpine.BSF.2.11.1609110842190.78806@aneurin.horsfall.org>
 <006301d20bcb$43ae03b0$cb0a0b10$@ronnatalie.com>
 <201609110239.u8B2dgDJ010272@freefriends.org>
Message-ID: <FDB393E1-2F0F-43D1-A711-AE8740AAB6A2@ronnatalie.com>


> On Sep 10, 2016, at 10:39 PM, arnold at skeeve.com wrote:
> 
> "Ron Natalie" <ron at ronnatalie.com> wrote:
> 
>> Traditionally, the shell recognized shell scripts and ran them in a new
>> instance of the shell rather than calling exec on them.
> 
> I think that the way the shell "recognized" scripts was by having
> exec fail, otherwise how would it know?  I think we'll have to go
> grubbing in the source archives to be sure.
You are correct.

> 
>> It was a Berkeley hack to add a new exec magic number that happened to
>> correspond to the characters #!.
> 
> ISTR reading on this list that #! was a post-V7 Bell Labs invention
> that the BSD guys went and implemented themselves...

That’s possible.   We jumped from V7 to the BSD distributions because about the same time we were going from PDP-11’s to VAXen of various flavors
(actually our first VAX was a copy of one of the George Gobel dual processor 780’s).


