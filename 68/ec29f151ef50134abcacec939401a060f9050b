Return-Path: <tuhs-bounces@minnie.tuhs.org>
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.2
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id b8b21ca7
	for <ml@inbox.vuxu.org>;
	Mon, 29 Apr 2019 14:39:46 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 398AA9B62D; Tue, 30 Apr 2019 00:39:45 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 60350948F1;
	Tue, 30 Apr 2019 00:39:25 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 4DE90948F1; Tue, 30 Apr 2019 00:39:23 +1000 (AEST)
Received: from oclsc.com (oclsc.com [206.248.137.164])
 by minnie.tuhs.org (Postfix) with SMTP id 808C9948F0
 for <tuhs@tuhs.org>; Tue, 30 Apr 2019 00:39:20 +1000 (AEST)
From: Norman Wilson <norman@oclsc.org>
To: tuhs@tuhs.org
Date: Mon, 29 Apr 2019 10:38:57 -0400
Message-ID: <1556548741.10439.for-standards-violators@oclsc.org>
Subject: [TUHS] MASSCOMP MC-500 Guide to Writing a Unix Device Driver
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

Dennis's `The UNIX I/O System' paper in Volume 2 of the 7/e
manual is basically about how drivers work.  Is that near
enough, possibly as augmented by Ken's `UNIX Implementation'
paper in the same book?

Those were my own starting point, long ago, for understanding
how to write device drivers.  Along with existing source code
as examples, of course, but (unlikely many who hack on device
drivers, I'm afraid) I have always preferred to have a proper
statement of rules, conventions, and interfaces rather than
just reading code and guessing.

Norman Wilson
Toronto ON
