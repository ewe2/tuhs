X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	HTML_MESSAGE,MAILING_LIST_MULTI,T_KAM_HTML_FONT_INVALID autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 20829 invoked from network); 3 Sep 2021 19:02:40 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 3 Sep 2021 19:02:40 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id CC24E9C8B6; Sat,  4 Sep 2021 05:02:37 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id DDC5D9C870;
	Sat,  4 Sep 2021 05:02:06 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=serissa.com header.i=@serissa.com header.b="aRil88d0";
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=messagingengine.com header.i=@messagingengine.com header.b="b0xoLSDK";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id AD0C99C870; Sat,  4 Sep 2021 05:02:04 +1000 (AEST)
Received: from out4-smtp.messagingengine.com (out4-smtp.messagingengine.com
 [66.111.4.28]) by minnie.tuhs.org (Postfix) with ESMTPS id 120239BA1E
 for <tuhs@tuhs.org>; Sat,  4 Sep 2021 05:02:03 +1000 (AEST)
Received: from compute5.internal (compute5.nyi.internal [10.202.2.45])
 by mailout.nyi.internal (Postfix) with ESMTP id D503C5C0170;
 Fri,  3 Sep 2021 15:02:01 -0400 (EDT)
Received: from mailfrontend2 ([10.202.2.163])
 by compute5.internal (MEProxy); Fri, 03 Sep 2021 15:02:01 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=serissa.com; h=
 from:message-id:content-type:mime-version:subject:date
 :in-reply-to:cc:to:references; s=fm3; bh=9FWJFIsyu1CQPyoEkeeFnmB
 TasX0S7ynI9JHJhivi1I=; b=aRil88d0iNuz6cHpQUzusgGteMq6Gmuio29/H9t
 U8qBrjX7YWczcEkpxYHyjBNysJi7jtDo/hNUg+u5KHwlWs4uUlem5YtNQtzr7b2N
 Lmyw4oTHtfjDCQpaKA3sF7LpFWobVNyehMUtBZ51iNvjqOsim4QdxLc/kbgryP4l
 TSL11QuSpfm9fbHchnFNLxnW48HE6eYhYAUQUE/bsmSvCApBszKySClDdor9Rql9
 AHlns7UCZ5lT6lPXIV2b6ecmd15sFZmy1yHjICKCCaGkb9imMap1ws9GVdk7n79g
 6EOx5k1ioqIyYIO+ihtjQrq1bfn1HihebIIvcv6bk3seXdg==
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=
 messagingengine.com; h=cc:content-type:date:from:in-reply-to
 :message-id:mime-version:references:subject:to:x-me-proxy
 :x-me-proxy:x-me-sender:x-me-sender:x-sasl-enc; s=fm3; bh=9FWJFI
 syu1CQPyoEkeeFnmBTasX0S7ynI9JHJhivi1I=; b=b0xoLSDK+gWBTfTHKWxpLZ
 yjmR+cYZWYkjNWIjfRwDRLU5ticVmQhJzekQNNxOJ75/gpGyy6H0X7GagmM72XuP
 LnaG2aeVPDpqIaRxpc1oGq8/5O4SpLysMAlRoFD/nQ0HyJiGEWmIvCNEQE7HD8qP
 Gom8yNw8BinGeyHupdvsiDwB2SbxemNrSBFUWQtRTnlMtd0DmVHxDtAqsFTCDZ6K
 pdx9LKhujnUViJPU4xVT7JyFUlrhI3eFCK/yMSoMJMxzqjRsJKPAd6X2ihvuGmp9
 BBHtPgDpUNcFKzE1a9WR+xW8vheHLTDJkGA9vAFHebSHD577KNJSe4mzAJOWfCIw
 ==
X-ME-Sender: <xms:KXEyYb7aQbV87FsBvJxa-InAyQBx9BTe-mO1ujRVms7W188g36vfTA>
 <xme:KXEyYQ7zrgomJH8qlvadaiOeH-IF5BfKCdvqau4UUrM6XxTIhUZ0WRGbFFqxLbviD
 8GPn9NHFXLc3mYZVw>
X-ME-Received: <xmr:KXEyYSdpJOd-nfP5NOkbJ10h3VyVsVERpnKT4xslNx3dZAjlc21khkTuSYXLchq3j-RpVrHiKsMESzpGmF859757NSXQx5YDSdSfSG0R5JXdJajp_B8>
X-ME-Proxy-Cause: gggruggvucftvghtrhhoucdtuddrgedvtddruddvjedgudeftdcutefuodetggdotefrod
 ftvfcurfhrohhfihhlvgemucfhrghsthforghilhdpqfgfvfdpuffrtefokffrpgfnqfgh
 necuuegrihhlohhuthemuceftddtnecunecujfgurhephffktgggufffjgfvfhfosegrtd
 hmrehhtdejnecuhfhrohhmpefnrgifrhgvnhgtvgcuufhtvgifrghrthcuoehsthgvfigr
 rhhtsehsvghrihhsshgrrdgtohhmqeenucggtffrrghtthgvrhhnpefgtddtudejgfeiff
 dthffhgeejfeekkeffffetvefgvdfhgffghfdtjeeludehhfenucevlhhushhtvghrufhi
 iigvpedtnecurfgrrhgrmhepmhgrihhlfhhrohhmpehsthgvfigrrhhtsehsvghrihhssh
 grrdgtohhm
X-ME-Proxy: <xmx:KXEyYcI70SfLVivUC2Rk0j-Dj2tfkhkVyvIux_tttwDzijnb11-ssQ>
 <xmx:KXEyYfKB4n47jy5cYbg7lct6cKD2K8Mbizn2HbMYqMrpEoe1yjHHRQ>
 <xmx:KXEyYVxcL68pMoUxwT34s8e24ld4Qsw4651kV4u4Sh6Qd3NqmH9mDw>
 <xmx:KXEyYRzk8PxsfKlq_yCAalcsvc36gVKAXpfGj0f_Elm3uTFPVeSprA>
Received: by mail.messagingengine.com (Postfix) with ESMTPA; Fri,
 3 Sep 2021 15:02:01 -0400 (EDT)
From: Lawrence Stewart <stewart@serissa.com>
Message-Id: <7CE6F620-FABD-4C2C-905A-02919FB0BCD5@serissa.com>
Content-Type: multipart/alternative;
 boundary="Apple-Mail=_FAA2CFFE-3F2D-41D2-8B2C-CB1E94745AC3"
Mime-Version: 1.0 (Mac OS X Mail 14.0 \(3654.120.0.1.13\))
Date: Fri, 3 Sep 2021 15:02:00 -0400
In-Reply-To: <20210903172848.GF13471@mcvoy.com>
To: The Eunuchs Hysterical Society <tuhs@tuhs.org>
References: <CAEoi9W6LNPeE69TQKcr8v=8s17usj0c5BQWGFcLQ5nj9GKLEsg@mail.gmail.com>
 <CANCZdfpdX=ajS=rrJSc4Zx98BuAhHJJttwuwTzU4EHyKM_0s0g@mail.gmail.com>
 <CAP2nic2O5sDi3UQzD=9cpjQa1bxosLt_4OG6WRWuQs4Gjp4-4Q@mail.gmail.com>
 <20210903172848.GF13471@mcvoy.com>
X-Mailer: Apple Mail (2.3654.120.0.1.13)
Subject: Re: [TUHS] ATC/OSDI'21 joint keynote: It's Time for Operating
 Systems to Rediscover Hardware (Timothy Roscoe)
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>


--Apple-Mail=_FAA2CFFE-3F2D-41D2-8B2C-CB1E94745AC3
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=utf-8

I don=E2=80=99t really think out-of-order in hardware causes trouble for =
programmers that wasn=E2=80=99t already there when you use -O3.  =
Compilers will already promote memory to registers and do =
interprocedural optimization and reorder memory references.  You have to =
sprinkle=20
asm volatile("" ::: "memory");
around like pixie dust to make sure the compiler does things in the =
order you want, nevermind the hardware.

x86 has wildly complex microarchitecture, but the model for a single =
thread is perfectly sensible.  It seems to work like it was in-order. =
OOO isn=E2=80=99t changing that model of execution at all.  I mean you =
care about it when performance tuning, but not for correctness.

Other architectures, ARM, IBM, Alpha, are far worse in this respect.

The real problems are when you have multicore in a shared memory space =
and you have to read all the fine print in the memory ordering chapter =
and understand the subtle differences between LFENCE and SFENCE and =
MFENCE.  I get that, but I also think shared memory is a failed =
experiment and we should have gone with distributed memory and clusters =
and message passing.  It is possible for mortals to program those.    =
Regular folks can make 1000 rank MPI programs work, where almost noone =
other than Maurice Herlihy or like that can reason about locks and =
threads and shared data structures.

My wish for a better world is to integrate messaging into the =
architecture rather than have an I/O device model for communications.  =
It is criminal that machine to machine comms are still stuck at 800 =
nanoseconds or so latency.  It takes 200 instructions or so to send a =
message under the best circumstances and a similar number to receive it, =
plus bus, adapter, wire, and switch time.=20

-L




--Apple-Mail=_FAA2CFFE-3F2D-41D2-8B2C-CB1E94745AC3
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=utf-8

<html><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: space; =
-webkit-line-break: after-white-space;" class=3D"">I don=E2=80=99t =
really think out-of-order in hardware causes trouble for programmers =
that wasn=E2=80=99t already there when you use -O3. &nbsp;Compilers will =
already promote memory to registers and do interprocedural optimization =
and reorder memory references. &nbsp;You have to sprinkle&nbsp;<div =
class=3D""><pre class=3D"lang-c s-code-block" style=3D"margin-top: 0px; =
margin-bottom: calc(var(--s-prose-spacing) + 0.4em); padding: 12px; =
border: 0px; font-variant-ligatures: normal; font-variant-numeric: =
inherit; font-variant-east-asian: inherit; font-stretch: inherit; =
line-height: 1.30769; font-family: var(--ff-mono); font-size: 13px; =
vertical-align: baseline; box-sizing: inherit; width: auto; max-height: =
600px; overflow: auto; border-top-left-radius: 5px; =
border-top-right-radius: 5px; border-bottom-right-radius: 5px; =
border-bottom-left-radius: 5px; color: var(--highlight-color); =
overflow-wrap: normal; orphans: 2; widows: 2; text-decoration-thickness: =
initial;"><code class=3D"language-c hljs" style=3D"margin: 0px; padding: =
0px; border: 0px; font-style: inherit; font-variant-ligatures: inherit; =
font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; white-space: inherit;"><span class=3D"hljs-keyword" =
style=3D"margin: 0px; padding: 0px; border: 0px; font-style: inherit; =
font-variant-ligatures: inherit; font-variant-position: inherit; =
font-variant-caps: inherit; font-variant-numeric: inherit; =
font-variant-alternates: inherit; font-variant-east-asian: inherit; =
font-stretch: inherit; line-height: inherit; font-family: inherit; =
vertical-align: baseline; box-sizing: inherit; color: =
var(--highlight-keyword);">asm</span> <span class=3D"hljs-title =
function_" style=3D"margin: 0px; padding: 0px; border: 0px; font-style: =
inherit; font-variant-ligatures: inherit; font-variant-position: =
inherit; font-variant-caps: inherit; font-variant-numeric: inherit; =
font-variant-alternates: inherit; font-variant-east-asian: inherit; =
font-stretch: inherit; line-height: inherit; font-family: inherit; =
vertical-align: baseline; box-sizing: inherit; color: =
var(--highlight-literal);">volatile</span><span class=3D"hljs-params" =
style=3D"margin: 0px; padding: 0px; border: 0px; font-style: inherit; =
font-variant-ligatures: inherit; font-variant-position: inherit; =
font-variant-caps: inherit; font-variant-numeric: inherit; =
font-variant-alternates: inherit; font-variant-east-asian: inherit; =
font-stretch: inherit; line-height: inherit; font-family: inherit; =
vertical-align: baseline; box-sizing: inherit;">(<span =
class=3D"hljs-string" style=3D"margin: 0px; padding: 0px; border: 0px; =
font-style: inherit; font-variant-ligatures: inherit; =
font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; color: var(--highlight-variable);">""</span> ::: <span =
class=3D"hljs-string" style=3D"margin: 0px; padding: 0px; border: 0px; =
font-style: inherit; font-variant-ligatures: inherit; =
font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; color: var(--highlight-variable);">"memory"</span>)</span>;
</code></pre></div><div class=3D""><code class=3D"language-c hljs" =
style=3D"margin: 0px; padding: 0px; border: 0px; font-style: inherit; =
font-variant-ligatures: inherit; font-variant-position: inherit; =
font-variant-caps: inherit; font-variant-numeric: inherit; =
font-variant-alternates: inherit; font-variant-east-asian: inherit; =
font-stretch: inherit; line-height: inherit; font-family: inherit; =
vertical-align: baseline; box-sizing: inherit; white-space: =
inherit;">around like pixie dust to make sure the compiler does things =
in the order you want, nevermind the hardware.</code></div><div =
class=3D""><code class=3D"language-c hljs" style=3D"margin: 0px; =
padding: 0px; border: 0px; font-style: inherit; font-variant-ligatures: =
inherit; font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; white-space: inherit;"><br class=3D""></code></div><div =
class=3D""><code class=3D"language-c hljs" style=3D"margin: 0px; =
padding: 0px; border: 0px; font-style: inherit; font-variant-ligatures: =
inherit; font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; white-space: inherit;">x86 has wildly complex =
microarchitecture, but the model for a single thread is perfectly =
sensible. &nbsp;It seems to work like it was in-order. OOO isn=E2=80=99t =
changing that model of execution at all. &nbsp;I mean you care about it =
when performance tuning, but not for correctness.</code></div><div =
class=3D""><code class=3D"language-c hljs" style=3D"margin: 0px; =
padding: 0px; border: 0px; font-style: inherit; font-variant-ligatures: =
inherit; font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; white-space: inherit;"><br class=3D""></code></div><div =
class=3D""><code class=3D"language-c hljs" style=3D"margin: 0px; =
padding: 0px; border: 0px; font-style: inherit; font-variant-ligatures: =
inherit; font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; white-space: inherit;">Other architectures, ARM, IBM, Alpha, =
are far worse in this respect.</code></div><div class=3D""><code =
class=3D"language-c hljs" style=3D"margin: 0px; padding: 0px; border: =
0px; font-style: inherit; font-variant-ligatures: inherit; =
font-variant-position: inherit; font-variant-caps: inherit; =
font-variant-numeric: inherit; font-variant-alternates: inherit; =
font-variant-east-asian: inherit; font-stretch: inherit; line-height: =
inherit; font-family: inherit; vertical-align: baseline; box-sizing: =
inherit; white-space: inherit;"><br class=3D""></code></div><div =
class=3D"">The real problems are when you have multicore in a shared =
memory space and you have to read all the fine print in the memory =
ordering chapter and understand the subtle differences between LFENCE =
and SFENCE and MFENCE. &nbsp;I get that, but I also think shared memory =
is a failed experiment and we should have gone with distributed memory =
and clusters and message passing. &nbsp;It is possible for mortals to =
program those. &nbsp; &nbsp;Regular folks can make 1000 rank MPI =
programs work, where almost noone other than Maurice Herlihy or like =
that can reason about locks and threads and shared data =
structures.</div><div class=3D""><br class=3D""></div><div class=3D"">My =
wish for a better world is to integrate messaging into the architecture =
rather than have an I/O device model for communications. &nbsp;It is =
criminal that machine to machine comms are still stuck at 800 =
nanoseconds or so latency. &nbsp;It takes 200 instructions or so to send =
a message under the best circumstances and a similar number to receive =
it, plus bus, adapter, wire, and switch time.&nbsp;</div><div =
class=3D""><br class=3D""></div><div class=3D"">-L</div><div =
class=3D""><br class=3D""></div><div class=3D""><br class=3D""></div><div =
class=3D""><br class=3D""></div></body></html>=

--Apple-Mail=_FAA2CFFE-3F2D-41D2-8B2C-CB1E94745AC3--
