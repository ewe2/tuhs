From: steffen@sdaoden.eu (Steffen Nurpmeso)
Date: Wed, 04 Jan 2017 18:08:48 +0100
Subject: [TUHS] Unix stories
In-Reply-To: <1483548842.1612851.837252537.064CFDA2@webmail.messagingengine.com>
References: <5257291ca0a0e1d80c646cab730129d589c5d707@webmail.yaccman.com>
 <42922C34-342F-4E86-83E2-3618129139B2@tfeb.org>
 <20170103004959.GA29088@mcvoy.com>
 <20170104130434.NQFzLGpVU%steffen@sdaoden.eu>
 <1483538831.1573798.837053385.2EB8CAC9@webmail.messagingengine.com>
 <012e01d2669a$6b2f89c0$418e9d40$@ronnatalie.com>
 <1483545543.1599443.837188969.6EAAD62B@webmail.messagingengine.com>
 <20170104163017.XtxbzN7PQ%steffen@sdaoden.eu>
 <1483547544.1606930.837228297.014AB061@webmail.messagingengine.com>
 <20170104165120.rYUyVGovj%steffen@sdaoden.eu>
 <1483548842.1612851.837252537.064CFDA2@webmail.messagingengine.com>
Message-ID: <20170104170848.SHZpzJfXR%steffen@sdaoden.eu>

Random832 <random832 at fastmail.com> wrote:
 |On Wed, Jan 4, 2017, at 11:51, Steffen Nurpmeso wrote:
 |> Ok, but that quite clearly was not what i have meant.  I meant
 |> that if you program in assembler, well, all those newer assembler
 |> languages that i have seen, the target of an operation is the
 |> target of a store, and say if it is a register that is also one of
 |> the sources, it means nothing, from the language side.
 |
 |Yes but you are storing *twice*, two different values, to the same
 |variable, in the same statement. There's no operation in any assembler
 |language that does that, and at this point I honestly don't know what
 |value you expect to 'win'.

Hm.  Yet this is exactly what i want?  (Hihi.  Don't be offended,
i really have already forgotten the example.  It was something
like "*i = j + *i++" or the like..)

 |>  ARM has
 |> even predicates that perform operations on that value before the
 |> store, even if the source is the same as the destination.  It
 |> simply strives me absurd that i, in C, cannot simply say what
 |> i want
 |
 |Why do you think that "i = ... + ++i" is a reasonable way to say what
 |you want?

Man, i write it down, and it even stands several code iterations?
That must be it, then!

 |> and let the C compiler with all its knowledge of the target
 |> system decide what to do about it.

Ciao.

--steffen

