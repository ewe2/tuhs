Return-Path: <tuhs-bounces@minnie.tuhs.org>
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.2
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id 64fbccd0
	for <ml@inbox.vuxu.org>;
	Thu, 20 Feb 2020 17:49:26 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 84B209CB93; Fri, 21 Feb 2020 03:49:25 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 543C89CB79;
	Fri, 21 Feb 2020 03:49:04 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id D10759CB79; Fri, 21 Feb 2020 03:49:01 +1000 (AEST)
Received: from cfcl.com (cpepool4cmts2-144.sanbrunocable.com [24.143.248.144])
 by minnie.tuhs.org (Postfix) with ESMTP id 7066C9CB78
 for <tuhs@minnie.tuhs.org>; Fri, 21 Feb 2020 03:49:01 +1000 (AEST)
Received: from spot.local (spot.local [IPv6:fe80::cb8:77d2:18e:cd21])
 by cfcl.com (Postfix) with ESMTP id A3B829CB44F
 for <tuhs@minnie.tuhs.org>; Thu, 20 Feb 2020 09:49:00 -0800 (PST)
From: Rich Morin <rdm@cfcl.com>
Content-Type: text/plain;
	charset=us-ascii
Content-Transfer-Encoding: quoted-printable
Mime-Version: 1.0 (Mac OS X Mail 13.0 \(3608.40.2.2.4\))
Date: Thu, 20 Feb 2020 09:48:58 -0800
References: <CAFH29tofawAMrywyW=S5ZW2F-U-1tbOm55+PMN+_vg=uDWFUNg@mail.gmail.com>
 <202002180017.01I0HI0I1415945@darkstar.fourwinds.com>
 <m1j3xUB-0036tPC@more.local>
 <CAC20D2Mv_XqaBi=rx1rOaQLWmp3Ds_r7czG2OJV8nOuC=rrLaw@mail.gmail.com>
 <m1j49OT-0036tRC@more.local> <20200219044444.GO30841@mcvoy.com>
 <CANcLFn6ZFs_tvDv0ckSKTR_q8RSNZF5b7Fnfw-SFKioCRJRbBQ@mail.gmail.com>
 <615399517.295857.1582135972871@email.ionos.co.uk>
 <f88dd839-907f-e5e6-8119-8dc9da0c7ff4@gmail.com>
 <202002200727.01K7RFwj014313@freefriends.org>
 <20200220162308.GK30841@mcvoy.com>
 <20200220172457.80063156E411@mail.bitblocks.com>
To: TUHS main list <tuhs@minnie.tuhs.org>
In-Reply-To: <20200220172457.80063156E411@mail.bitblocks.com>
Message-Id: <0FB634BD-F939-425B-AD22-90291268990C@cfcl.com>
X-Mailer: Apple Mail (2.3608.40.2.2.4)
Subject: Re: [TUHS] man Macro Package and pdfmark
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

FWIW, I've been enjoying Elixir a lot for the past few years.  It's an =
Actor-based, dynamically typed, FP language that runs on the Erlang VM.  =
It has Rubyish syntax, pattern matching, syntactic macros, lightweight =
processes, a message-passing framework, supervision trees, and other =
cool stuff.

I will note, however, that Elixir programming tends to be rather =
different from the stuff I've been doing for the past 50 years.  For =
example, processing pipelines tend to replace sets of nested loops...

-r

> On Feb 20, 2020, at 09:24, Bakul Shah <bakul@bitblocks.com> wrote:
>=20
> On Thu, 20 Feb 2020 08:23:08 -0800 Larry McVoy <lm@mcvoy.com> wrote:
>>=20
>>    Think of it this way: threads are like salt, not like pasta. You
>>    like salt, I like salt, we all like salt. But we eat more pasta.
>=20
> Go is quite salty! Erlang even more so.
>=20
>>    A computer is a state machine. Threads are for people who can't
>>    program state machines.
>=20
> I have written both event based (state machine) and thread
> based programs.  Each style has its pros and cons. Control
> flow is cleaner in threads but managing shared state is
> trickier.  In state machines managing state is easier but
> control flow is a pain.  Not to mention state machine don't
> benefit from multiple h/w threads.

