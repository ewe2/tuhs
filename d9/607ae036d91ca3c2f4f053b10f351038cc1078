X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=HTML_MESSAGE,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.4
Received: (qmail 25441 invoked from network); 14 May 2020 03:09:20 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 14 May 2020 03:09:20 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 5A53C9C66A; Thu, 14 May 2020 13:09:12 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 9C32F9C668;
	Thu, 14 May 2020 13:08:49 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 113229C668; Thu, 14 May 2020 13:08:47 +1000 (AEST)
X-Greylist: delayed 402 seconds by postgrey-1.36 at minnie.tuhs.org;
 Thu, 14 May 2020 13:08:46 AEST
Received: from mail1.g21.pair.com (mail1.g21.pair.com [216.146.195.69])
 by minnie.tuhs.org (Postfix) with ESMTPS id 082599C604
 for <tuhs@minnie.tuhs.org>; Thu, 14 May 2020 13:08:46 +1000 (AEST)
Received: from mail1.g21.pair.com (localhost [127.0.0.1])
 by mail1.g21.pair.com (Postfix) with ESMTP id 33908F1B0A;
 Wed, 13 May 2020 23:02:04 -0400 (EDT)
Received: from [192.168.1.86] (76-231-26-130.lightspeed.sntcca.sbcglobal.net
 [76.231.26.130])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail1.g21.pair.com (Postfix) with ESMTPSA id 07D2CF1B07;
 Wed, 13 May 2020 23:02:03 -0400 (EDT)
Content-Type: multipart/alternative;
 boundary="Apple-Mail=_1F5915AF-DD47-418C-A659-7D8437A3B7A5"
Mime-Version: 1.0 (Mac OS X Mail 12.4 \(3445.104.14\))
From: Paul McJones <paul@mcjones.org>
In-Reply-To: <mailman.1.1589421601.13778.tuhs@minnie.tuhs.org>
Date: Wed, 13 May 2020 20:02:03 -0700
Message-Id: <4D7C0714-D559-4562-ADB5-8A0E313BC28E@mcjones.org>
References: <mailman.1.1589421601.13778.tuhs@minnie.tuhs.org>
To: Dave Horsfall <dave@horsfall.org>
X-Mailer: Apple Mail (2.3445.104.14)
Subject: Re: [TUHS] v7 K&R C
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: tuhs@minnie.tuhs.org
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>


--Apple-Mail=_1F5915AF-DD47-418C-A659-7D8437A3B7A5
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=us-ascii

> On May 13, 2020, at 7:00 PM,Dave Horsfall <dave@horsfall.org> wrote:
>=20
> I never could figure out why Stroustrup implemented that "feature"; =
let's=20
> see, this operator usually means this, except when you use it in that=20=

> situation in which case it means something else.  Now, try debugging =
that.

C continues the tradition begun by Fortran and Algol 60 of overloading =
the arithmetic operators on the various numeric types. C++ allows new =
types to be defined; when a new type obeys the generally understood =
properties of a built-in type, it makes sense to use the same operator =
(or function) for the corresponding operation on the new type (e.g., =
addition on complex numbers, arbitrary-precision integers and rationals, =
polynomials, or matrices).=

--Apple-Mail=_1F5915AF-DD47-418C-A659-7D8437A3B7A5
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=us-ascii

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; =
charset=3Dus-ascii"></head><body style=3D"word-wrap: break-word; =
-webkit-nbsp-mode: space; line-break: after-white-space;" =
class=3D""><div><blockquote type=3D"cite" class=3D""><div class=3D"">On =
May 13, 2020, at 7:00 PM,Dave Horsfall &lt;<a =
href=3D"mailto:dave@horsfall.org" class=3D"">dave@horsfall.org</a>&gt; =
wrote:</div></blockquote><blockquote type=3D"cite" class=3D""><br =
class=3D"Apple-interchange-newline"><div class=3D""><span =
style=3D"caret-color: rgb(0, 0, 0); font-family: Menlo-Regular; =
font-size: 11px; font-style: normal; font-variant-caps: normal; =
font-weight: normal; letter-spacing: normal; text-align: start; =
text-indent: 0px; text-transform: none; white-space: normal; =
word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: =
none; float: none; display: inline !important;" class=3D"">I never could =
figure out why Stroustrup implemented that "feature"; let's<span =
class=3D"Apple-converted-space">&nbsp;</span></span><br =
style=3D"caret-color: rgb(0, 0, 0); font-family: Menlo-Regular; =
font-size: 11px; font-style: normal; font-variant-caps: normal; =
font-weight: normal; letter-spacing: normal; text-align: start; =
text-indent: 0px; text-transform: none; white-space: normal; =
word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: =
none;" class=3D""><span style=3D"caret-color: rgb(0, 0, 0); font-family: =
Menlo-Regular; font-size: 11px; font-style: normal; font-variant-caps: =
normal; font-weight: normal; letter-spacing: normal; text-align: start; =
text-indent: 0px; text-transform: none; white-space: normal; =
word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: =
none; float: none; display: inline !important;" class=3D"">see, this =
operator usually means this, except when you use it in that<span =
class=3D"Apple-converted-space">&nbsp;</span></span><br =
style=3D"caret-color: rgb(0, 0, 0); font-family: Menlo-Regular; =
font-size: 11px; font-style: normal; font-variant-caps: normal; =
font-weight: normal; letter-spacing: normal; text-align: start; =
text-indent: 0px; text-transform: none; white-space: normal; =
word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: =
none;" class=3D""><span style=3D"caret-color: rgb(0, 0, 0); font-family: =
Menlo-Regular; font-size: 11px; font-style: normal; font-variant-caps: =
normal; font-weight: normal; letter-spacing: normal; text-align: start; =
text-indent: 0px; text-transform: none; white-space: normal; =
word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: =
none; float: none; display: inline !important;" class=3D"">situation in =
which case it means something else. &nbsp;Now, try debugging =
that.</span><br style=3D"caret-color: rgb(0, 0, 0); font-family: =
Menlo-Regular; font-size: 11px; font-style: normal; font-variant-caps: =
normal; font-weight: normal; letter-spacing: normal; text-align: start; =
text-indent: 0px; text-transform: none; white-space: normal; =
word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration: =
none;" class=3D""></div></blockquote></div><br class=3D""><div =
class=3D"">C continues the tradition begun by Fortran and Algol 60 of =
overloading the arithmetic operators on the various numeric types. C++ =
allows new types to be defined; when a new type obeys the generally =
understood properties of a built-in type, it makes sense to use the same =
operator (or function) for the corresponding operation on the new type =
(e.g., addition on complex numbers, arbitrary-precision integers and =
rationals, polynomials, or matrices).</div></body></html>=

--Apple-Mail=_1F5915AF-DD47-418C-A659-7D8437A3B7A5--
