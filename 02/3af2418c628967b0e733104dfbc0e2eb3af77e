From: dave@horsfall.org (Dave Horsfall)
Date: Fri, 12 May 2017 07:44:32 +1000 (EST)
Subject: [TUHS] The evolution of Unix facilities and architecture
In-Reply-To: <20170511171100.GA9980@yeono.kjorling.se>
References: <20170511140729.2262B18C09A@mercury.lcs.mit.edu>
 <20170511142142.GA4341@mcvoy.com>
 <CAC20D2M+kTnQJ0+q0EF-RmURTA8aq4R-2w98Ac3Cx9pB_Dc4AA@mail.gmail.com>
 <20170511171100.GA9980@yeono.kjorling.se>
Message-ID: <alpine.BSF.2.20.1705120736210.67621@aneurin.horsfall.org>

On Thu, 11 May 2017, Michael KjÃ¶rling wrote:

> On the flip side, it certainly does beat `char* x, y, z[100];` or `FILE* 
> fpsrc, fpdst;`. I wonder how many aspiring C programmers have been 
> tripped up by constructs like those? It's perfectly reasonable _once you 
> know about it_, but if you don't, then, well...

Am I the only one here who thinks that e.g. a char pointer should be 
"char* cp1, cp2" instead of "char *cp1, *cp2"?  I.e. the fundamental type 
is "char*", not "char", and to this day I still write:

    char*	cp1;
    char*	cp2;

etc, which IMHO makes it clear (which is every programmer's duty).  I used 
to write that way in a previous life, and the boss didn't complain.

-- 
Dave Horsfall DTM (VK2KFU)  "Those who don't understand security will suffer."

