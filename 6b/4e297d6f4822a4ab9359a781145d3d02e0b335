X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	HTML_MESSAGE,MAILING_LIST_MULTI,T_SCC_BODY_TEXT_LINE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 2207 invoked from network); 6 Feb 2022 16:32:18 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 6 Feb 2022 16:32:18 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id AC39A9C0BF; Mon,  7 Feb 2022 02:32:15 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 62D109B8B1;
	Mon,  7 Feb 2022 02:31:59 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (2048-bit key; unprotected) header.d=bsdimp-com.20210112.gappssmtp.com header.i=@bsdimp-com.20210112.gappssmtp.com header.b="eqCM6A0o";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 7FA089B8B1; Mon,  7 Feb 2022 02:31:57 +1000 (AEST)
Received: from mail-ua1-f42.google.com (mail-ua1-f42.google.com
 [209.85.222.42])
 by minnie.tuhs.org (Postfix) with ESMTPS id 445829B68F
 for <tuhs@minnie.tuhs.org>; Mon,  7 Feb 2022 02:31:56 +1000 (AEST)
Received: by mail-ua1-f42.google.com with SMTP id u77so5473300uau.6
 for <tuhs@minnie.tuhs.org>; Sun, 06 Feb 2022 08:31:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=bsdimp-com.20210112.gappssmtp.com; s=20210112;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=bLH7CcTbBLQFUqhGyXrrRdHA4KO4qh87CahZ/taV85o=;
 b=eqCM6A0oWe1dr3KGd4s3Rv9PSErcRY0iK+57ABQAC27oJbG5L/3qSlungisEUHvnYX
 ru5C4Jy8+lNF8u9XMuZ93zkUqh6aNvFAOxNllpNhEo1R/BVfwfFZBcRx3AN3rm7wBgyR
 5z9DvGzqV342Cj+g+m1SQFxS3AOhhkY5verfRptPU2VWp17fd7ktQ5v8vWRE4/tZNmRR
 hmmvV6EJZMb1Q/7e5KuRDCQmbYsMzcvSlpqqPXPmXS+AKqN+CjtT5Lq6CZI3gUQyhSh8
 yWoZJLdBumABhiP0Az5y2/08RkILwrxNaXjpOPEXHEQOMm+BCx1Vhdx7v+l4/Y+CqIkA
 8ozw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=bLH7CcTbBLQFUqhGyXrrRdHA4KO4qh87CahZ/taV85o=;
 b=3i+yRvze7Pxgo/KtGxIbbbEeyFw5K3+iXXn0+NvmCHWTDzkBZrLXdq/sUwCTbF/J7a
 7RJhPyZhD+5JA0svw+8Q6gPpPZ/0JkANWeiYhNjc0E7yk33mIA+5CJlwFEJggrID+bbI
 3KFdeXhKrBb1U2FGDrbjt7PgeVm2nYpo8ULVsoUcnyjwUWM7hyNF4Y39nkcqSqojvQ/y
 XnFM6ZQzO2/koN7oZRcPVqzPBvrj8SOnzHTcvd8sCaOOq/z9dMRfi2Kh1pgms0zyJWI1
 o0MQqaFPItKuZfk6JnlxY7hJJe7GKC9B2b4CwYpvKMMkZ9mzC1sCRNrVQbshdfC7knMD
 ml5Q==
X-Gm-Message-State: AOAM530BbaQqVojnnQQDHj+xgD+hvA22sIe6JmkLrkmStHYLgNqV0PvI
 DaRXta4c2QZYT4JA9olVWQDSGWHsQUUPUFNn0TYenw==
X-Google-Smtp-Source: ABdhPJx+lD5Nw2rARqrgc5PYqVEgftnT7gyX3+p58FamvRN0pVYwMkKfrkgHIlcgFHfG9HnJJWXgtNMezeK9kCmICg0=
X-Received: by 2002:ab0:ae:: with SMTP id 43mr2156502uaj.85.1644165114941;
 Sun, 06 Feb 2022 08:31:54 -0800 (PST)
MIME-Version: 1.0
References: <alpine.DEB.2.21.2202040304380.28373@sd-119843.dedibox.fr>
 <CAD2gp_Rn_==vzUw80geH7ryLwmU+uiCidQVfMLn51HhZV1VHfA@mail.gmail.com>
 <e201372274da4ed9cf75bcaaf43a5d95@firemail.de>
 <1644006490.2458.78.camel@mni.thm.de>
 <20220206005609.GG3045@mcvoy.com>
 <21015c2c-2652-bbc3-dbd7-ad3c31f485a2@gmail.com>
 <CAKzdPgzSH94Xg=XYYKy6J+dWAD+ZVDzUTNE=YNRkyVRH69PJfA@mail.gmail.com>
 <CACYmRNDzrSvbwnAEAVz=REsdqSs675_pkBhi5dm5iWRCwRVo=A@mail.gmail.com>
 <CAKzdPgxQmB8ikjQwExOVnOwGDQrc-N==qzf=ZwhH7Ut-fD6pCg@mail.gmail.com>
 <CACYmRNAKUYwVwbn+mXCAVyySV5sVEbZmN4wvQbQKXx-p+nKM=w@mail.gmail.com>
 <20220206141558.GO3045@mcvoy.com>
In-Reply-To: <20220206141558.GO3045@mcvoy.com>
From: Warner Losh <imp@bsdimp.com>
Date: Sun, 6 Feb 2022 09:31:43 -0700
Message-ID: <CANCZdfqte_yvzs1yOUXDcSq1R4mtrGnwL1PZVWHx0eoWfx2-EQ@mail.gmail.com>
To: Larry McVoy <lm@mcvoy.com>
Content-Type: multipart/alternative; boundary="000000000000a0e96305d75c052f"
Subject: Re: [TUHS] more about Brian...
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--000000000000a0e96305d75c052f
Content-Type: text/plain; charset="UTF-8"

On Sun, Feb 6, 2022 at 7:17 AM Larry McVoy <lm@mcvoy.com> wrote:

> While I _can_ do all the malloc/free stuff myself (and have decades of
> working code to prove it), it's become harder and harder to find other
> people who can.
>

 While it's not too bad to do malloc/free in userspace in single threaded
programs, it gets harder for multi-threaded where you have multiple objects
holding references to an object you might want to free. And to get things
to run fast, you have to use increasingly sophisticated "locking" primitives
to get performance: RCU, lifetime flexibility, etc. Those methods are
hard to get right, which is why most of them include extensive run-time
proofing / asserts to try to catch leaks and other problems.

For kernel work, that adds a whole other level of complexity as well.

I'd love to have all this stuff automatically optimized and correct.
However, the state of the art for alternatives to C aren't there today
for the kernel context. While rust in Linux is a thing, it's not in the
fast path yet. Time will tell if it can grow up to do that or not, and
I'll stop there since it's a rapidly developing area and I'm sure
anything I say about the state of the art when I last looked will
be wrong in some way.

Warner

--000000000000a0e96305d75c052f
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><br></div><br><div class=3D"gmail_quote">=
<div dir=3D"ltr" class=3D"gmail_attr">On Sun, Feb 6, 2022 at 7:17 AM Larry =
McVoy &lt;<a href=3D"mailto:lm@mcvoy.com">lm@mcvoy.com</a>&gt; wrote:<br></=
div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;bor=
der-left:1px solid rgb(204,204,204);padding-left:1ex">While I _can_ do all =
the malloc/free stuff myself (and have decades of<br>
working code to prove it), it&#39;s become harder and harder to find other<=
br>
people who can.<br></blockquote><div><br></div><div>=C2=A0While it&#39;s no=
t too bad to do malloc/free in userspace in single threaded</div><div>progr=
ams, it gets harder for multi-threaded where you have multiple objects</div=
><div>holding references to an object=C2=A0you might want to free. And to g=
et things</div><div>to run fast, you have to use increasingly sophisticated=
 &quot;locking&quot; primitives</div><div>to get performance: RCU, lifetime=
 flexibility, etc. Those methods are</div><div>hard to get right, which is =
why most of them include extensive run-time</div><div>proofing / asserts to=
 try to catch leaks and other problems.</div><div><br></div><div>For kernel=
 work, that adds a whole other level of complexity as well.</div><div><br><=
/div><div>I&#39;d love to have all this stuff automatically optimized and c=
orrect.</div><div>However, the state of the art for alternatives to C aren&=
#39;t there today</div><div>for the kernel context. While rust in Linux is =
a thing, it&#39;s not in the</div><div>fast path yet. Time will tell if it =
can grow up to do that or not, and</div><div>I&#39;ll stop there since it&#=
39;s a rapidly developing area and I&#39;m sure</div><div>anything I say ab=
out the state of the art when I last looked will</div><div>be wrong in some=
 way.</div><div><br></div><div>Warner</div></div></div>

--000000000000a0e96305d75c052f--
