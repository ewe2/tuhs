From: lm@bitmover.com (Larry McVoy)
Date: Thu, 31 Jan 2013 16:28:24 -0800
Subject: [TUHS] History of strncpy
In-Reply-To: <CAC20D2OjbQquS-c5w5L29kw55u=3q+TnuPZYvOZM3ViQua1rQw@mail.gmail.com>
References: <1301231756.AA27240@ivan.Harhan.ORG>
 <B8FAD0BB-8796-4A0F-B441-0688405736E9@ronnatalie.com>
 <20130123214651.GF22559@mercury.ccil.org>
 <20130124060205.GQ24498@bitmover.com>
 <1AFADE66-7F72-4776-8738-EC27748DAF33@ronnatalie.com>
 <EC8F3C9A-F979-4B6E-911A-12947F061FD2@bsdimp.com>
 <CAC20D2OjbQquS-c5w5L29kw55u=3q+TnuPZYvOZM3ViQua1rQw@mail.gmail.com>
Message-ID: <20130201002824.GQ7285@bitmover.com>

On Thu, Jan 24, 2013 at 11:21:36AM -0500, Clem Cole wrote:
> BTW, I 100% agree that the inconsistency of the interfaces, return codes
> sins et al, certainly have damaged us.   But then again, who knew?   Other
> systems (like VMS) which were much more consistent, but were not as
> flexible or "open" died, while C, FORTRAN and UNIX live on.

What we have done, as I think I mentioned, is include NetBSD's stdio in
our product.  Our libc.a is 1.9MB and it includes stdio, a stacking
file system layer, associative arrays, lz4, my version of Oz's sdbm 
that I changed to use mmap so you could read/write in place, Oz's
regex, all the string functions, the tcp layer from LMbench, zlib,
our utility functions including stacking stdio layers that provide
transparent CRC's over the data, transparent compression (both
zlib and lz4), and a paging layer.

All that crud in 1.9MB unstripped.

Personally, I think that stdio ought to evolve, it's really useful but
I don't think people have pushed it hard enough.  You can do some pretty
neat stuff with it if you work a little.
-- 
---
Larry McVoy                lm at bitmover.com           http://www.bitkeeper.com


