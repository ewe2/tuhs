X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	FORGED_MUA_MOZILLA,HTML_MESSAGE,MAILING_LIST_MULTI autolearn=no
	autolearn_force=no version=3.4.4
Received: (qmail 28459 invoked from network); 26 Jan 2022 01:25:30 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 26 Jan 2022 01:25:30 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 3128B9D6A2; Wed, 26 Jan 2022 11:25:28 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 9CEF29D68B;
	Wed, 26 Jan 2022 11:24:58 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=toaster.com header.i=@toaster.com header.b="e6SH1rpe";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 6D4239D68B; Wed, 26 Jan 2022 11:24:54 +1000 (AEST)
Received: from outpost.toaster.com (outpost.toaster.com [164.90.156.247])
 by minnie.tuhs.org (Postfix) with ESMTPS id 2E1929CA9B
 for <tuhs@minnie.tuhs.org>; Wed, 26 Jan 2022 11:24:52 +1000 (AEST)
Received: from [192.168.44.247] (static-47-181-10-112.lsan.ca.frontiernet.net
 [47.181.10.112])
 (using TLSv1.3 with cipher TLS_AES_128_GCM_SHA256 (128/128 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits) server-digest SHA256)
 (No client certificate requested) (Authenticated sender: jay)
 by outpost.toaster.com (Postfix) with ESMTPSA id D241217A1E3
 for <tuhs@minnie.tuhs.org>; Wed, 26 Jan 2022 01:24:51 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=toaster.com;
 s=default; t=1643160291;
 bh=fzMs8vaQoDTDUSv5Tkluwsj7VYKpacWSgXAcqFNEQEo=;
 h=Date:To:From:Subject:From;
 b=e6SH1rpe8FgUIJwjpNQ9FJy+NkIxNX9pL0DiAS6Fl1SbH1mHT52flRTTp+AzFgaJ5
 B7/LxPOZ4xln88vsZgVIFSDewlOYmfj75g0+Yqqv50Gknb0P6zWHpBcyjtJF1V5r8x
 E0/v8OqRTWrfWrSxvh3ticsv0tBNMJZ0ssURp3xUdJsKLaCs/96KmyCpkV8x4KhIB2
 f0jBMg/XePhVIT7bB+oUMV+IXpFMnJGYs2wcPN3lEOSJ+8GKYOpe8wcWF1w3ibUoGw
 34x8+vgtRsxLJ/QKGOXiha4Iwj4eonAFWr+/woItGCbuPoq5Di8mZSWgXqLxVmQZOq
 L5TAQ7RXVODDQ==
Content-Type: multipart/alternative;
 boundary="------------o1T6XdnrWVudElxCNPPoMIGq"
Date: Tue, 25 Jan 2022 17:24:50 -0800
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.1
To: tuhs@minnie.tuhs.org
Content-Language: en-US
Message-Id: <20220126012454.6D4239D68B@minnie.tuhs.org>
Subject: [TUHS] Latest release of retro-fuse
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
From: Jay Logue via TUHS <tuhs@minnie.tuhs.org>
Reply-To: Jay Logue <jay-tuhs9915@toaster.com>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

This is a multi-part message in MIME format.
--------------o1T6XdnrWVudElxCNPPoMIGq
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit

Hi all,

I've been hard at work on my retro-fuse project over the past few 
months, and so I thought I'd update the list with my progress.

I have just released version 7 of retro-fuse on github 
(https://github.com/jaylogue/retro-fuse). This version adds support for 
initializing and mounting 2.9 and 2.11BSD filesystems on modern 
systems.  It also includes fixes for a number of bugs in v6 and v7 support.

Beyond the work on 2.11 support, I also spent a significant amount of 
time building an automated test framework.  I'm a pretty big fan of 
automated testing.  So I'm happy to say that the project now includes a 
series of tests verifying basic file I/O functionality as seen from the 
modern system.  While not exhaustive (because filesystem testing is 
/hard/) the new tests give me reasonable confidence that things are 
behaving as they should.

Additionally (in what was perhaps the most fun part of the project to 
date) I have also created tests to verify the integrity of the generated 
filesystems as seen from the historical systems. In particular, for each 
of the supported Unix versions I've built tests that: launch the os 
under simulation (simh), mount the generated filesystems, verify the 
filesystems using the original integrity check tools (icheck/fsck), and 
enumerate and compare the filesystem contents to that generated on the 
modern system.  As you might imagine, this involved a lot of 
learning--from how to build size-reduced system images from the original 
distribution tapes, to how to implement a modern POSIX cksum command 
with old dev tools. All thoroughly enjoyable.

With this under my belt, I'll probably take a break from retro-fuse to 
concentrate on other things.  If anyone has any problems (or successes!) 
using it, please drop me a line.

--Jay

--------------o1T6XdnrWVudElxCNPPoMIGq
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: 8bit

<html>
  <head>

    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  </head>
  <body>
    Hi all,<br>
    <br>
    I've been hard at work on my retro-fuse project over the past few
    months, and so I thought I'd update the list with my progress.<br>
    <br>
    I have just released version 7 of retro-fuse on github (<a
      moz-do-not-send="true"
      href="https://github.com/jaylogue/retro-fuse"
      class="moz-txt-link-freetext">https://github.com/jaylogue/retro-fuse</a>). 
    This version adds support for initializing and mounting 2.9 and
    2.11BSD filesystems on modern systems.  It also includes fixes for a
    number of bugs in v6 and v7 support.<br>
    <br>
    Beyond the work on 2.11 support, I also spent a significant amount
    of time building an automated test framework.  I'm a pretty big fan
    of automated testing.  So I'm happy to say that the project now
    includes a series of tests verifying basic file I/O functionality as
    seen from the modern system.  While not exhaustive (because
    filesystem testing is <i>hard</i>) the new tests give me reasonable
    confidence that things are behaving as they should.<br>
    <br>
    Additionally (in what was perhaps the most fun part of the project
    to date) I have also created tests to verify the integrity of the
    generated filesystems as seen from the historical systems. In
    particular, for each of the supported Unix versions I've built tests
    that: launch the os under simulation (simh), mount the generated
    filesystems, verify the filesystems using the original integrity
    check tools (icheck/fsck), and enumerate and compare the filesystem
    contents to that generated on the modern system.  As you might
    imagine, this involved a lot of learning--from how to build
    size-reduced system images from the original distribution tapes, to
    how to implement a modern POSIX cksum command with old dev tools. 
    All thoroughly enjoyable.<br>
    <br>
    With this under my belt, I'll probably take a break from retro-fuse
    to concentrate on other things.  If anyone has any problems (or
    successes!) using it, please drop me a line.<br>
    <br>
    --Jay<br>
    <br>
  </body>
</html>

--------------o1T6XdnrWVudElxCNPPoMIGq--
