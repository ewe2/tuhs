X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_ADSP_CUSTOM_MED,
	DKIM_INVALID,DKIM_SIGNED,FREEMAIL_FROM,HTML_FONT_LOW_CONTRAST,
	HTML_MESSAGE,MAILING_LIST_MULTI autolearn=ham autolearn_force=no
	version=3.4.4
Received: (qmail 19959 invoked from network); 25 Oct 2022 20:07:04 -0000
Received: from minnie.tuhs.org (50.116.15.146)
  by inbox.vuxu.org with ESMTPUTF8; 25 Oct 2022 20:07:04 -0000
Received: from minnie.tuhs.org (localhost [IPv6:::1])
	by minnie.tuhs.org (Postfix) with ESMTP id 78D3140F26;
	Wed, 26 Oct 2022 06:06:57 +1000 (AEST)
Received: from mail-oi1-f181.google.com (mail-oi1-f181.google.com [209.85.167.181])
	by minnie.tuhs.org (Postfix) with ESMTPS id 3873840154
	for <tuhs@tuhs.org>; Wed, 26 Oct 2022 06:06:53 +1000 (AEST)
Received: by mail-oi1-f181.google.com with SMTP id o64so15749926oib.12
        for <tuhs@tuhs.org>; Tue, 25 Oct 2022 13:06:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=cc:to:subject:message-id:date:from:in-reply-to:references
         :mime-version:from:to:cc:subject:date:message-id:reply-to;
        bh=nMOgCx7PurORXiP8gftK8JnZUAAro40IHgs5dzWdoGY=;
        b=UwmI8tyqNhZALlKuaK/blJINdw4XkZTd6ccPvFy+yR5W3NUt6iyiFm/zE8veLtn6Vz
         hADt1I1q2QKFaAWaZ0pV1y3pZ/jOPII7fimr+WJhx+IMwXjDoNPBqVVCYKNao2MljlTy
         uhn5pZUK/34YaqKdfgY8hKl/v3yqFYlE+wKE3s8kuLT6fZ6Dh7ohTdSqKxqhF5sc66+X
         G9l/V4Q/Hom8ls/54Ih/mR5XFaYC2YrnNE0Yd8KzdMNQvH31v8xYieP3RIj8aVR8AraJ
         f+aQNVHwUQ5ZTM2xExp10Bcne7Lpk9AjM3bkEC3uyW2yzG0xewYgD8AUYrAHleVz/Ucc
         Mu/g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=cc:to:subject:message-id:date:from:in-reply-to:references
         :mime-version:x-gm-message-state:from:to:cc:subject:date:message-id
         :reply-to;
        bh=nMOgCx7PurORXiP8gftK8JnZUAAro40IHgs5dzWdoGY=;
        b=LIO5l+iSSBiZsAobVSFe5BQ9sLKyxWwlg5xV3RUoPDHMRl6TzFIKzocgllU0/ML0fC
         tLV8JGj/Qe59D0BsRAxaNG63/iTh8aBF9TzinvzHsC2kgtUm4/CWNwvNMN3twpO1g1hm
         q8qVSIxCqFXmAI08Ag7Urw6QRFGUFduBL1nW8ut2DBqeJHPHzgTVtjXYkzpYUCQPjMlF
         IE4tPhJQIaI3zuTDU7hm6Bgk6YER9DHziT5kFISmpEuBT/lqLm4YY4YqdF8z1E5MgDN9
         cWXLzXuvdsHTDY2qiaBu/nbEGKpDTlCq5/YHegylyz1Lqh5Di1Iyrbueg2ZeDGczT1Mo
         ptsA==
X-Gm-Message-State: ACrzQf03PVhsHYJ72VTWw8gbGe+4gRo2oQLbzozsFlj2WsGZnZTrZ0ee
	VLnGvIwllc6LKCasR4f3w6niyRguNR9oM1o3t5eS1ibGkAo=
X-Google-Smtp-Source: AMsMyM5R+JSReNxFAYs/KFZDVYT610zZSehg4nv8YGUo6Bilz1WDTMA5H1VOA8EO/3OJjDsYF3OHHC71ukLZEQO+Aos=
X-Received: by 2002:aca:aa0a:0:b0:355:39e1:ee16 with SMTP id
 t10-20020acaaa0a000000b0035539e1ee16mr19703359oie.175.1666728352361; Tue, 25
 Oct 2022 13:05:52 -0700 (PDT)
MIME-Version: 1.0
References: <CAP6exY+sG_kb2mMfhJvkbUzGk47U4T0n7Odh=EPxKwN-DSOdHw@mail.gmail.com>
 <Y1cj48eAYbZSFZNx@indra.papnet.eu> <Y1ef1KWMgmX/NXZh@indra.papnet.eu>
 <EBEBFB0A-7360-4C3E-B26F-71977200639C@serissa.com> <CAC20D2OQavK4C5FXxJeMkyFdp8XwXUWacJL-JVXMCsA=ZP1JGg@mail.gmail.com>
In-Reply-To: <CAC20D2OQavK4C5FXxJeMkyFdp8XwXUWacJL-JVXMCsA=ZP1JGg@mail.gmail.com>
From: Marc Donner <marc.donner@gmail.com>
Date: Tue, 25 Oct 2022 16:05:41 -0400
Message-ID: <CALQ0xCDfGNXr=nSF_K9w1Th3VzzUihqjUQXNu=rPzZW1dRbDrQ@mail.gmail.com>
To: Clem Cole <clemc@ccc.com>
Content-Type: multipart/alternative; boundary="0000000000006133fb05ebe16f25"
Message-ID-Hash: VA5RXT2ZXZ4KGZX7ZQDUIRLAAHXNL2T7
X-Message-ID-Hash: VA5RXT2ZXZ4KGZX7ZQDUIRLAAHXNL2T7
X-MailFrom: marc.donner@gmail.com
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; header-match-tuhs.tuhs.org-0; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
CC: The Eunuchs Hysterical Society <tuhs@tuhs.org>
X-Mailman-Version: 3.3.6b1
Precedence: list
Subject: [TUHS] Re: who invented the link register
List-Id: The Unix Heritage Society mailing list <tuhs.tuhs.org>
Archived-At: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/message/VA5RXT2ZXZ4KGZX7ZQDUIRLAAHXNL2T7/>
List-Archive: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/>
List-Help: <mailto:tuhs-request@tuhs.org?subject=help>
List-Owner: <mailto:tuhs-owner@tuhs.org>
List-Post: <mailto:tuhs@tuhs.org>
List-Subscribe: <mailto:tuhs-join@tuhs.org>
List-Unsubscribe: <mailto:tuhs-leave@tuhs.org>

--0000000000006133fb05ebe16f25
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

There was a guy at IBM research who had a patent framed on his wall that he
claimed was for indirect addressing.  Sadly, I don't remember his name.
I'll ask Peter Capek if he remembers who it was.

On the other hand, I'm now reading a book called "Turing's Cathedral" that
goes into considerable length talking about what is essentially indirect
addressing in the context of the evolution of the Von Neumann model and its
limitations.
=3D=3D=3D=3D=3D
nygeek.net
mindthegapdialogs.com/home <https://www.mindthegapdialogs.com/home>


On Tue, Oct 25, 2022 at 2:27 PM Clem Cole <clemc@ccc.com> wrote:

> I agree that sounds pretty conclusive. I knew Wheeler had used his JUMP
> with EDSAC, I had been wondering if Wilkes had something in his machine
> (EDSAC II) - sounds like it was proposed. But I would not be surprised if
> the idea was Wilkes, but Whirlwind implemented it.   They all talked to
> each other.
>
> With apologies to Tom Lehrer ...
>
> *"And then I write*
> *By morning, night,*
> *And afternoon,*
> *And pretty soon*
> *My name in Dnepropetrovsk is cursed, When he finds out I publish first."=
*
>
> =E1=90=A7
>
> On Tue, Oct 25, 2022 at 1:01 PM Lawrence Stewart <stewart@serissa.com>
> wrote:
>
>> I=E2=80=99ve just spent a fun hour looking at the old Whirlwind document=
s.  I
>> think I agree with Angelo.
>>
>> The 1947 block diagrams and time-pulse charts show that the original =E2=
=80=9CSP=E2=80=9D
>> (subprogram) instruction transferred the low 11 bits of the instruction
>> directly to the program counter.  They do not show the old program count=
er
>> being saved in the AR register, nor is there yet the =E2=80=9CTA=E2=80=
=9D (transfer
>> address) instruction to save the AR register to memory.
>>
>> Evidently both these new features, which together provide a branch and
>> link function were likely described in memo M-647, which is not scanned
>> anywhere I can find.  It is called =E2=80=9CSome new orders for WWI"
>>
>> There was already logic for the program counter to drive the bus, and
>> logic to capture the bus into the AR register, so the modification to SP=
 to
>> save the old program counter was likely pretty easy: drive the bus from =
the
>> program counter, and capture it in AR, just by adding some new diodes to
>> the sequencer.
>>
>> Adding the Transfer Address instruction was likely also pretty easy,
>> since there was a way for the AR register to drive the bus.
>>
>> With the new SP and TA, one would use SP to call a subroutine, and the
>> first instruction of any subroutine would be TA to save the return addre=
ss
>> into the final location of the subroutine.  (TA only modified the low 11
>> bits of the 16 bit location)
>>
>> Before these instructions, a subroutine call would require one additiona=
l
>> memory location, to hold the return address for each point of call, and =
one
>> additional instruction, one to load the return address into the accumula=
tor
>> and one to store it into the code at the end of the subroutine. (The lat=
ter
>> could be the first instruction of the subroutine.)
>>
>> Originally I thought that maybe David Wheeler invented the Link register=
,
>> since he=E2=80=99s often credited with inventing the subroutine, but it =
looks like
>> the particular thing he did was the idea of the =E2=80=9CWheeler Jump=E2=
=80=9D where code
>> explicitly stores the return address into the instruction at the end of =
the
>> subroutine.  That idea was used in Whirlwind as well.  EDSAC I did not h=
ave
>> link, but it was proposed for EDSAC II.  Whirlwind was likely first to
>> implement.
>>
>> > On 2022, Oct 25, at 4:35 AM, Angelo Papenhoff <aap@papnet.eu> wrote:
>> >
>> > On 25/10/22, Angelo Papenhoff wrote:
>> >> Might be earlier than this, I just happen to know the Whirlwind
>> somewhat
>> >> well. It's late 40s machine, so you probably won't find anything *muc=
h*
>> >> older.
>> >
>> > Addendum: the original report from 1947 does not describe this behavio=
ur
>> > yet. The change came in oct. 1948. M-668 mentions it and refers to
>> M-647,
>> > which however is not available online.
>> > So the concept of saving the resturn address in another register is at
>> > least as old as oct. 1948, but again I wouldn't be surprised if some
>> > even slightly earlier computer had it too.
>> >
>> > aap
>>
>>

--0000000000006133fb05ebe16f25
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_default" style=3D"font-family:verdana,=
sans-serif;font-size:small">There was a guy at IBM research who had a paten=
t framed on his wall that he claimed was for indirect addressing.=C2=A0 Sad=
ly, I don&#39;t remember his name.=C2=A0 I&#39;ll ask Peter Capek if he rem=
embers who it was.</div><div class=3D"gmail_default" style=3D"font-family:v=
erdana,sans-serif;font-size:small"><br></div><div class=3D"gmail_default" s=
tyle=3D"font-family:verdana,sans-serif;font-size:small">On the other hand, =
I&#39;m now reading a book called &quot;Turing&#39;s Cathedral&quot; that g=
oes into considerable length talking about what is essentially indirect add=
ressing in the context of the evolution of the Von Neumann model and its li=
mitations.</div><div><div dir=3D"ltr" class=3D"gmail_signature" data-smartm=
ail=3D"gmail_signature"><div dir=3D"ltr"><div>=3D=3D=3D=3D=3D<br><a href=3D=
"http://nygeek.net" target=3D"_blank">nygeek.net</a></div><div><a href=3D"h=
ttps://www.mindthegapdialogs.com/home" target=3D"_blank">mindthegapdialogs.=
com/home</a><br></div></div></div></div><br></div><br><div class=3D"gmail_q=
uote"><div dir=3D"ltr" class=3D"gmail_attr">On Tue, Oct 25, 2022 at 2:27 PM=
 Clem Cole &lt;<a href=3D"mailto:clemc@ccc.com">clemc@ccc.com</a>&gt; wrote=
:<br></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.=
8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"lt=
r"><div class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-s=
erif">I agree that sounds pretty conclusive. I knew Wheeler had used his JU=
MP with EDSAC, I had been wondering if Wilkes had something in his machine =
(EDSAC II) - sounds like it was proposed. But I would not be surprised if t=
he idea was Wilkes, but Whirlwind implemented it.=C2=A0 =C2=A0They all talk=
ed to each other.</div><div class=3D"gmail_default" style=3D"font-family:ar=
ial,helvetica,sans-serif"><br></div><div class=3D"gmail_default" style=3D"f=
ont-family:arial,helvetica,sans-serif">With apologies to Tom Lehrer ...</di=
v><blockquote style=3D"margin:0px 0px 0px 40px;border:none;padding:0px"><di=
v class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">=
<i><font color=3D"#0000ff">&quot;And then I write</font></i></div><div clas=
s=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif"><i><fo=
nt color=3D"#0000ff">By morning, night,</font></i></div><div class=3D"gmail=
_default" style=3D"font-family:arial,helvetica,sans-serif"><i><font color=
=3D"#0000ff">And afternoon,</font></i></div><div class=3D"gmail_default" st=
yle=3D"font-family:arial,helvetica,sans-serif"><i><font color=3D"#0000ff">A=
nd pretty soon</font></i></div><div class=3D"gmail_default" style=3D"font-f=
amily:arial,helvetica,sans-serif"><i><font color=3D"#0000ff">My name in Dne=
propetrovsk is cursed, When he finds out I publish first.&quot;</font></i><=
/div><div class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans=
-serif"><br></div></blockquote></div><div hspace=3D"streak-pt-mark" style=
=3D"max-height:1px"><img alt=3D"" style=3D"width: 0px; max-height: 0px; ove=
rflow: hidden;" src=3D"https://mailfoogae.appspot.com/t?sender=3DaY2xlbWNAY=
2NjLmNvbQ%3D%3D&amp;type=3Dzerocontent&amp;guid=3Dac534c77-2ef5-4b6e-b951-7=
f23c137891d"><font color=3D"#ffffff" size=3D"1">=E1=90=A7</font></div><br><=
div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Tue, Oct=
 25, 2022 at 1:01 PM Lawrence Stewart &lt;<a href=3D"mailto:stewart@serissa=
.com" target=3D"_blank">stewart@serissa.com</a>&gt; wrote:<br></div><blockq=
uote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1p=
x solid rgb(204,204,204);padding-left:1ex">I=E2=80=99ve just spent a fun ho=
ur looking at the old Whirlwind documents.=C2=A0 I think I agree with Angel=
o.<br>
<br>
The 1947 block diagrams and time-pulse charts show that the original =E2=80=
=9CSP=E2=80=9D (subprogram) instruction transferred the low 11 bits of the =
instruction directly to the program counter.=C2=A0 They do not show the old=
 program counter being saved in the AR register, nor is there yet the =E2=
=80=9CTA=E2=80=9D (transfer address) instruction to save the AR register to=
 memory.<br>
<br>
Evidently both these new features, which together provide a branch and link=
 function were likely described in memo M-647, which is not scanned anywher=
e I can find.=C2=A0 It is called =E2=80=9CSome new orders for WWI&quot;<br>
<br>
There was already logic for the program counter to drive the bus, and logic=
 to capture the bus into the AR register, so the modification to SP to save=
 the old program counter was likely pretty easy: drive the bus from the pro=
gram counter, and capture it in AR, just by adding some new diodes to the s=
equencer.<br>
<br>
Adding the Transfer Address instruction was likely also pretty easy, since =
there was a way for the AR register to drive the bus. <br>
<br>
With the new SP and TA, one would use SP to call a subroutine, and the firs=
t instruction of any subroutine would be TA to save the return address into=
 the final location of the subroutine.=C2=A0 (TA only modified the low 11 b=
its of the 16 bit location)<br>
<br>
Before these instructions, a subroutine call would require one additional m=
emory location, to hold the return address for each point of call, and one =
additional instruction, one to load the return address into the accumulator=
 and one to store it into the code at the end of the subroutine. (The latte=
r could be the first instruction of the subroutine.)<br>
<br>
Originally I thought that maybe David Wheeler invented the Link register, s=
ince he=E2=80=99s often credited with inventing the subroutine, but it look=
s like the particular thing he did was the idea of the =E2=80=9CWheeler Jum=
p=E2=80=9D where code explicitly stores the return address into the instruc=
tion at the end of the subroutine.=C2=A0 That idea was used in Whirlwind as=
 well.=C2=A0 EDSAC I did not have link, but it was proposed for EDSAC II.=
=C2=A0 Whirlwind was likely first to implement.<br>
<br>
&gt; On 2022, Oct 25, at 4:35 AM, Angelo Papenhoff &lt;<a href=3D"mailto:aa=
p@papnet.eu" target=3D"_blank">aap@papnet.eu</a>&gt; wrote:<br>
&gt; <br>
&gt; On 25/10/22, Angelo Papenhoff wrote:<br>
&gt;&gt; Might be earlier than this, I just happen to know the Whirlwind so=
mewhat<br>
&gt;&gt; well. It&#39;s late 40s machine, so you probably won&#39;t find an=
ything *much*<br>
&gt;&gt; older.<br>
&gt; <br>
&gt; Addendum: the original report from 1947 does not describe this behavio=
ur<br>
&gt; yet. The change came in oct. 1948. M-668 mentions it and refers to M-6=
47,<br>
&gt; which however is not available online.<br>
&gt; So the concept of saving the resturn address in another register is at=
<br>
&gt; least as old as oct. 1948, but again I wouldn&#39;t be surprised if so=
me<br>
&gt; even slightly earlier computer had it too.<br>
&gt; <br>
&gt; aap<br>
<br>
</blockquote></div>
</blockquote></div>

--0000000000006133fb05ebe16f25--
