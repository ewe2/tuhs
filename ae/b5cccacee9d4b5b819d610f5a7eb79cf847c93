X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 17469 invoked from network); 4 Feb 2022 22:34:06 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 4 Feb 2022 22:34:06 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id BB3569D4C7; Sat,  5 Feb 2022 08:34:01 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id F2A3695192;
	Sat,  5 Feb 2022 08:33:42 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id AEDD695192; Sat,  5 Feb 2022 08:33:38 +1000 (AEST)
Received: from sdaoden.eu (sdaoden.eu [217.144.132.164])
 by minnie.tuhs.org (Postfix) with ESMTPS id A2FE995111
 for <tuhs@minnie.tuhs.org>; Sat,  5 Feb 2022 08:33:36 +1000 (AEST)
Received: from kent.sdaoden.eu (kent.sdaoden.eu [10.5.0.2])
 by sdaoden.eu (Postfix) with ESMTPS id 5E8E416059;
 Fri,  4 Feb 2022 23:33:34 +0100 (CET)
Received: by kent.sdaoden.eu (Postfix, from userid 1000)
 id DAEB658708; Fri,  4 Feb 2022 23:25:43 +0100 (CET)
Date: Fri, 04 Feb 2022 23:25:43 +0100
Author: Steffen Nurpmeso <steffen@sdaoden.eu>
From: Steffen Nurpmeso <steffen@sdaoden.eu>
To: Hellwig Geisse <hellwig.geisse@mni.thm.de>
Message-ID: <20220204222543.ZU3DO%steffen@sdaoden.eu>
In-Reply-To: <1644006490.2458.78.camel@mni.thm.de>
References: <c0fd1aec-55a8-54a4-94dc-748068d9e15d@gmail.com>
 <202202011537.211FbYSe017204@freefriends.org>
 <20220201155225.5A9541FB21@orac.inputplus.co.uk>
 <202202020747.2127lTTh005669@freefriends.org>
 <7C19F93B-4F21-4BB1-A064-0307D3568DB7@cfcl.com> <1nFWmo-1Gn-00@marmaro.de>
 <CAP2nic37m2aSCffgr8o_J+BkAbnrzFDUaHX9V0brd+L8+PqdPA@mail.gmail.com>
 <CALMnNGjfvtd=6qsmT6kXm3eEBM7OhhGSJ4Wbbjiv+B9P9rLafA@mail.gmail.com>
 <alpine.DEB.2.21.2202040304380.28373@sd-119843.dedibox.fr>
 <CAD2gp_Rn_==vzUw80geH7ryLwmU+uiCidQVfMLn51HhZV1VHfA@mail.gmail.com>
 <e201372274da4ed9cf75bcaaf43a5d95@firemail.de>
 <1644006490.2458.78.camel@mni.thm.de>
Mail-Followup-To: Hellwig Geisse <hellwig.geisse@mni.thm.de>,
 tuhs@minnie.tuhs.org
User-Agent: s-nail v14.9.23-229-gaf530c5f70
OpenPGP: id=EE19E1C1F2F7054F8D3954D8308964B51883A0DD;
 url=https://ftp.sdaoden.eu/steffen.asc; preference=signencrypt
BlahBlahBlah: Any stupid boy can crush a beetle. But all the professors in
 the world can make no bugs.
Subject: Re: [TUHS] more about Brian...
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: tuhs@minnie.tuhs.org
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

Hellwig Geisse wrote in
 <1644006490.2458.78.camel@mni.thm.de>:
 |Hi Thomas,
 |
 |On Fr, 2022-02-04 at 20:45 +0100, Thomas Paulsen wrote:
 |> I tell you one thing: I never ever experienced any problems with
 |> traditional malloc()/free().
 |
 |did you ever write a program which does heavy malloc()/free()
 |on complicated (i.e., shared) data structures *and* runs for
 |days, perhaps weeks? IMO it's very difficult to do this without

Yes.

 |a GC, and you have to exercise quite an amount of discipline
 |to do it right.

And i fail to see the relationship really.
Especially given that all kernels and all daemons i know (he!) are
all written in C.

Object based programming is surely easier to manage, as containers
manage containers manage containers manage whatever allocations.
So you have a very natural chain of life, so to say.

 |> A kernel using GC is a kernel written by inexperienced kids.
 |
 |Well, not exactly. Niklaus Wirth's Oberon kernel (around 1990)
 |used a GC, and it did that quite efficiently.

Well i have no idea of that also really, so i am not saying
anything.  I never liked GC; i looked at the source of "that" C GC
however (yes, i have forgotten the name).

It maybe different to languages like Nim or Lua or, sigh, JAVA, Go
and such environments etc., where possibly every object is
reference counted.  And that where recursive mutexes are declared
evil for performance reasons, and kernel code is full of
ASSERT(is_locked()) stuff.
But this is speculative execution and thus far out of my league.

--steffen
|
|Der Kragenbaer,                The moon bear,
|der holt sich munter           he cheerfully and one by one
|einen nach dem anderen runter  wa.ks himself off
|(By Robert Gernhardt)
