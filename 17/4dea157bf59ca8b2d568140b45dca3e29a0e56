X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	MAILING_LIST_MULTI,T_SCC_BODY_TEXT_LINE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 21685 invoked from network); 6 Feb 2022 06:20:31 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 6 Feb 2022 06:20:31 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 677779BC14; Sun,  6 Feb 2022 16:20:26 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 1F4CB9B7AF;
	Sun,  6 Feb 2022 16:19:59 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=gmail.com header.i=@gmail.com header.b="Oku1w50a";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id DA5AF9B7AF; Sun,  6 Feb 2022 16:19:57 +1000 (AEST)
Received: from mail-pl1-f182.google.com (mail-pl1-f182.google.com
 [209.85.214.182])
 by minnie.tuhs.org (Postfix) with ESMTPS id BFB829B68F
 for <tuhs@minnie.tuhs.org>; Sun,  6 Feb 2022 16:19:56 +1000 (AEST)
Received: by mail-pl1-f182.google.com with SMTP id u12so1629436plq.10
 for <tuhs@minnie.tuhs.org>; Sat, 05 Feb 2022 22:19:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=mime-version:sender:in-reply-to:references:from:date:message-id
 :subject:to:cc;
 bh=J2lHneRoeQh+EkqoOb/BejF4M4L/iqItRrsePH5aYms=;
 b=Oku1w50aibxS0x35TGw9b90b4Oc/l/6olrQLg8vfHPyDxQZtbNNOdVdxawoEfq6Mdc
 P8Xr+udfYLJ3tONDgv1JUKNfVUftgeQmvS4BhIFCtWSKdYgmvJoWqJQGWgxxBotq38Wy
 PuaI0mgSfuLoDXAcUM3JM5U4zKfN58m2cFMNqxmIs/64kpd9xN/KMUk5+5A20J3KNVpO
 tDfS+1p6XVLVH0W16iWsiqWXzTlGxG9MLWKkcFpxZDvPtjrqTdygwmHsYgpNYMd/yMCV
 gsteol6TW3SOYAC1BwTqt2xNTh74gQ56j+5idG0GidQJrZIg1oTXsa3SZQHjetaNfRAe
 nAiw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:mime-version:sender:in-reply-to:references:from
 :date:message-id:subject:to:cc;
 bh=J2lHneRoeQh+EkqoOb/BejF4M4L/iqItRrsePH5aYms=;
 b=iIQioEdTLOlBNxGwWwVfCUc8F0rOFA1IuXxSUQejNS9Iev6YaSj5fCyCKFrG7kBZ5t
 tQWlO9+Ytkx0FSYgYidA0eAN9RlMnXOZ3xVVxtIEI5Z4G0VMIgmq+fiYfHt0zDb21yqN
 gA/xs38bbVLyHayyzQH+X1Vq2zQ90gJgHWr0+M3SlRv8mn2jjUOfnVyKUSZNotofn/U1
 PzFew+eXQID3h1uDQYTmpKgyEAoOq3c0RNUMc+/2PNfjM2M7wZWqJxAA//TmwU8llk82
 jwR5tJ0gWt4o1tmritbTwFwqVFBu+yaTZ7sE0vVOA3KlXpt7ZOjuZX5xp/BZZT+Dzq4C
 kyjA==
X-Gm-Message-State: AOAM531yzB3q1jkAgtR1tLokhjcMtzUtloQT1YCt6EHK0wsliphXCotf
 DPAb1nB1CsuJ4sYgsTXdu6lTia/EHpa6O8Z0Wbo=
X-Google-Smtp-Source: ABdhPJwoDQ7ECWbw3mdjRBzIq39x1dIl98RcB/hZfNaBhy/SsH8FkAu9dAUwf9zI6Akl9RuIQOL56rxHhmilTA9869A=
X-Received: by 2002:a17:90a:ab17:: with SMTP id
 m23mr8120127pjq.212.1644128395644; 
 Sat, 05 Feb 2022 22:19:55 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:a05:6a10:afce:0:0:0:0 with HTTP; Sat, 5 Feb 2022 22:19:55
 -0800 (PST)
In-Reply-To: <CAKzdPgzSH94Xg=XYYKy6J+dWAD+ZVDzUTNE=YNRkyVRH69PJfA@mail.gmail.com>
References: <20220201155225.5A9541FB21@orac.inputplus.co.uk>
 <202202020747.2127lTTh005669@freefriends.org>
 <7C19F93B-4F21-4BB1-A064-0307D3568DB7@cfcl.com>
 <1nFWmo-1Gn-00@marmaro.de>
 <CAP2nic37m2aSCffgr8o_J+BkAbnrzFDUaHX9V0brd+L8+PqdPA@mail.gmail.com>
 <CALMnNGjfvtd=6qsmT6kXm3eEBM7OhhGSJ4Wbbjiv+B9P9rLafA@mail.gmail.com>
 <alpine.DEB.2.21.2202040304380.28373@sd-119843.dedibox.fr>
 <CAD2gp_Rn_==vzUw80geH7ryLwmU+uiCidQVfMLn51HhZV1VHfA@mail.gmail.com>
 <e201372274da4ed9cf75bcaaf43a5d95@firemail.de>
 <1644006490.2458.78.camel@mni.thm.de>
 <20220206005609.GG3045@mcvoy.com>
 <21015c2c-2652-bbc3-dbd7-ad3c31f485a2@gmail.com>
 <CAKzdPgzSH94Xg=XYYKy6J+dWAD+ZVDzUTNE=YNRkyVRH69PJfA@mail.gmail.com>
From: Ed Carp <erc@pobox.com>
Date: Sat, 5 Feb 2022 23:19:55 -0700
X-Google-Sender-Auth: D8-El-tb97eC0Cae3Riv3js0N4Y
Message-ID: <CACYmRNDzrSvbwnAEAVz=REsdqSs675_pkBhi5dm5iWRCwRVo=A@mail.gmail.com>
To: Rob Pike <robpike@gmail.com>
Content-Type: text/plain; charset="UTF-8"
Subject: Re: [TUHS] more about Brian...
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

"it's a lot easier, safer, and robust to let the machine do the memory
accounting"

I disagree. "The machine" is, as you know, is in reality app code
built on top of frameworks built on top of libraries built on top of
more libraries built on top of malloc/free calls. While the automated
testing tools are a lot better than they were when I started coding C
back in 1985, we're still talking about a *lot* of complexity and a
lot of layers of code, and programmers today know far less about
things like boundary conditions, off-by-one bugs, and the like that
bit us in the ass - hard - and so we learned to watch for those sorts
of things.

On 2/5/22, Rob Pike <robpike@gmail.com> wrote:
> Be careful with your castigations. Yes, there is lots of old working code,
> but keep in mind that that code has often not been as widely tested and
> deployed as much of the software that runs today. The fact that it worked
> well on old hardware doesn't mean it will be suitable for modern networked
> remotely administered multicore machines pounded on by millions of people.
>
> And speaking of multicore, it's possible to write code using malloc/free
> that doesn't leak when run concurrently, but it's a lot easier, safer, and
> robust to let the machine do the memory accounting. And the fact that "kids
> today" can't do it doesn't mean they are lazy or failures, it means they
> grew up in a different time. And a lot of them are as capable as you all,
> just in a different environment.
>
> Lately this list has a lot of attitude and prejudice pretending to be
> wisdom and superiority.
>
> -rob
>
>
> On Sun, Feb 6, 2022 at 12:11 PM Will Senn <will.senn@gmail.com> wrote:
>
>> On 2/5/22 6:56 PM, Larry McVoy wrote:
>>
>> On Fri, Feb 04, 2022 at 09:28:10PM +0100, Hellwig Geisse wrote:
>>
>> Hi Thomas,
>>
>> On Fr, 2022-02-04 at 20:45 +0100, Thomas Paulsen wrote:
>>
>> I tell you one thing: I never ever experienced any problems with
>> traditional malloc()/free().??
>>
>> did you ever write a program which does heavy malloc()/free()
>> on complicated (i.e., shared) data structures *and* runs for
>> days, perhaps weeks? IMO it's very difficult to do this without
>> a GC, and you have to exercise quite an amount of discipline
>> to do it right.
>>
>> I've done this and I've employed people who have done this.  We're
>> a dieing breed, the focus seems to be on programming languages and
>> tools for idiots.  People don't want to learn the discipline it takes
>> to work with malloc()/free().  It's sad.
>>
>>
>> I completely agree. This is ridiculous. Do modern programmer's seriously
>> think that the old code wasn't complex or robust? Sheesh, there's code
>> out
>> there that has run through more millions of transactions an hour for more
>> years than most of these folks have been alive. There's also code that's
>> been running without any updates, for decades. Most code written by the
>> newbreed won't run for a month without surfacing dozens of bugs. Margaret
>> Hamilton would prolly have some choice words for these folks.
>>
>>
>>
>
