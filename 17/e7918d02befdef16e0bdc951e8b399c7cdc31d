X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=LOTS_OF_MONEY,
	MAILING_LIST_MULTI,T_SCC_BODY_TEXT_LINE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 15091 invoked from network); 5 Sep 2022 23:49:12 -0000
Received: from minnie.tuhs.org (50.116.15.146)
  by inbox.vuxu.org with ESMTPUTF8; 5 Sep 2022 23:49:12 -0000
Received: from minnie.tuhs.org (localhost [IPv6:::1])
	by minnie.tuhs.org (Postfix) with ESMTP id 9CF6240E4C;
	Tue,  6 Sep 2022 09:49:05 +1000 (AEST)
Received: from pasta.tip.net.au (pasta.tip.net.au [203.10.76.2])
	by minnie.tuhs.org (Postfix) with ESMTPS id 6932A4023F
	for <tuhs@tuhs.org>; Tue,  6 Sep 2022 09:48:54 +1000 (AEST)
Received: from [192.168.1.2] (unknown [203.7.122.114])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mailhost.tip.net.au (Postfix) with ESMTPSA id 4MM4w60NVkz9QBQ;
	Tue,  6 Sep 2022 09:48:20 +1000 (AEST)
From: steve jenkin <sjenkin@canb.auug.org.au>
Content-Type: text/plain;
	charset=utf-8
Content-Transfer-Encoding: quoted-printable
Mime-Version: 1.0 (Mac OS X Mail 12.4 \(3445.104.21\))
Date: Tue, 6 Sep 2022 09:48:16 +1000
Message-Id: <453CCF20-3A01-4655-A956-149EDC08FA36@canb.auug.org.au>
To: TUHS <tuhs@tuhs.org>
X-Mailer: Apple Mail (2.3445.104.21)
Message-ID-Hash: C7TZDDICX3666FXAXXEVD2FTTHD43QY5
X-Message-ID-Hash: C7TZDDICX3666FXAXXEVD2FTTHD43QY5
X-MailFrom: sjenkin@canb.auug.org.au
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; header-match-tuhs.tuhs.org-0; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
X-Mailman-Version: 3.3.6b1
Precedence: list
Subject: [TUHS] Has this been discussed on-list? How Unix changed Software. 
List-Id: The Unix Heritage Society mailing list <tuhs.tuhs.org>
Archived-At: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/message/C7TZDDICX3666FXAXXEVD2FTTHD43QY5/>
List-Archive: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/>
List-Help: <mailto:tuhs-request@tuhs.org?subject=help>
List-Owner: <mailto:tuhs-owner@tuhs.org>
List-Post: <mailto:tuhs@tuhs.org>
List-Subscribe: <mailto:tuhs-join@tuhs.org>
List-Unsubscribe: <mailto:tuhs-leave@tuhs.org>

I=E2=80=99ve been looking at this question for a time and thought it =
could=E2=80=99ve appeared on the TUHS list - but don=E2=80=99t have an =
idea of the search terms to use on the list.

Perhaps someone suggest some to me.

As a starting point, below is what John Lions wrote on a similar topic =
in 1978. Conspicuously, =E2=80=9CSecurity=E2=80=9D is missing, though =
=E2=80=9CReliability & Maintenance=E2=80=9D would encompass the idea.

With hindsight, I=E2=80=99d suggest (Research) Unix took a very strong =
stance on =E2=80=9CTechnical Debt=E2=80=9D - it was small, clean & =
efficient, even elegant. And =E2=80=98shipped' with zero known bugs.

It didn=E2=80=99t just bring the Unix kernel to many architectures, the =
same tools were applied to create what we now call =E2=80=9COpen =
Source=E2=80=9D in User land:

 - Multi-platform / portable
	- the very act of porting software to diverse architectures =
uncovered new classes of bugs and implicit assumptions. Big- & =
Little-endian were irrelevant or unknown Before Unix.
 - full source
 - compatibility layers via=20
 - written in common, well-known, well-supported languages [ solving the =
maintenance & update problem ]
 - standard, portable =E2=80=9Ctoolchains=E2=80=9D
	 - shell, make, compiler, library tools for system linker, =
documentation & doc reading tools
	 -  distribution systems including test builds, issue / fault =
reporting & tracking

An emergent property is "Good Security=E2=80=9D, both by Design and by =
(mostly) error-free implementations.

In the Epoch Before Unix (which started when exactly?), there was a lot =
of Shared Software, but very little that could be mechanically ported to =
another architecture.
Tools like QED and ROFF were reimplemented on multiple platforms, not =
=E2=80=98ported=E2=80=99 in current lingo.
There are still large, complex FORTRAN libraries shared as source.

There=E2=80=99s an important distinction between =E2=80=9COpen=E2=80=9D =
and =E2=80=9CFree=E2=80=9D : cost & availability.

We=E2=80=99ve gone on to have broadband near universally available with =
easy to use Internet collaboration tools - e.g. =E2=80=9Cgit=E2=80=9D, =
=E2=80=9Cmercurial=E2=80=9D and =E2=80=9CSubversion=E2=80=9D just as =
CVS=E2=80=99s.

The Unix-created Open Source concept broke Vendor Lock-in & erased most =
=E2=80=9CSilos=E2=80=9D.
The BSD TCP/IP stack, and Berkeley sockets library, were sponsored by =
DARPA, and made freely available to vendors as source code.
Similarly, important tools for SMTP and DNS were freely available as =
Source Code, both speeding the implementation of Internet services and =
providing =E2=80=9Cout of the box=E2=80=9D protocol / function =
compatibility.

The best tools, or even just adequate, became only a download & install =
away for all coding shops, showing up a lot of poor code developed by =
in-house =E2=80=9Cexperts=E2=80=9D and radically trimming many project =
schedules.

While the Unix =E2=80=9CSoftware Tools=E2=80=9D approach - mediated by =
the STDOUT / STDIN interface, not API=E2=80=99s - was new & radical, and =
for many classes of problems, provided a definitive solution,
I=E2=80=99d not include it in a list of =E2=80=9COpen Source=E2=80=9D =
features.

It assumes a =E2=80=9Ccommand line=E2=80=9D and process pipelines, which =
aren=E2=80=99t relevant to very large post-Unix program classes: =
Graphical Apps and Web / Internet services.

regards
steve jenkin

=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D

Lions, J., "An operating system case study" ACM SIGOPS Operating Systems =
Review, July 1978, ACM SIGOPS Oper. Syst. Rev. 12(3): 46-53 (1978)


2. Some Comments on UNIX
------------------------

There is no space here to describe the technical features of UNIX in =
detail (see Ritchie and Thompson, 1974 ; also Kernighan and Plauger, =
1976),=20
nor to document its performance characteristics, which we have found to =
be very satisfactory.=20

The following general comments do bear upon the present discussion:

(a) Cost.
   UNIX is distributed for "academic and educational purposes" to =
educational institutions by the Western Electric Company for only a =
nominal fee,
   and may be implemented effectively on hardware configurations costing =
less than $50,000.

(b) Reliability and Maintenance.
   Since no support of any kind is provided by Western Electric,
	each installation is potentially on its own for software =
maintenance.
   UNIX would not have prospered if it were not almost completely =
error-free and easy to use.
   There are few disappointments and no unpleasant surprises.

(c) Conciseness.
   The PDP-11 architecture places a strong limitation on the size of the =
resident operating system nucleus.
   As Ritchie and Thompson (1974) observe,
	"the size constraint has encouraged not only economy but a =
certain elegance of design".
   The nucleus provides support services and basic management of =
processes, files and other resources.
   Many important system functions are carried out by utility programs.
   Perhaps the most important of these is the command language =
interpreter, known as the "shell".
   (Modification of this program could alter, even drastically, the =
interface between the system and the user.)

(d) Source Code.
   UNIX is written almost entirely in a high level language called "C" =
which is derived from BCPL and which is well matched to the PDP-11.
   It provides record and pointer types,
	has well developed control structures,
	and is consistent with modern ideas on structured Programming.
   (For the curious, the paper by Kernighan (1975) indirectly indicates =
the flavour of "C"
    and exemplifies one type of utility program contained in UNIX.)
   Something less than i0,000 lines of code are needed to describe the =
resident nucleus.

pg 47

(e) Amenability.
   Changes can be made to UNIX with little difficulty.
   A new system can be instituted by recompiling one or more files (at =
an average of 20 to 30 seconds per file),
   relinking the file containing the nucleus (another 30 seconds or so),
   and rebooting using the new file.
   In simple cases the whole process need take no more than a few =
minutes.

(f) Intrinsic Interest.
   UNIX contains a number of features which make it interesting in its =
own right:
	the run-time support for the general tree structured file system =
is particularly efficient;
	the use of a reserved set of file names smooths the concepts of =
device independence;
	multiple processes (three or four per user is average) are used =
in a way which in most systems is regarded as totally extravagant
	    (this leads to considerable simplification of the =
system/user interface);
	and the interactive intent of the system has resulted in an =
unusually rich set of text editing and formatting programs.

(g) Limitations.
   There are few limitations which are of concern to us.
   The PDP-11 architecture limits program size, and this for example =
frustrated an initial attempt to transfer Pascal P onto the 11/40.
   Perhaps the greatest weakness of UNIX as it is presently distributed =
(and this is not fundamental!)
   is in the area where other systems usually claim to be strong:
	support for "bread and butter" items such as Fortran and Basic.

(h) Documentation.
   The entire official UNIX documentation, including tutorial material, =
runs to less than 500 pages.
   By some standards this is incredibly meagre,
	but it does mean that student can carry his own copy in his =
brief case.

   Features of the documentation include:
	- an unconventional arrangement of material (unsettling at =
first, but really very convenient);
	- a terse, enigmatic style, with much information conveyed by =
innuendo;
	- a permuted KWIC index.

   Most importantly perhaps UNIX encourages the programmer to document =
his work.
   There is a very full set of programs for editing and formatting text.
   The extent to which this has been developed can be gauged from the =
paper by Kernighan and Cherry (1975).

=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D

--
Steve Jenkin, IT Systems and Design=20
0412 786 915 (+61 412 786 915)
PO Box 38, Kippax ACT 2615, AUSTRALIA

mailto:sjenkin@canb.auug.org.au http://members.tip.net.au/~sjenkin

