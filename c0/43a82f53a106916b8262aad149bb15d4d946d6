X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=HTML_MESSAGE,
	MAILING_LIST_MULTI,T_SCC_BODY_TEXT_LINE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 7126 invoked from network); 4 Feb 2022 21:10:49 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 4 Feb 2022 21:10:49 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id A8BE19CC48; Sat,  5 Feb 2022 07:10:46 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 94C2F95192;
	Sat,  5 Feb 2022 07:10:34 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 3ED0A95192; Sat,  5 Feb 2022 07:10:33 +1000 (AEST)
X-Greylist: delayed 408 seconds by postgrey-1.36 at minnie.tuhs.org;
 Sat, 05 Feb 2022 07:10:32 AEST
Received: from zimbra.anteil.com (zimbra.anteil.com [67.110.179.138])
 by minnie.tuhs.org (Postfix) with ESMTP id 915B395111
 for <tuhs@minnie.tuhs.org>; Sat,  5 Feb 2022 07:10:32 +1000 (AEST)
Received: from localhost (localhost [127.0.0.1])
 by zimbra.anteil.com (Postfix) with ESMTP id 430F4100B2;
 Fri,  4 Feb 2022 16:03:43 -0500 (EST)
Received: from zimbra.anteil.com ([127.0.0.1])
 by localhost (zimbra.anteil.com [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 6kv-69ayEHPH; Fri,  4 Feb 2022 16:03:41 -0500 (EST)
Received: from zimbra.anteil.com (zimbra.anteil.com [192.168.1.22])
 by zimbra.anteil.com (Postfix) with ESMTP id 9FCE710079;
 Fri,  4 Feb 2022 16:03:41 -0500 (EST)
Date: Fri, 4 Feb 2022 16:03:41 -0500 (EST)
From: Jim Capp <jcapp@anteil.com>
To: Hellwig Geisse <hellwig.geisse@mni.thm.de>
Message-ID: <8901533.793.1644008621545.JavaMail.root@zimbraanteil>
In-Reply-To: <1644006490.2458.78.camel@mni.thm.de>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
 boundary="----=_Part_792_16073994.1644008621544"
X-Originating-IP: [192.168.200.42]
X-Mailer: Zimbra 6.0.7_GA_2476.RHEL4 (ZimbraWebClient - SAF3
 (Mac)/6.0.7_GA_2473.UBUNTU8)
Subject: Re: [TUHS] more about Brian...
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: tuhs@minnie.tuhs.org
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

------=_Part_792_16073994.1644008621544
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

I have a subsystem that populates a database from disparate data streams.=
=20
It's been known to run for years without restarting, thanks to valgrind.=20






From: "Hellwig Geisse" <hellwig.geisse@mni.thm.de>=20
To: tuhs@minnie.tuhs.org=20
Sent: Friday, February 4, 2022 3:28:10 PM=20
Subject: Re: [TUHS] more about Brian...=20

Hi Thomas,=20

On Fr, 2022-02-04 at 20:45 +0100, Thomas Paulsen wrote:=20
> I tell you one thing: I never ever experienced any problems with=20
> traditional malloc()/free().=C2=AD=20

did you ever write a program which does heavy malloc()/free()=20
on complicated (i.e., shared) data structures *and* runs for=20
days, perhaps weeks? IMO it's very difficult to do this without=20
a GC, and you have to exercise quite an amount of discipline=20
to do it right.=20

> A kernel using GC is a kernel written by inexperienced kids.=20

Well, not exactly. Niklaus Wirth's Oberon kernel (around 1990)=20
used a GC, and it did that quite efficiently.=20

Hellwig=20

------=_Part_792_16073994.1644008621544
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

<html><head><style type=3D'text/css'>p { margin: 0; }</style></head><body><=
div style=3D'font-family: Times New Roman; font-size: 12pt; color: #000000'=
>I have a subsystem that populates a database from disparate data streams.<=
div>It's been known to run for years without restarting, thanks to valgrind=
.</div><div><br></div><div><div><div><br><hr id=3D"zwchr"><b>From: </b>"Hel=
lwig Geisse" &lt;hellwig.geisse@mni.thm.de&gt;<br><b>To: </b>tuhs@minnie.tu=
hs.org<br><b>Sent: </b>Friday, February 4, 2022 3:28:10 PM<br><b>Subject: <=
/b>Re: [TUHS] more about Brian...<br><br>Hi Thomas,<br><br>On Fr, 2022-02-0=
4 at 20:45 +0100, Thomas Paulsen wrote:<br>&gt; I tell you one thing: I nev=
er ever experienced any problems with<br>&gt; traditional malloc()/free().=
=C2=AD<br><br>did you ever write a program which does heavy malloc()/free()=
<br>on complicated (i.e., shared) data structures *and* runs for<br>days, p=
erhaps weeks? IMO it's very difficult to do this without<br>a GC, and you h=
ave to exercise quite an amount of discipline<br>to do it right.<br><br>&gt=
; A kernel using GC is a kernel written by inexperienced kids.<br><br>Well,=
 not exactly. Niklaus Wirth's Oberon kernel (around 1990)<br>used a GC, and=
 it did that quite efficiently.<br><br>Hellwig<br></div></div></div></div><=
/body></html>
------=_Part_792_16073994.1644008621544--
