From tuhs-bounces@minnie.tuhs.org Mon Jun 18 15:34:15 2018
Return-Path: tuhs-bounces@minnie.tuhs.org
X-Spam-Checker-Version: SpamAssassin 3.4.1 (2015-04-28) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.1
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id cae7525e
	for <ml@inbox.vuxu.org>;
	Mon, 18 Jun 2018 15:34:15 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 505A1A19F9; Tue, 19 Jun 2018 01:34:14 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id B86A5A19D3;
	Tue, 19 Jun 2018 01:34:00 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 9CAFDA19D3; Tue, 19 Jun 2018 01:33:59 +1000 (AEST)
Received: from mail1.g22.pair.com (mail1.g22.pair.com [66.39.65.155])
 by minnie.tuhs.org (Postfix) with ESMTPS id 501199EC27
 for <tuhs@tuhs.org>; Tue, 19 Jun 2018 01:33:59 +1000 (AEST)
Received: from mail1.g22.pair.com (localhost [127.0.0.1])
 by mail1.g22.pair.com (Postfix) with ESMTP id 99F6848496E;
 Mon, 18 Jun 2018 11:33:58 -0400 (EDT)
Received: from [192.168.1.175] (unknown [213.205.198.165])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail1.g22.pair.com (Postfix) with ESMTPSA id 3FDAD44984A;
 Mon, 18 Jun 2018 11:33:58 -0400 (EDT)
Content-Type: text/plain; charset=us-ascii
Mime-Version: 1.0 (Mac OS X Mail 10.3 \(3273\))
From: Tim Bradshaw <tfb@tfeb.org>
In-Reply-To: <24E1059F-F3ED-45EE-915E-6F32EFBAFA50@tfeb.org>
Date: Mon, 18 Jun 2018 16:33:57 +0100
Content-Transfer-Encoding: quoted-printable
Message-Id: <5808F9AB-0860-457B-BA04-4DBD67B5ACFB@tfeb.org>
References: <20180617175814.D8BAD18C0A7@mercury.lcs.mit.edu>
 <24E1059F-F3ED-45EE-915E-6F32EFBAFA50@tfeb.org>
To: Noel Chiappa <jnc@mercury.lcs.mit.edu>
X-Mailer: Apple Mail (2.3273)
Subject: Re: [TUHS] core
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: tuhs@tuhs.org
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>


> On 18 Jun 2018, at 15:33, Noel Chiappa <jnc@mercury.lcs.mit.edu> =
wrote:
>=20
> When you say "if implementation of the specification is too =
complicated it
> will fail", I think you mean 'the specification is so complex that =
_any_
> implementation must _necessarily_ be so complex that all the =
implementations,
> and thus the specification itself, will fail'?

Yes, except that I don't think the specification itself has to be =
complex, it just needs to require implementations be hard, =
computationally expensive, or both.  For instance a specification for =
integer arithmetic in a programming language which required that (a/b)*b =
be a except where b is zero isn't complicated, I think, but it requires =
implementations which are either hard, computationally-expensive or =
both.

>=20
> And for "in which case the specification which allowed the simple
> implementation will eventually become a problem", I think that's part =
of your
> saying 'you get to pick your poison; either the spec is so complicated =
it
> fails right away, or if it's simple enough to succeed in the short =
term, it
> will neccessarily fail in the long term'?

Yes, with the above caveat about the spec not needing to be complicated, =
and I'd say something like 'become limiting in the long term' rather =
than 'fail in the long term'.

So I think your idea was that, if there's a choice between a =
do-the-right-thing, future-proof (variable-length-address field) =
solution  or a will-work-for-now, implementationally-simpler =
(fixed-length) solution, then you should do the right thing, because if =
the thing fails it makes no odds and if it succeeds then you will regret =
the second solution. My caveat is that success (in the sense of wide =
adoption) is not independent of which solution you pick, and in =
particular that will-work-for-now solutions are much more likely to =
succeed than do-the-right-thing ones.

As I said, I don't know whether this applies to IP.

--tim=
