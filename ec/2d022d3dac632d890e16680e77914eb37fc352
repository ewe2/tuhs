From: carl.lowenstein@gmail.com (Carl Lowenstein)
Date: Mon, 20 Feb 2006 22:28:07 -0800
Subject: [TUHS] ATT 3b2
In-Reply-To: <dc50b0abdcf6b048b5529f34287f8bf8@plan9.bell-labs.com>
References: <dc50b0abdcf6b048b5529f34287f8bf8@plan9.bell-labs.com>
Message-ID: <5904d5730602202228o26dc9d68m6b302386b468d8ec@mail.gmail.com>

On 2/20/06, dmr at plan9.bell-labs.com <dmr at plan9.bell-labs.com> wrote:
>  > I'm interested in acquring an AT&T 3b2 computer.  One of these systems
>  > used to run a famous public UNIX system "killer".  They also run #5ess
>  > telephone switches, however the OS is different in that case
>  > (DMERT/UNIX-RTR instead of whatever the consumer-level 3b2 runs).
>
>  > If anyone has information on where to acquire these (I saw the recent
>  > discussion on 3b1s and I know they are more prolific than 3b2s-- infact
>  > a friend of mine used to have a UNIX PC which we set up a BBS on).
>
> The 3B2 was not the same machine as the one in 5ESS, which
> was/is the 3B20D, a fairly large duplexed machine (two processors
> that mutually checked each other).  The 3B2 was a desktop.
> The 3B20D wasn't sold commercially, as far as I know.  There
> was a 3B20S (multi-cabinet) that at least nominally
> was commercially available.
>
> Their ISAs were not quite the same, but some assembler language
> tricks made the assembler-level languages look quite similar.

Here at U.C. San Diego, the Electrical Engineering and Computer
Science department  received an AT&T donation of a whole lab full of
3B2 computers for instructional purposes.

I had the unenviable task of trying to teach a course based around
Assembly language and interfacing to higher-level languages (like C)
and OS functionality.  Using the 3B2, for which the official AT&T
position was that these computers were not intended to be programmed
in assembly language, and the appropriate documentation was sort of
non-existent to us outsiders.

I remember when I discovered that the assembler would generate
instructions different from those that were present in the source
code, as demonstrated by running the object-code disassembler.

    carl
--
    carl lowenstein         marine physical lab     u.c. san diego
                                                 clowenst at ucsd.edu


