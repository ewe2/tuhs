X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_ADSP_CUSTOM_MED,
	DKIM_INVALID,DKIM_SIGNED,FREEMAIL_FROM,HTML_MESSAGE,MAILING_LIST_MULTI
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 6324 invoked from network); 26 Oct 2022 07:54:12 -0000
Received: from minnie.tuhs.org (50.116.15.146)
  by inbox.vuxu.org with ESMTPUTF8; 26 Oct 2022 07:54:12 -0000
Received: from minnie.tuhs.org (localhost [IPv6:::1])
	by minnie.tuhs.org (Postfix) with ESMTP id AA3BC40F36;
	Wed, 26 Oct 2022 17:54:05 +1000 (AEST)
Received: from mail-oa1-f41.google.com (mail-oa1-f41.google.com [209.85.160.41])
	by minnie.tuhs.org (Postfix) with ESMTPS id CD8474024B
	for <tuhs@tuhs.org>; Wed, 26 Oct 2022 17:53:59 +1000 (AEST)
Received: by mail-oa1-f41.google.com with SMTP id 586e51a60fabf-13bef14ea06so5219079fac.3
        for <tuhs@tuhs.org>; Wed, 26 Oct 2022 00:53:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=cc:to:subject:message-id:date:from:in-reply-to:references
         :mime-version:from:to:cc:subject:date:message-id:reply-to;
        bh=XQ/dhN/NzgdcmQXbBl7ZWnulZwo0YY1M18juk1Em/SY=;
        b=AzGGLpVsmZenUL/ZVOuVgf8DsUKlzRWEDI1y4+riE4zOO4MqIEo5YKj0H4NkUVowNy
         4siJ70hLfoxMXCUSsIbB+aUStUe4tRd6YcIoU3AWY4jms89vOlQd+Ns1EuLR3+DEqceE
         0oyMeWvNnAwegIh4gbQiXSQZ8VLTYzi6zfYbu5KBY8XsLEts78bmoF5uJ4W6kCRuP5SC
         X8EL+ZTL5XVQwHu3PGkG8/UG5S7pHrcGiR1t68O7t9ejXCD+AGVqzr0b4I1Mx86xkp9F
         vX6LnkeZwW57tXxiQah+MWzSV2M3lgKa1TY9CAtIvbDDUsCZUR5BC2fRoA4+FD/nzqit
         qaVQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=cc:to:subject:message-id:date:from:in-reply-to:references
         :mime-version:x-gm-message-state:from:to:cc:subject:date:message-id
         :reply-to;
        bh=XQ/dhN/NzgdcmQXbBl7ZWnulZwo0YY1M18juk1Em/SY=;
        b=SeyxshwhdIdPYN5wBE8gYTaGKAb/Kfmq/UzQh6888JQcRKxiea2PbrPtBR63ZdvJY0
         2gzNXv46lfzqYUYvnyJqjSuwXJ1O3rkebBkXp4L8ul89hUQKvZd56ADBf4j+lgL/1HZf
         PJktsP5+xHggwRaJmWV9TIjU9AMzcdCO47Bbj2PJmh82rb4FXD7h6QpPanvhU1Mf1/3V
         8ThMIT0wcs+wv+DE1fVHqHGIT4FySOMvBh/8CM/Fnnb1TmjRfoQ96Pjm9yHKTzuhJwPk
         X2IM6kZD2lqhQnl6TGH29Haf9CdpeVamo0bximhv64nDNR7L5RkC2dXReObGUU6pFeP8
         FLEA==
X-Gm-Message-State: ACrzQf25ZqiGtojd9yoz8QITU2mMAPwinuV+84ekkwH+CZcXzAMszjcQ
	A6XoxCKnoOg4giQp2c/Z7kI/+A7h5K83FhiEMWI=
X-Google-Smtp-Source: AMsMyM4246cRN8E7fnsuYvgF311U3b8EtSxVq+cl6ozx/rSoMvYvjDKp1Q9g8RSc/SqSoXaMXM0pTCPc//+AdShMp9I=
X-Received: by 2002:a05:6870:c1c7:b0:13c:2cfc:9b70 with SMTP id
 i7-20020a056870c1c700b0013c2cfc9b70mr126365oad.102.1666770778937; Wed, 26 Oct
 2022 00:52:58 -0700 (PDT)
MIME-Version: 1.0
References: <CAP6exY+sG_kb2mMfhJvkbUzGk47U4T0n7Odh=EPxKwN-DSOdHw@mail.gmail.com>
 <Y1cj48eAYbZSFZNx@indra.papnet.eu> <Y1ef1KWMgmX/NXZh@indra.papnet.eu>
 <EBEBFB0A-7360-4C3E-B26F-71977200639C@serissa.com> <20221026044530.1DAC22033C@orac.inputplus.co.uk>
 <Y1jFuA+0xXwPVQce@indra.papnet.eu>
In-Reply-To: <Y1jFuA+0xXwPVQce@indra.papnet.eu>
From: Marc Donner <marc.donner@gmail.com>
Date: Wed, 26 Oct 2022 03:52:48 -0400
Message-ID: <CALQ0xCDVq+3oNoxApn8dwj3Wcyuf2f3bQ2YhLFWHfKocUPO0XA@mail.gmail.com>
To: Angelo Papenhoff <aap@papnet.eu>
Content-Type: multipart/alternative; boundary="000000000000335e9105ebeb50b1"
Message-ID-Hash: 7WJXCHR3RU5WU6FE7PNFI6WPD53BJUAF
X-Message-ID-Hash: 7WJXCHR3RU5WU6FE7PNFI6WPD53BJUAF
X-MailFrom: marc.donner@gmail.com
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; header-match-tuhs.tuhs.org-0; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
CC: tuhs@tuhs.org
X-Mailman-Version: 3.3.6b1
Precedence: list
Subject: [TUHS] Re: who invented the link register
List-Id: The Unix Heritage Society mailing list <tuhs.tuhs.org>
Archived-At: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/message/7WJXCHR3RU5WU6FE7PNFI6WPD53BJUAF/>
List-Archive: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/>
List-Help: <mailto:tuhs-request@tuhs.org?subject=help>
List-Owner: <mailto:tuhs-owner@tuhs.org>
List-Post: <mailto:tuhs@tuhs.org>
List-Subscribe: <mailto:tuhs-join@tuhs.org>
List-Unsubscribe: <mailto:tuhs-leave@tuhs.org>

--000000000000335e9105ebeb50b1
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Peter Capek found this obit of John Griffith.  Indirect addressing patent,
for whatever it=E2=80=99s worth.

https://www.legacy.com/us/obituaries/bradenton/name/john-griffith-obituary?=
id=3D34037343

On Wed, Oct 26, 2022 at 1:29 AM Angelo Papenhoff <aap@papnet.eu> wrote:

> On 26/10/22, Ralph Corderoy wrote:
> > > Before these instructions, a subroutine call would require one
> > > additional memory location, to hold the return address for each point
> > > of call, and one additional instruction, one to load the return
> > > address into the accumulator and one to store it into the code at the
> > > end of the subroutine.  (The latter could be the first instruction of
> > > the subroutine.)
> >
> > So before SP and TA, would the =E2=80=98latter=E2=80=99 instruction at =
the start of the
> > subroutine, which stores the accumulator holding the return address, be
> > modifying all sixteen bits of the location unlike TA which only modifie=
s
> > the bottom eleven?
>
> "Before" sounds a bit misleading. The Whirlwind ran its first actual
> program
> (from test storage, i.e. 27 switch and 5 flip-flop registers) in late 194=
9,
> so the change we're talking about here was early enough that the old way
> of doing jumps was only ever theoretical.
> Still, there was from the start a td (transfer digits) instruction,
> which stores the address bits from AC into the addressed location. ta is
> much the same except it stores A.
>
> > If so, did the accumulator's top bits hold the =E2=80=98return=E2=80=99=
 op-code or was
> > there another instruction near the subroutine's end which loaded the
> > 11-bit address before a second instruction jumped to it?
>
> Without ta, a subroutine jump could be done like this:
>
>         ca reta         ; load return address
>         sp foo          ; jump to foo
> ret,    ...             ; return here
>
> foo,    td foo1         ; store return address
>         ...             ; do stuff
> foo1,   sp .            ; return from here
>
> reta,   ret
>
> Of course then you lose the possibility of passing some argument in AC.
>
> Cheers,
> aap
>
--=20
=3D=3D=3D=3D=3D
nygeek.net
mindthegapdialogs.com/home <https://www.mindthegapdialogs.com/home>

--000000000000335e9105ebeb50b1
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div></div><div dir=3D"auto">Peter Capek found this obit of John Griffith.=
=C2=A0 Indirect addressing patent, for whatever it=E2=80=99s worth.</div><d=
iv dir=3D"auto"><br></div><div><a href=3D"https://www.legacy.com/us/obituar=
ies/bradenton/name/john-griffith-obituary?id=3D34037343">https://www.legacy=
.com/us/obituaries/bradenton/name/john-griffith-obituary?id=3D34037343</a><=
/div><div dir=3D"auto"><br></div><div><div class=3D"gmail_quote"><div dir=
=3D"ltr" class=3D"gmail_attr">On Wed, Oct 26, 2022 at 1:29 AM Angelo Papenh=
off &lt;<a href=3D"mailto:aap@papnet.eu">aap@papnet.eu</a>&gt; wrote:<br></=
div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;bor=
der-left-width:1px;border-left-style:solid;padding-left:1ex;border-left-col=
or:rgb(204,204,204)">On 26/10/22, Ralph Corderoy wrote:<br>
&gt; &gt; Before these instructions, a subroutine call would require one<br=
>
&gt; &gt; additional memory location, to hold the return address for each p=
oint<br>
&gt; &gt; of call, and one additional instruction, one to load the return<b=
r>
&gt; &gt; address into the accumulator and one to store it into the code at=
 the<br>
&gt; &gt; end of the subroutine.=C2=A0 (The latter could be the first instr=
uction of<br>
&gt; &gt; the subroutine.)<br>
&gt; <br>
&gt; So before SP and TA, would the =E2=80=98latter=E2=80=99 instruction at=
 the start of the<br>
&gt; subroutine, which stores the accumulator holding the return address, b=
e<br>
&gt; modifying all sixteen bits of the location unlike TA which only modifi=
es<br>
&gt; the bottom eleven?<br>
<br>
&quot;Before&quot; sounds a bit misleading. The Whirlwind ran its first act=
ual program<br>
(from test storage, i.e. 27 switch and 5 flip-flop registers) in late 1949,=
<br>
so the change we&#39;re talking about here was early enough that the old wa=
y<br>
of doing jumps was only ever theoretical.<br>
Still, there was from the start a td (transfer digits) instruction,<br>
which stores the address bits from AC into the addressed location. ta is<br=
>
much the same except it stores A. <br>
<br>
&gt; If so, did the accumulator&#39;s top bits hold the =E2=80=98return=E2=
=80=99 op-code or was<br>
&gt; there another instruction near the subroutine&#39;s end which loaded t=
he<br>
&gt; 11-bit address before a second instruction jumped to it?<br>
<br>
Without ta, a subroutine jump could be done like this:<br>
<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 ca reta=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0; load=
 return address<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 sp foo=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ; jump=
 to foo<br>
ret,=C2=A0 =C2=A0 ...=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0; retu=
rn here<br>
<br>
foo,=C2=A0 =C2=A0 td foo1=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0; store return a=
ddress<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 ...=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0; do stuff<br>
foo1,=C2=A0 =C2=A0sp .=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ; return fr=
om here<br>
<br>
reta,=C2=A0 =C2=A0ret<br>
<br>
Of course then you lose the possibility of passing some argument in AC.<br>
<br>
Cheers,<br>
aap<br>
</blockquote></div></div>-- <br><div dir=3D"ltr" class=3D"gmail_signature" =
data-smartmail=3D"gmail_signature"><div dir=3D"ltr"><div>=3D=3D=3D=3D=3D<br=
><a href=3D"http://nygeek.net" target=3D"_blank">nygeek.net</a></div><div><=
a href=3D"https://www.mindthegapdialogs.com/home" target=3D"_blank">mindthe=
gapdialogs.com/home</a><br></div></div></div>

--000000000000335e9105ebeb50b1--
