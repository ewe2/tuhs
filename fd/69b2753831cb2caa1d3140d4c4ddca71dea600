From: imp@bsdimp.com (Warner Losh)
Date: Mon, 4 Aug 2014 21:32:13 -0600
Subject: [TUHS] Unix taste (Re: terminal - just for fun)
In-Reply-To: <CALMnNGgrKMX8GFG7AB+zRi3RvNvmAEVyBdDMzjpvmW3xchpvEw@mail.gmail.com>
References: <1407183693.25672.for-standards-violators@oclsc.org>
 <CAFCBnZvoZ2DFmvCAKExbV1ysxwjRGqQC7RXBObjA7tb+LYbZKw@mail.gmail.com>
 <CALMnNGgrKMX8GFG7AB+zRi3RvNvmAEVyBdDMzjpvmW3xchpvEw@mail.gmail.com>
Message-ID: <5B476BA2-EA8F-4443-9DA9-A4AA231C28F4@bsdimp.com>


On Aug 4, 2014, at 8:41 PM, Andy Kosela <akosela at andykosela.com> wrote:

> On Mon, Aug 4, 2014 at 5:24 PM, A. P. Garcia <a.phillip.garcia at gmail.com> wrote:
>> 
>> On Aug 4, 2014 3:22 PM, "Norman Wilson" <norman at oclsc.org> wrote:
>> 
>> <snip>
>> 
>> 
>>> Everything has gotten more complicated.  Some of the complexity
>>> involves reasonable tradeoffs (the move toward replacing binary
>>> interfaces with readable text where space and time are nowhere
>>> near critical, like the /proc and /sys trees in modern Linux).
>> <snip>
>> 
>> To digress from the main topic, I realize that's just one example, but
>> here's a counterpoint to it:
>> 
>> We in Solaris designed /proc as a tool for developers to build innovative
>> solutions, not an end-user interface. The Linux community believes that 'cat
>> /proc/self/maps' is the best user interface, while we believe that pmap(1)
>> is right answer. The reason for this is that mdb(1), truss(1), dtrace(1M)
>> and a host of other tools all make use of this same information. It would be
>> a waste of time to take binary information in the kernel, convert it to
>> text, and then have the userland components all write their own (error
>> prone) parsing routines to convert this information back into a custom
>> binary form. Plus, we can change the options and output format of pmap
>> without breaking other applications that depend on the contents of /proc.
>> 
>> [ https://blogs.oracle.com/eschrock/entry/the_power_of_proc]
> 
> Interestingly, we at FreeBSD got rid of /proc in favor of procstat(1)
> and ptrace(2).  I am still not too sure if it was the Right Thing(r)
> to do though.  The decision was more based on the premise that
> procfs(4) was neglected in recent years than on anything else[0].
> 
> [0] http://freebsd.1045724.n5.nabble.com/Why-is-procfs-deprecated-in-favor-of-procstat-td4028960.html

FreeBSD also chose to export most nuggets of data from the kernel that are
covered by /proc in linux via sysctls. This is one reason that /proc suffered
atrophy in the system: nothing was really using it. One could debate at length
the relative merits of each, but the long-term viability of both in their respective
system I think shows more that the parts that people use are made to work,
with warts well known and tolerated, rather than any one form being purer than
the other.

Warner

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20140804/224198f7/attachment.sig>

