From: ron@ronnatalie.com (Ron Natalie)
Date: Mon, 5 Sep 2016 09:07:49 -0400
Subject: [TUHS] Comments on "C"
In-Reply-To: <d56e080af9cdc376a0a5916207b033bb.squirrel@webmail.yaccman.com>
References: <20160901091746.1F3734422E@lignose.oclsc.org>
 <alpine.BSF.2.11.1609030701590.78806@aneurin.horsfall.org>
 <d56e080af9cdc376a0a5916207b033bb.squirrel@webmail.yaccman.com>
Message-ID: <004b01d20776$817af4e0$8470dea0$@ronnatalie.com>

Many of us who got started early learned that the value of nothing was p&P6.

You can write bad (I'm not going to even to begin with sustainable) code in
any language.
C's biggest defect was it dates from an era where people didn't much care.
Type 120 characters into a field expecting 10, well you deserved what you
got.
It was more the issue with C's utility functions than with the language
itself.     Most of that has been cleaned up.

One piece of aracane programming did come in handy later on.    Our
highschool didn't have any computers.   Your choices were to call the
timeshare system across the county using the Bell 103 Dataphones or punch
your cards and send them down to the county seat to run on the 370 mainframe
(me and a friend were writing a computer dating program in COBOL until
someone at the County looked at our printouts and caught what we were up to.
Still we'd joke each other by inserting random JCL commands like //OPTIONS
ASSHOLE into each other's deck.   With a two day turnaround time, that was
painful).

What we did have is a bunch of old IBM card processing machines:   401
accounting machine, 514 reproducing punch, 085 colator, 082 sorter.    On
the shelf in that room was a bunch of self-paced training manuals on how to
program these units via large punchboards full of wires.   Being a geek, I
went through these (the 402/514 was an interesting combination, it had the
ability via a big 12x80 pin plug to punch the output of calculations on
cards).

Anyway, years later I was sitting around a  university computer center and
these guys came in with a problem.    They had a whole deck of IBM cards
that had patent information on them.    What was neat about these cards is
that in addition to the punched information, there was a window in the card
with a small piece of microfilm with some imagers on it.    The problem is
that all the card readers they tried to read this deck in would spaz when
the optical sensor hit the microfilm part.    No problem.    Give me the
columns you're interested in and I set about programming the 402 to print
out what they were interested in knowing.    I believe it was the only
useful thing I ever did with that machine.


