From tuhs-bounces@minnie.tuhs.org Sat Sep  1 23:26:24 2018
Return-Path: tuhs-bounces@minnie.tuhs.org
X-Spam-Checker-Version: SpamAssassin 3.4.1 (2015-04-28) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.1
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id 52182bff
	for <ml@inbox.vuxu.org>;
	Sat, 1 Sep 2018 23:26:24 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id E14B9A20A2; Sun,  2 Sep 2018 09:26:22 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id B1386A209E;
	Sun,  2 Sep 2018 09:25:43 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 76332A1A90; Sun,  2 Sep 2018 09:25:42 +1000 (AEST)
Received: from mercury.lcs.mit.edu (mercury.lcs.mit.edu [18.26.0.122])
 by minnie.tuhs.org (Postfix) with ESMTPS id 3D234A20A8
 for <tuhs@tuhs.org>; Sun,  2 Sep 2018 09:25:38 +1000 (AEST)
Received: by mercury.lcs.mit.edu (Postfix, from userid 11178)
 id 615A418C09E; Sat,  1 Sep 2018 19:25:37 -0400 (EDT)
To: tuhs@tuhs.org
Message-Id: <20180901232537.615A418C09E@mercury.lcs.mit.edu>
Date: Sat,  1 Sep 2018 19:25:37 -0400 (EDT)
From: jnc@mercury.lcs.mit.edu (Noel Chiappa)
Subject: Re: [TUHS] Fwd:  Public access multics
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: Greenwald@cs.stanford.edu, thvv@multicians.org, osibert@oxford.com,
 jnc@mercury.lcs.mit.edu
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

    > From: Will Senn

    > I was thinking that Multics was a failed predecessor of unix
    > ... straighten me out :)

I'd start with:

  https://multicians.org/myths.html


    > From: Clem Cole <clemc@ccc.com>

    > https://www.quora.com/Why-did-Unix-succeed-and-not-Multics/answer/Clem-Cole

Clem, I think that's too limited in scope.

Like a lot of 'big' 'failures' (defined in Multics' case as 'failure to grow
to significant market share, and continue in the long term'), I don't think
Multics 'failed' for a single reason.

In general, in large failures, there are a number of causes, all doing their
bit. Now, if there are M causes, ranked in priority, maybe the first N1 are
_each_ big enough that _any one_ of them could have led to that outcome. Or
maybe not; maybe it needed the first N2, all acting in concert.


My crystal ball isn't that accurate. But here's my take on _some_ of Multics'
main issues.

- Management: if you look at:

  https://multicians.org/hill-mgt.html

it's clear that Honeywell top management didn't understand Multics, and
didn't understand that it had a long-term potential. They terminated
investment in new hardware, and that was what finally killed Multics.

- Non-portability: the system was too tied to a specific platform; it
couldn't really be moved elsewhere. (E.g. the code is riddled with 'fixed bin
18'; yes, that could be changed with a program to edit the source, but there
are lots of dependencies on the specifics of the machine's architecture.) It
would be possible to re-write it to run on, say, a 386, but you'd pretty much
have to start from scratch.

- Built for the wrong future: a key assumption was that people would continue
to get their computes from large centralized machines. Clearly, that was
wrong (and it played into the issues with Honeywell management)>. Multics
_could_ have made the transition to today's 'small' (physically) machines, in
which case it would have been really good to have - e.g. if we could run
browsers in AIM boxes a lot of malware simply would not be an issue. But the
point above prevented that.


Those are some of the big ones; I may come up with more. I've CC'd a couple
of Multicians - perhaps they can add additional insight.

	Noel
