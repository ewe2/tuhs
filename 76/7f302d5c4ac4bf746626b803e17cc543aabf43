From: andreas.kahari@icm.uu.se (Andreas Kusalananda =?iso-8859-1?B?S+Ro5HJp?=)
Date: Mon, 18 Sep 2017 12:39:11 +0200
Subject: [TUHS] And now ... Weirdnix?
In-Reply-To: <201709180831.v8I8V6LB021088@freefriends.org>
References: <8AA943A2-D6C0-4812-9C16-C09D1298754F@tuhs.org>
 <20170917144909.DB27FA585CB@yagi.h-net.msu.edu>
 <CACCFpdwD4jAx69MqQ1QdT7GRuKMbVVOBjvMLbMHgu2GSRcy7rQ@mail.gmail.com>
 <201709180831.v8I8V6LB021088@freefriends.org>
Message-ID: <20170918103911.2bok6nfjpbbm6cqq@client.local>

(This is a copy of an email I sent from the wrong address. If the first
(identaical) version of the message eventually arrives, just ignore it)

On Mon, Sep 18, 2017 at 02:31:06AM -0600, arnold at skeeve.com wrote:
> That Pr1me had a Unix emulation layer is news to me (I think). I worked
> on the Georgia Tech Software Tools Subsystem for Pr1me Computers for
> several years. (Oh, how I wish I had saved that last release tape!!!)
> 
> Primos was a terribly weird OS, but the SWT subsystem made it almost
> Unix-like and very pleasant and usable.  The mark parity business
> was only one of the weirdnesses of that machine.  Georgia Tech even
> had a C compiler for it. sizeof(char) was 1, of course, but it was 16
> bits, because the instruction mode used didn't have 8 bit byte pointers.
> 
> I can't claim credit for GT-SWT; I came along after it was mature
> and stable, but I did do a few nice things.
> 
> Arnold
> 
> Nigel Williams <nw at retrocomputingtasmania.com> wrote:
[cut]

I've been wondering about this for some time, if a byte isn't 8 bits on
an architecture, how would you go about calculating memory sizes in a
way that makes it comparable between machines?

A 32 KB memory buffer is 262144=32*1024*8 bits on one machine, but
294912=32*1024*9 bits on another.  That's a difference of 32 Kbit.

Of course, it may not matter since both buffers contains as many
items/bytes, but for the machine as a whole you can't say "this machine
has X MB of memory" without mentioning the byte length.  A machine with
"n" bit words would be able to "store less information" in memory than a
machine with the same number of MB of RAM but with "n+x" bit words.

How would you do for even more exotic hardware?
What if sizeof(char) != 1 for example?

Maybe this isn't/wasn't an issue at all?

Cheers,
Kusalananda


-- 
Andreas Kusalananda Kähäri,
National Bioinformatics Infrastructure Sweden (NBIS),
Uppsala University, Sweden.

