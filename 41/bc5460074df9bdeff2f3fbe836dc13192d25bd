From: jnc@mercury.lcs.mit.edu (Noel Chiappa)
Date: Sat, 25 Mar 2017 21:35:20 -0400 (EDT)
Subject: [TUHS] Were all of you.. Hippies?
Message-ID: <20170326013520.86B8E18C097@mercury.lcs.mit.edu>

    > From: Ron Minnich

    > There was no shortage of people at the time who were struggling to find
    > a way to make the Unix model work for networking ...  It didn't quite
    > work out

For good reason.

It's only useful to have a file-name _name_ for a thing if...  the thing acts
like a file - i.e. you can plug that file-name into other places you might use
a file-name (e.g. '> {foo}' or 'ed <foo>', etc, etc).

There is very little in the world of networking that acts like a file. Yes,
you can go all hammer-nail, and use read() and write() to get data back and
forth, and think that makes it a file - but it's not.

For instance, files, as far as I know, generally don't have timeout
semantics. Can the average application that deals with a file, deal reasonably
with the fact that sometimes one gets half-way through the 'file' - and things
stop working?  And that's a _simple_ one.  How does a file abstraction match
to a multi-cast lossy (i.e. packets may be lost) datagram group?

For another major point (and the list goes on, I just can't be bothered to go
through it all), there's usually all sorts of other higher-level protocol in
there, so only specialized applications can make use of it anyway. Look at
HTTP: there's specialized syntax one has to spit out to say what file you
want, and the HTML files you get back from that can generally only be usefully
used in a browser.

Etc, etc.

     Noel

