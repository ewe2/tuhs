From: lm@mcvoy.com (Larry McVoy)
Date: Tue, 21 Nov 2017 10:29:41 -0800
Subject: [TUHS] UNIX on S/370
In-Reply-To: <CAC20D2PVy6TxwzecX7LQarnPvtA+Kr-x950TjwaxWuom7xG+yw@mail.gmail.com>
References: <05be01d36266$4b32e810$e198b830$@ronnatalie.com>
 <93a49f88-c9b2-d395-ba82-f7a3577bffea@tnetconsulting.net>
 <05ec01d3627a$6960cc80$3c226580$@ronnatalie.com>
 <374F4C47-30B2-4E3E-A493-62C259D25CF0@ccc.com>
 <f0329b7d-e5aa-8c94-d0da-f4086d41534f@tnetconsulting.net>
 <060301d362c0$493fd7c0$dbbf8740$@ronnatalie.com>
 <CAC20D2NGruq-8kBPjUmEmZEJZD8fVQs2ZcAHuV=qANjW1MzPog@mail.gmail.com>
 <20171121145920.GQ9146@mcvoy.com>
 <CAC20D2P4=FPjr7FiV3mv9m_7KTr448RmvJbbFatogD5+fPzsAw@mail.gmail.com>
 <CAC20D2PVy6TxwzecX7LQarnPvtA+Kr-x950TjwaxWuom7xG+yw@mail.gmail.com>
Message-ID: <20171121182941.GX9146@mcvoy.com>

So is there any chance of getting the code released under a BSD compat
license?

On Tue, Nov 21, 2017 at 12:23:14PM -0500, Clem Cole wrote:
> FWIW:  The one sad thing I look back one and fear was a the greatest
> contribution of TNC that was lost was Vprocs - the virtual process layer,
> that Roman and I created - originally for the Paragon and HP systems.   We
> took a tip from Sun's VFS layer and said what we really need is a layer the
> kernel with new interface to allow virtual process technology.  They you
> can support a number of different types of interfaces the same way you can
> support different file systems.
> 
> We spliced had it running is OSF1, HP-UX, Linux (2.4), SVR4, an Apple
> kernel and had started putting into an Solaris for one of the super
> computer firms (I've forgotten now whom).   I started putting it into a
> FreeBSD release at one point, but was over whelmed by other kernel changes
> and just could not keep up with he mainline - it been on my 'to do.'      I
> think that's why OpenSSI gave up.      Unless Linus really got excited it
> was not going be able to stay in on the side.
> 
> Which is a shame because once you put the changes in, to support the vproc
> layer, then its easier to make changes of course because you have a clean
> interface.   As I said, just like VFS cleaned up the file system and i-node
> layer and removed a bunch of stuff that had bleed into the places in the
> kernel it really did not belong.   The same is true for the process layer
> and some of the other UNIX name spaces (semaphores, systemV shared memory,
> etc..).   Vproc really cleaned that up.
> 
> 
> 
> On Tue, Nov 21, 2017 at 12:06 PM, Clem Cole <clemc at ccc.com> wrote:
> 
> >
> > *OpenSSI (Single System Image) Clusters for Linux
> > <http://openssi.org/cgi-bin/view?page=openssi.html>??? is the URL for the
> > project*
> >
> > *Note Bruce has retired since he wrote the following, but the *
> > *paper describing the work is:   *Open Single System Image (openSSI)
> > Linux Cluster Project, Bruce J. Walker, Hewlett-Packard
> > <http://www.openssi.org/ssi-intro.pdf>
> >
> > Bruce.walker at hp.com
> >
> > Abstract
> >
> > The openSSI Cluster project is an ongoing open source project which was
> > started two years ago to bring together some of the best Linux and Unix
> > clustering technologies into a single integrated and yet modular project.
> >
> > Linux is rich in cluster technology but is segmented into 6 different
> > cluster areas
> > - high performance, load-leveling, web-service, storage, database and high
> > availability. The openSSI project address all cluster environments by
> > simultaneously addressing the three key cluster goals - availability,
> > scalability and manageability.
> > To accomplish this ambitious goal, the project was started with a Linux
> > adaptation of the NonStop Clusters for Unixware code, contributed by
> > Compaq/HP. That code included membership, internode communication,
> > clusterwide process management, clusterwide devices, a cluster filesystem,
> > clusterwide IPC (pipes, fifos, msgqueues, semaphores, etc.) and clusterwide
> > tcp/ip networking. Other open source clustering code has been integrated
> > into the modular architecture, including openGFS, openDLM, LVS, Lustre and
> > a small component of Mosix. The architecture of the project allows for
> > subsetting and substitution of components. A full function initial release
> > is available in both source and RPM form. Many enhancement opportunities
> > still exist both in integrating with other technologies and by improving
> > scalability and availability.
> > *???*
> >

-- 
---
Larry McVoy            	     lm at mcvoy.com             http://www.mcvoy.com/lm 

