X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 9341 invoked from network); 21 Sep 2020 01:06:29 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 21 Sep 2020 01:06:29 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 1904094483; Mon, 21 Sep 2020 11:06:28 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 55CB3940FD;
	Mon, 21 Sep 2020 11:05:41 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (1024-bit key; unprotected) header.d=ccc.com header.i=@ccc.com header.b="PqUd+LYu";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id E2C25940FD; Mon, 21 Sep 2020 11:05:37 +1000 (AEST)
Received: from mail-qk1-f182.google.com (mail-qk1-f182.google.com
 [209.85.222.182])
 by minnie.tuhs.org (Postfix) with ESMTPS id B199493F5B
 for <tuhs@tuhs.org>; Mon, 21 Sep 2020 11:05:36 +1000 (AEST)
Received: by mail-qk1-f182.google.com with SMTP id f142so13378571qke.13
 for <tuhs@tuhs.org>; Sun, 20 Sep 2020 18:05:36 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ccc.com; s=google;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=kHkkFkhq6t1ku661SSIJdPqg61/VShbzNeO87jt/Zjg=;
 b=PqUd+LYuYHbHbFFipc/dT/0YWwvlZeZZEUfQw6hXSuBJxlWUYXWhk+K4puA16xkC5Y
 yV8UuteT5Yy7yPc1bq4hw5cAj9ytbv1XmFhuY59DkHsL3GtjuMTVP56Fx/k/WrgTo+0r
 2IVwyhc9M1UBlAlPpKx01rqRzz6hg8Mfaf48s=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=kHkkFkhq6t1ku661SSIJdPqg61/VShbzNeO87jt/Zjg=;
 b=T5r80qQ7NyTuwNPLX/oXRce8R66i0SC8WKBIsTo1cVo4+o7IYBS5vxKUie/wHcSr0X
 a33UC9WlzGB4sCdO1O/UOQ9tIub4hY5BUnY3WoHdHjxEVUWo+/fZwf+KNG+3r43psSuZ
 wz0BKG4fJ9Q+nDb/CJ2tD0I6EAJ8KsRXJbDY83IqWyWhNM4b8o1DHyWgBPsQ6TNJBknr
 3z5T6ej+sjXIcTCUpsTDS3DC9KNtdfzxB9l8Xr9wLb8iOleE7l/+crE0U4KKD9S6H6FL
 x/0Chl9S0pvJsRz5nQ4tkDCTXviQHjSIPplAQfzj9i3BrGKa3Ff2H1dU2/Rwb3+t6tHe
 LGMQ==
X-Gm-Message-State: AOAM533AFBNmuAm9KSm7vpbjSp8urv7OUi/aIQXFs2yXJuloe0uys5b9
 7yzU6yKgxWGvKU6Rzv7xJVkgKtULVnU/4zkvstZz5g==
X-Google-Smtp-Source: ABdhPJwzogvIwlVa+RLhAWhMKO9H5SloDh+MHvtmumtFMssqAHIat7FMjkoA1sdOZit68pHVxmLJrSipfEpUzUQRStU=
X-Received: by 2002:a37:7ac1:: with SMTP id v184mr2483878qkc.146.1600650335445; 
 Sun, 20 Sep 2020 18:05:35 -0700 (PDT)
MIME-Version: 1.0
References: <20200920230057.C5D1A4422E@lignose.oclsc.org>
 <CAC20D2PqgrYnADwJJc3rvtgRXB92FKgCT2ycot9bhUoEGPe=+Q@mail.gmail.com>
 <CANCZdfo+LL-xfk6rygrZaremzNfYEmxAmMPaeuiOhrV9uCk3ag@mail.gmail.com>
In-Reply-To: <CANCZdfo+LL-xfk6rygrZaremzNfYEmxAmMPaeuiOhrV9uCk3ag@mail.gmail.com>
From: Clem Cole <clemc@ccc.com>
Date: Sun, 20 Sep 2020 21:05:23 -0400
Message-ID: <CAC20D2NmRRKc=bWE25_B+rFSQpRsBJFbiou9RYmc33BRGtrubQ@mail.gmail.com>
To: Warner Losh <imp@bsdimp.com>
Content-Type: multipart/alternative; boundary="000000000000a7f79705afc872b4"
Subject: Re: [TUHS] reviving a bit of WWB
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--000000000000a7f79705afc872b4
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

Yep.   They all suck.  As Dennis said, =E2=80=9CC is quirky=E2=80=9D and pa=
rt of the issue
is HW is even more so.  Clem

On Sun, Sep 20, 2020 at 8:10 PM Warner Losh <imp@bsdimp.com> wrote:

> To two places: stddef.h and stdlib.h :(.
>
> It's interesting to see the different bugs 0, 0L, (char *)0 and (void *)0
> expose or hide as definitions of NULL.
>
> 0 is fine if sizeof(int) =3D=3D sizeof(void *). Otherwise varadic functio=
n
> calls break. 0L is the same, but for long. The pointer definitions run in=
to
> trouble in other contexts since NULL is often incorrectly used as a
> terminating byte in a string instead of '\0'. (void *) has issues with
> const pointers, some of which are relevant if you use it in the wrong
> context.
>
> There were quite spirited debates back in the day for which one was best.
> They all suck. C++ invented a null pointer symbol because it's type rules
> were enough different than C to make a universal NULL #define impossible.
> Is that better or worse? Don't know. It's different.
>
> Glad to see the null-pointer need not have all zero bits being different
> than a 0 constant shall be the null-pointer in sufficient detail.
>
> Warner
>
> On Sun, Sep 20, 2020, 5:54 PM Clem Cole <clemc@ccc.com> wrote:
>
>> Norman NULL has to be defined and I said that/showed it.   The standard
>> says where.  I was not trying to compile NULL without a definition which=
 I
>> agree it not legal.  If that is what Doug was implying I missed understo=
od
>> him but I note NULL was introduced in Typesetter C /V7 where those compi=
ler
>> s set it to 0 in studio but the ANSI/ISO moved it.
>>
>> On Sun, Sep 20, 2020 at 7:03 PM Norman Wilson <norman@oclsc.org> wrote:
>>
>>> Doug McIlroy:
>>>
>>>
>>>
>>>   To put it more strongly. this is not a legal C source file.
>>>
>>>           char *s =3D NULL;
>>>
>>>   But this is.
>>>
>>>           char *s =3D 0;
>>>
>>>
>>>
>>> Clem Cole:
>>>
>>>
>>>
>>>    67)The macro NULL is defined in <stddef.h> (and other headers) as a
>>> null
>>>
>>>    pointer constant; see 7.19.
>>>
>>>
>>>
>>> =3D=3D=3D=3D
>>>
>>>
>>>
>>> $ cat null.c
>>>
>>> char *s =3D NULL;
>>>
>>> $ cat zero.c
>>>
>>> char *s =3D 0;
>>>
>>> $
>>>
>>>
>>>
>>> zero.c is a legal C program.  null.c is not.  Create
>>>
>>> files exactly as shown and compile them if you don't
>>>
>>> believe me.
>>>
>>>
>>>
>>> Prepend `#include <stddef.h>' (or <stdlib.h> or <stdio.h>)
>>>
>>> to null.c and it becomes legal, but I think that's Doug's
>>>
>>> point: you need an include file.
>>>
>>>
>>>
>>> Personally I prefer to use NULL instead of 0 when spelling
>>>
>>> out a null pointer, because I think it's clearer:
>>>
>>>         if ((buf =3D malloc(SIZE)) =3D=3D NULL)
>>>
>>>                 error("dammit andrew");
>>>
>>> though I am willing to omit it when there's no confusion
>>>
>>> about =3D vs =3D=3D:
>>>
>>>         if (*p)
>>>
>>>                 dammit(*p, "andrew");
>>>
>>>
>>>
>>> But that's just a question of style, and Doug's is fine too.
>>>
>>>
>>>
>>> The language does not require the compiler to pre-define
>>>
>>> NULL or to recognize it as a keyword; you have to include
>>>
>>> an appropriate standard header file.
>>>
>>>
>>>
>>> Norman Wilson
>>>
>>> Toronto ON (not 0N nor NULLN)
>>>
>>> --
>> Sent from a handheld expect more typos than usual
>>
>>
>>
>
> --
Sent from a handheld expect more typos than usual

--000000000000a7f79705afc872b4
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"auto">Yep. =C2=A0 They all suck.=C2=A0 As Dennis said, =E2=80=
=9CC is quirky=E2=80=9D and part of the issue is HW is even more so.=C2=A0 =
Clem</div><div><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gma=
il_attr">On Sun, Sep 20, 2020 at 8:10 PM Warner Losh &lt;<a href=3D"mailto:=
imp@bsdimp.com">imp@bsdimp.com</a>&gt; wrote:<br></div><blockquote class=3D=
"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding=
-left:1ex"><div dir=3D"auto"><div>To two places: stddef.h and stdlib.h :(.<=
/div><div dir=3D"auto"><br></div><div dir=3D"auto">It&#39;s interesting to =
see the different bugs 0, 0L, (char *)0 and (void *)0 expose or hide as def=
initions of NULL.</div><div dir=3D"auto"><br></div><div dir=3D"auto">0 is f=
ine if sizeof(int) =3D=3D sizeof(void *). Otherwise varadic function calls =
break. 0L is the same, but for long. The pointer definitions run into troub=
le in other contexts since NULL is often incorrectly used as a terminating =
byte in a string instead of &#39;\0&#39;. (void *) has issues with const po=
inters, some of which are relevant if you use it in the wrong context.</div=
><div dir=3D"auto"><br></div><div dir=3D"auto">There were quite spirited de=
bates back in the day for which one was best. They all suck. C++ invented a=
 null pointer symbol because it&#39;s type rules were enough different than=
 C to make a universal NULL #define impossible. Is that better or worse? Do=
n&#39;t know. It&#39;s different.=C2=A0</div><div dir=3D"auto"><br></div><d=
iv dir=3D"auto">Glad to see the null-pointer need not have all zero bits be=
ing different than a 0 constant shall be the null-pointer in sufficient det=
ail.</div></div><div dir=3D"auto"><div dir=3D"auto"><br></div><div dir=3D"a=
uto">Warner<br><br><div class=3D"gmail_quote" dir=3D"auto"><div dir=3D"ltr"=
 class=3D"gmail_attr">On Sun, Sep 20, 2020, 5:54 PM Clem Cole &lt;<a href=
=3D"mailto:clemc@ccc.com" target=3D"_blank">clemc@ccc.com</a>&gt; wrote:<br=
></div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-=
left:1px #ccc solid;padding-left:1ex"><div dir=3D"auto">Norman NULL has to =
be defined and I said that/showed it. =C2=A0 The standard says where.=C2=A0=
 I was not trying to compile NULL without a definition which I agree it not=
 legal.=C2=A0 If that is what Doug was implying I missed understood him but=
 I note NULL was introduced in Typesetter C /V7 where those compiler s set =
it to 0 in studio but the ANSI/ISO moved it.=C2=A0</div><div><br><div class=
=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Sun, Sep 20, 2020=
 at 7:03 PM Norman Wilson &lt;<a href=3D"mailto:norman@oclsc.org" rel=3D"no=
referrer" target=3D"_blank">norman@oclsc.org</a>&gt; wrote:<br></div><block=
quote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc=
 solid;padding-left:1ex">Doug McIlroy:<br><br><br><br>=C2=A0 To put it more=
 strongly. this is not a legal C source file.<br><br>=C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 char *s =3D NULL;<br><br>=C2=A0 But this is.<br><br>=C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 char *s =3D 0;<br><br><br><br>Clem Cole:<br><br=
><br><br>=C2=A0 =C2=A067)The macro NULL is defined in &lt;stddef.h&gt; (and=
 other headers) as a null<br><br>=C2=A0 =C2=A0pointer constant; see 7.19.<b=
r><br><br><br>=3D=3D=3D=3D<br><br><br><br>$ cat null.c<br><br>char *s =3D N=
ULL;<br><br>$ cat zero.c<br><br>char *s =3D 0;<br><br>$<br><br><br><br>zero=
.c is a legal C program.=C2=A0 null.c is not.=C2=A0 Create<br><br>files exa=
ctly as shown and compile them if you don&#39;t<br><br>believe me.<br><br><=
br><br>Prepend `#include &lt;stddef.h&gt;&#39; (or &lt;stdlib.h&gt; or &lt;=
stdio.h&gt;)<br><br>to null.c and it becomes legal, but I think that&#39;s =
Doug&#39;s<br><br>point: you need an include file.<br><br><br><br>Personall=
y I prefer to use NULL instead of 0 when spelling<br><br>out a null pointer=
, because I think it&#39;s clearer:<br><br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 if (=
(buf =3D malloc(SIZE)) =3D=3D NULL)<br><br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 error(&quot;dammit andrew&quot;);<br><br>though I =
am willing to omit it when there&#39;s no confusion<br><br>about =3D vs =3D=
=3D:<br><br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 if (*p)<br><br>=C2=A0 =C2=A0 =C2=A0=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 dammit(*p, &quot;andrew&quot;);<br><br>=
<br><br>But that&#39;s just a question of style, and Doug&#39;s is fine too=
.<br><br><br><br>The language does not require the compiler to pre-define<b=
r><br>NULL or to recognize it as a keyword; you have to include<br><br>an a=
ppropriate standard header file.<br><br><br><br>Norman Wilson<br><br>Toront=
o ON (not 0N nor NULLN)<br><br></blockquote></div></div>-- <br><div dir=3D"=
ltr" data-smartmail=3D"gmail_signature">Sent from a handheld expect more ty=
pos than usual</div><br><br></blockquote></div></div></div><br><br></blockq=
uote></div></div>-- <br><div dir=3D"ltr" class=3D"gmail_signature" data-sma=
rtmail=3D"gmail_signature">Sent from a handheld expect more typos than usua=
l</div>

--000000000000a7f79705afc872b4--
