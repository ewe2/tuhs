From: paul.winalski@gmail.com (Paul Winalski)
Date: Fri, 29 Dec 2017 14:28:06 -0500
Subject: [TUHS] origin of C header files
In-Reply-To: <CACNPpeYw3maUqXr8NxotW9FZMjhJmm-K9kEv2ma6SytiQB=1cg@mail.gmail.com>
References: <CACNPpeYw3maUqXr8NxotW9FZMjhJmm-K9kEv2ma6SytiQB=1cg@mail.gmail.com>
Message-ID: <CABH=_VTZLbJjgidBL92PpyYTXsA8zwbBsfeMqkA=kaam-E5rEA@mail.gmail.com>

On 12/29/17, Wesley Parish <wobblygong at gmail.com> wrote:
>
> Which raised the question: when did header files come into use? Who
> was the first to use header files to store common system-wide or
> application-wide data definitions? Was it used in any languages prior
> to C?

It probably all started with macro-instructions (macros) in assembly
languages.  The assembler for System/360 in the 1960s had a pretty
complex and powerful conditional assembly and macro expansion
capability.  That technology I'm sure dates back to the 1950s.

When higher-level languages came along, programmers moving from
assembly code to a HLL would want the same sort of preprocessor
functionality.  I know that IBM PL/I had %include, and I suspect that
other HLLs of the day had similar features.

What's very clear is that C did not invent include files or
conditional compilation, it merely carried on existing tradition.

-Paul W.

