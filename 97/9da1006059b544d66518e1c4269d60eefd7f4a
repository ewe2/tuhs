X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	DKIM_VALID_AU,HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 13686 invoked from network); 21 Sep 2020 21:58:01 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 21 Sep 2020 21:58:01 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 621E09CB70; Tue, 22 Sep 2020 07:57:58 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 8EA4A93D5F;
	Tue, 22 Sep 2020 07:57:29 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (1024-bit key; unprotected) header.d=ccc.com header.i=@ccc.com header.b="jqHxlrqc";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 6322F93D5F; Tue, 22 Sep 2020 07:57:27 +1000 (AEST)
Received: from mail-qv1-f51.google.com (mail-qv1-f51.google.com
 [209.85.219.51])
 by minnie.tuhs.org (Postfix) with ESMTPS id A756593D06
 for <tuhs@tuhs.org>; Tue, 22 Sep 2020 07:57:26 +1000 (AEST)
Received: by mail-qv1-f51.google.com with SMTP id j3so8365891qvi.7
 for <tuhs@tuhs.org>; Mon, 21 Sep 2020 14:57:26 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ccc.com; s=google;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=z3XK0hFMiUoz7vZjKcCKGgn6V58ZGUhjsHzd2GIInqM=;
 b=jqHxlrqcESDxY0bf/Hx+0vjDKrQiuRapXDi0Eo/dsPPdjYWZKxtOdGQhoGAHAENcUB
 OGkL8mSX7/qB5S9kKOTIXXGQj4Q2JdkjoITtVc8IgrcIWLiHw+josorPxtWntV2Lfhcj
 iGAAXuCIlQqO2lMscqG30UgIY6hwUtGFTl3wE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=z3XK0hFMiUoz7vZjKcCKGgn6V58ZGUhjsHzd2GIInqM=;
 b=VvK8ZubpWsxKzGa5RxG2D3McpDklixbNkvmSn0qz0t0bYJ7mgglxGwAuY8ssdWGgmS
 ECUweTbAuERPLa8CDfqglMKlnC7IvcD9OUVLfAXGm2cOmoeEPh3aAmP4ysm12lJLP/Yp
 KDhxz2fAF2iX2ubm3sk5PNlFbXZF+Lawgb63gUjVUlvz+i5XHDB+AL4tiXcgr3aG60Id
 iq2V1+JPGkebTlnVvz5kX0igZKMfpF8kUigYXqY0KFQT13P7emEJjDnYUxhdTlLCXw28
 nFv7+tK18R3V9wsQr0Fs21zKKa22lyoOg6yYCKJItz3eu2YQh0Iu+6EJM3e+Or6QplwO
 EGmg==
X-Gm-Message-State: AOAM532cAny6xCRyu+upm0NMcp1S40Hq/ZCcHMs6nP9b1LKcpAT9D6WK
 V+NY1Fx5FY1mWWxRjLZA+4ewSS5+orp5qCn5RqbYMg==
X-Google-Smtp-Source: ABdhPJx4jHbe1HQeQKptFQUjUSVd991jUu2pp8VWBNlQW3s3txuKXbEDiBHWjLqw15eTFEsl/zQjIVQFCBIV/fTR3Sk=
X-Received: by 2002:ad4:4af4:: with SMTP id cp20mr2370961qvb.40.1600725445613; 
 Mon, 21 Sep 2020 14:57:25 -0700 (PDT)
MIME-Version: 1.0
References: <20200920230057.C5D1A4422E@lignose.oclsc.org>
 <CAC20D2PqgrYnADwJJc3rvtgRXB92FKgCT2ycot9bhUoEGPe=+Q@mail.gmail.com>
 <CANCZdfo+LL-xfk6rygrZaremzNfYEmxAmMPaeuiOhrV9uCk3ag@mail.gmail.com>
 <alpine.DEB.2.21.2009210151560.11761@sd-119843.dedibox.fr>
 <CAD2gp_T=RjQkrFeaeu-e4b4qvQFa-uZWTgg6mBiOJhF5fJh9qw@mail.gmail.com>
 <CAKzdPgwD2s9SbKQgRa46S_kVCVXC7-_bqEn9UMHGb9Zve1=x2g@mail.gmail.com>
In-Reply-To: <CAKzdPgwD2s9SbKQgRa46S_kVCVXC7-_bqEn9UMHGb9Zve1=x2g@mail.gmail.com>
From: Clem Cole <clemc@ccc.com>
Date: Mon, 21 Sep 2020 17:57:00 -0400
Message-ID: <CAC20D2Nmrrt-Hnd6M+BF+pX-su5rfZ1m31xtWUjymUDBDnsV+g@mail.gmail.com>
To: Rob Pike <robpike@gmail.com>
Content-Type: multipart/alternative; boundary="00000000000091b07a05afd9ef48"
Subject: Re: [TUHS] reviving a bit of WWB
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--00000000000091b07a05afd9ef48
Content-Type: text/plain; charset="UTF-8"

Right .. I remember running into/using that idiom in a couple of places in
a few other drivers in the early years.  I also remember working one of the
CAD tools (it may have been one of the UCB CAD editors) which were very
graphics centric and running into it there.

I always looked at this as part of the original C heritage from simpler
times *i.e.* from ESPOL/BCPL/B and the like, when it was still considered a
'low level' language that mapped well to the HW at hand.  As the more and
more features got added, the focus of the language changed ... ney
Chisnall's 2018 screed: C is not a low level language
<https://queue.acm.org/detail.cfm?id=3212479>   Not nearly as bad as the
pile we got with 'modern' C++ [which I'm loath to use].

Clem

On Mon, Sep 21, 2020 at 5:23 PM Rob Pike <robpike@gmail.com> wrote:

> Back when we were running v5 at the University of Toronto, we had a
> graphics device that we accessed, on our split I&D space 11/45, using 0,
> something like this:
>
> struct x {
>    int reg0, reg1, ...;
> };
>
> 0->reg1 = 0234;
>
> Several old details of old C made this possible as well: Struct tags were
> global, -> worked on any pointer, and ints and pointers were
> interchangeable.
>
> -rob
>
>
> On Tue, Sep 22, 2020 at 6:51 AM John Cowan <cowan@ccil.org> wrote:
>
>>
>>
>> On Mon, Sep 21, 2020 at 1:55 AM Steve Nickolas <usotsuki@buric.co> wrote:
>>
>>
>>> I've never written anything that uses varargs, so I've never run into
>>> that.  But I've actually done quite a bit of work with an environment
>>> where this isn't true: MS-DOS using the large or huge model.  In this
>>> environment, sizeof(int)=2, and sizeof(void*) is 4. Of course, it's not
>>> conformant to pass an int variable as an argument where a pointer variable
>>> is expected.
>>>
>>
>> If the compiler was ISO-conformant (which it almost certainly was not),
>> that would not matter.  0 in int context would be a 2-byte int with all
>> bits zero, and 0 in pointer context would be a 4-byte null pointer,
>> probably with all bits zero.
>>
>> C doesn't require that the address represented by the null pointer
>> (whether or not it is all-bits-zero) is inaccessible, merely that there is
>> no C object or function there.  A simple shim of the appropriate size (1,
>> 2, 4, 8 bytes depending on the CPU's alignment rules) will suffice.
>>
>>

--00000000000091b07a05afd9ef48
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_default" style=3D"font-family:arial,he=
lvetica,sans-serif">Right .. I remember running into/using that idiom in a =
couple of places in a few other drivers in the early years.=C2=A0 I also re=
member working one of the CAD tools (it may have been one of the UCB CAD ed=
itors) which were very graphics centric and running into it there.=C2=A0</d=
iv><div class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-s=
erif"><br></div><div class=3D"gmail_default" style=3D"font-family:arial,hel=
vetica,sans-serif">I always looked at this as part of the original C herita=
ge from simpler times <i>i.e.</i> from ESPOL/BCPL/B and the like, when it w=
as still considered a &#39;low level&#39; language that mapped=C2=A0well to=
 the HW at hand.=C2=A0 As the more and more features got added, the=C2=A0fo=
cus of the language changed ... ney Chisnall&#39;s 2018=C2=A0screed:=C2=A0<=
a href=3D"https://queue.acm.org/detail.cfm?id=3D3212479">C is not a low lev=
el language</a>=C2=A0 =C2=A0Not nearly as bad as the pile we got with &#39;=
modern&#39; C++ [which I&#39;m loath to use].</div><div class=3D"gmail_defa=
ult" style=3D"font-family:arial,helvetica,sans-serif"><br></div><div class=
=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">Clem</d=
iv></div><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_att=
r">On Mon, Sep 21, 2020 at 5:23 PM Rob Pike &lt;<a href=3D"mailto:robpike@g=
mail.com">robpike@gmail.com</a>&gt; wrote:<br></div><blockquote class=3D"gm=
ail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,=
204,204);padding-left:1ex"><div dir=3D"ltr">Back when we were running v5 at=
 the University of Toronto, we had a graphics device that we accessed, on o=
ur split I&amp;D space 11/45, using 0, something like this:<div><br></div><=
div>struct x {</div><div>=C2=A0 =C2=A0int reg0, reg1, ...;</div><div>};</di=
v><div><br></div><div>0-&gt;reg1 =3D 0234;</div><div><br></div><div>Several=
 old details of old C made this possible as well: Struct tags were global, =
-&gt; worked on any pointer, and ints and pointers were interchangeable.</d=
iv><div><br></div><div>-rob</div><div><br></div></div><br><div class=3D"gma=
il_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Tue, Sep 22, 2020 at 6:5=
1 AM John Cowan &lt;<a href=3D"mailto:cowan@ccil.org" target=3D"_blank">cow=
an@ccil.org</a>&gt; wrote:<br></div><blockquote class=3D"gmail_quote" style=
=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding=
-left:1ex"><div dir=3D"ltr"><div dir=3D"ltr"><br></div><br><div class=3D"gm=
ail_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Mon, Sep 21, 2020 at 1:=
55 AM Steve Nickolas &lt;<a href=3D"mailto:usotsuki@buric.co" target=3D"_bl=
ank">usotsuki@buric.co</a>&gt; wrote:<br></div><div>=C2=A0</div><blockquote=
 class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px so=
lid rgb(204,204,204);padding-left:1ex">I&#39;ve never written anything that=
 uses varargs, so I&#39;ve never run into <br>
that.=C2=A0 But I&#39;ve actually done quite a bit of work with an environm=
ent <br>
where this isn&#39;t true: MS-DOS using the large or huge model.=C2=A0 In t=
his <br>
environment, sizeof(int)=3D2, and sizeof(void*) is 4. Of course, it&#39;s n=
ot conformant to pass an int variable as an argument where a pointer variab=
le is expected.<br></blockquote><div><br></div><div>If the compiler was ISO=
-conformant (which it almost certainly was not), that would not matter.=C2=
=A0 0 in int context would be a 2-byte int with all bits zero, and 0 in poi=
nter context would be a 4-byte null pointer, probably with all bits zero.</=
div><div><br></div><div>C doesn&#39;t require that the address represented =
by the null pointer (whether or not it is all-bits-zero) is inaccessible, m=
erely that there is no C object or function there.=C2=A0 A simple shim of t=
he appropriate size (1, 2, 4, 8 bytes depending on the CPU&#39;s alignment =
rules) will suffice.</div><div><br></div></div></div>
</blockquote></div>
</blockquote></div>

--00000000000091b07a05afd9ef48--
