From: kevin.bowling@kev009.com (Kevin Bowling)
Date: Thu, 28 Sep 2017 19:23:11 -0700
Subject: [TUHS] RFS was: Re: UNIX of choice these days?
In-Reply-To: <20170928222056.GD28606@mcvoy.com>
References: <CAC20D2MKSzQEfmD0dnKYv-0V00TkL6f_-Dv4Gs1diOrBLS8x3Q@mail.gmail.com>
 <b6e8b71c-ba04-bbfb-00db-c371ee62cdb8@kilonet.net>
 <CAC20D2PYANmz2=oWCHX6h3jM5bxFBbzQZHDZXP00idyw+fwDZw@mail.gmail.com>
 <201709270844.v8R8i2kd021180@freefriends.org>
 <CAK7dMtBkpreyncAoc-CPsUgFeMvQpdBEynX3pmS-8Z0KXn8Y1A@mail.gmail.com>
 <CAC20D2NU6ErExdOuT6PNucf4VhuLKwW1=AcbaOdKtV3vocrFkg@mail.gmail.com>
 <CAK7dMtCER7LZ+WmQNRNH-YwYspD6jL7W370Q67Vou0Rp+YWv=Q@mail.gmail.com>
 <201709281349.v8SDnHp2005910@freefriends.org>
 <CAC20D2Op5Zq_7dZpAyDgik1NLh1zs3tC1YX9DAqXGq1HtysYOg@mail.gmail.com>
 <alpine.BSF.2.21.1709290803390.47452@aneurin.horsfall.org>
 <20170928222056.GD28606@mcvoy.com>
Message-ID: <CAK7dMtBnQY8FAgAd509BAjt1tJ-MP5HNuFeXAs0wjF2+msgFNQ@mail.gmail.com>

This is pretty much how we work today.  Build or crossbuild the kernel
on a host with your editor of choice and hopefully tons of cores like
my dual socket desktop.  Then netboot the device under test/victim.
Panic, edit, repeat, no panic :)

With modern CPUs and NICs you can pretty easily do diskless now.  But
for "scale out" designs there's something to be said for having lots
of fully independent systems, especially if the applications software
can avoid any artificial locality dependence.

On Thu, Sep 28, 2017 at 3:20 PM, Larry McVoy <lm at mcvoy.com> wrote:
> On Fri, Sep 29, 2017 at 08:08:16AM +1000, Dave Horsfall wrote:
>> On Thu, 28 Sep 2017, Clem Cole wrote:
>>
>> >Truth is that an Sun-3 running 'diskless' != as an Apollo running
>> >'twinned.' [There is a famous Clem' story I'll not repeat here from
>> >Masscomp about a typo I made, but your imagination would probably be right
>> >- when I refused to do build a diskless system for Masscomp]....
>>
>> Not the infamous "dikless" workstation?  I remember a riposte from a woman
>> (on Usenet?), saying she didn't know that it was an option...
>
> I dunno why all the hating on diskless.  They actually work, I used the
> heck out of them.  For kernel work, stacking one on top of the other,
> the test machine being diskless, was a cheap way to get a setup.
>
> Sure, disk was better and if your work load was write heavy then they
> sucked (*), but for testing, for editing, that sort of thing, they were
> fine.
>
> --lm
>
> (*) I did a distributed make when I was working on clusters.  Did the
> compiles on a pile of clients, all the data was on the NFS server, I started
> the build on the NFS server, did all the compiles remotely, did the link
> locally.  Got a 12x speed up on a 16 node + server setup.  The other kernel
> hacks were super jealous.  They were all sharing a big SMP machine with
> a Solaris that didn't scale for shit, I was way faster.
>


