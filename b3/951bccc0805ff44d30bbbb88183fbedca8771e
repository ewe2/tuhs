From: paul.winalski@gmail.com (Paul Winalski)
Date: Wed, 7 Mar 2018 13:54:32 -0500
Subject: [TUHS] Sleep()y musings
In-Reply-To: <CAC20D2NLhbLg3s+VRD0P3U1j7W_HcZsEEOTgd998eb0e-z3YRg@mail.gmail.com>
References: <20180306181127.2B21718C0D8@mercury.lcs.mit.edu>
 <CAC20D2NLhbLg3s+VRD0P3U1j7W_HcZsEEOTgd998eb0e-z3YRg@mail.gmail.com>
Message-ID: <CABH=_VTO7sdgGypp3U7zQoWdJ3HsGUUjrk-6_Rf5VE5gyNGD7g@mail.gmail.com>

On 3/6/18, Clem Cole <clemc at ccc.com> wrote:
>
> In the end, BSD4.2 ended up with new time
> calls because of that community and started doing things in 100th of second
> - which again IIRC was the best the Vax could do.
>
When all else fails, RTFM.  :-)

According to the VAX Architecture Reference Manual (1987), the
Interval Clock Register, which is used by OSes to keep track of real
time, is a 32-bit unsigned value incremented at 1-microsecond
(0.000001 second) intervals.

VAX also has a Time-of-Year Clock Register (colloquially called the
TOY clock), a 32-bit unsigned value whose LSB represents a resolution
of 10 milliseconds (0.01 second).  All VAX models except the
VAX-11/730 provided battery backup for the TOY clock so that it
continued to operate even when the system was powered off.  A VAX can
thus be powered off for about 497 days and still remember the
date/time.

I think Clem was remembering the TOY clock.  It would be the Interval
Clock Register that was used by BSD to implement sleep() and other
time-related services.

-Paul W.

