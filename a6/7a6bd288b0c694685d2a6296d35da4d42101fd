From: cowan@ccil.org (John Cowan)
Date: Thu, 30 Sep 2010 00:53:55 -0400
Subject: [TUHS] PDP-8 (was: 2.11BSD cross compiler)
In-Reply-To: <20100930042229.GA66070@dereel.lemis.com>
References: <AANLkTikjXZJ1W-0Ae5eZYfU2Kh+i+uCAB_-W=nFR-TmJ@mail.gmail.com>
	<Pine.BSI.4.64.1009281421370.25174@malasada.lava.net>
	<20100929005148.GA8032@bitmover.com>
	<AANLkTikSHg16z+JpqOkVOVZAJHV+r6cDf6Zboj97uOJ9@mail.gmail.com>
	<20100929023819.GA12919@bitmover.com>
	<AANLkTin53c5N3wGpPfi5DQ1WdrqtV5+ENmSVSoiZwFXu@mail.gmail.com>
	<20100930042229.GA66070@dereel.lemis.com>
Message-ID: <AANLkTinuzxEGLQj5iiywT6OiYmjCng2hcdkCAkXEC1am@mail.gmail.com>

On Thu, Sep 30, 2010 at 12:22 AM, Greg 'groggy' Lehey <grog at lemis.com> wrote:

>  Remember the
> autoincrement registers?  Even in those days they looked like a
> kludge, but they helped a lot.

I hardly ever used them, but I can't remember exactly why not.  I
remember writing quite a few subroutine libraries in PAL/8, and of
course you didn't want to steal them from the main program.

> It's funny how long octal clung on.  It should have gone away with 8
> bit bytes.

Octal made some sense on the PDP-11, with its 3-bit register fields,
even though the instructions were 16 bits.  I think the notation got
stabilized in the culture just because it was included in C.  In my
pre-announcement review of Go (not a work assignment, just something I
went and did when I was at Google) I urged them to remove octal from
integer, character, and string literals, but nope, they are still
there.  For one thing, it means that literals interoperate among C,
C++, and Go, though I don't know if that was the motivation.

>  But somehow I still have a soft spot for octal, and
> numbers like 7778 still look wrong.

/me chuckles.

> Hmm.  Am I expected to understand this?

No.


