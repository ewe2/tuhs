From: downing.nick@gmail.com (Nick Downing)
Date: Mon, 30 Jan 2017 12:34:41 +1100
Subject: [TUHS] Early Internet work (Was: History of select(2))
In-Reply-To: <20170129174142.1062618C0A8@mercury.lcs.mit.edu>
References: <20170129174142.1062618C0A8@mercury.lcs.mit.edu>
Message-ID: <CAH1jEzYG9A7UOhJ-bZ9Mrmanhyq7pFFnvLA+1etmgcWjQE30OQ@mail.gmail.com>

This is a wonderful find, is it possible for you to read the other tapes
also?

I would be particularly interested in the early 8080 compiler, I am
actively working on something like that at the moment. I have quite
extensively reverse engineered the famous Ritchie PDP-11 C compiler to
figure out how it works, it is actually pretty straightforward and I may
write a document about it someday (the code is a bit horrible due to the
many exceptional cases added to improve the output in particular
situations, all this has to be ignored in order to get at the underlying
algorithm which is elegant).

Steven Schultz or someone else also seems to have begun a PDP-11-targeted
port of the of 4.3BSD VAX-targeted PCC backend, I can't see myself
completing this but I was considering trying to adapt the Ritchie pass2 to
understand PCC intermediate code instead of Ritchie pass1 intermediate code
and using it more-or-less as-is as a PCC backend. There is no requirement
that a PCC backend use the PCC instruction table or macro format and in
this case it would probably be simpler if it did not. But one or other of
these backends has to be ported to Z180 (~= Z80 ~= 8080) and I'd be
thrilled to have a starting point.

I will also eventually pick up the 68K compiler too although I believe some
pretty good PCC based 68K C compilers will be extant due to late versions
of BSDs having been developed on 68K (I could be wrong about the BSDs and
68K but I am sure many unices ran on 68010+ and even a few on 68000 using
the famous second CPU chip to handle faults).

cheers, Nick

On 30/01/2017 4:42 AM, "Noel Chiappa" <jnc at mercury.lcs.mit.edu> wrote:

>     > From: Paul Ruizendaal <pnr at planet.nl>
>
>     >> I have this distinct memory of Dave Clark mentioning the Liza Martin
>     >> TCP/IP for Unix in one of the meeting report publihed as IENs
>
>     > It may be mentioned in this report:
>     > http://web.mit.edu/Saltzer/www/publications/rfc/csr-rfc-228.pdf
>
> Yeah, I had run across that in my search for any remnants of the Martin
> stuff.
>
>     > Would you know if any of its source code survived?
>
> As I had mentioned, I had found some old dump tapes, and had one of them
> read;
> it had some bad spots, but we've just (this morning) succeeding in having a
> look as to what's there, and I _think_ all of the source is OK (including
> the
> kernel code, as well as applications like server Telnet and FTP). No SCCS
> or
> anything like that, so it's a bit hit or miss doing history - the file
> write
> dates were preserved, but of course a lot of them would have been edited
> over
> time to fix bugs, add features, etc.
>
> The tape appears to contains a _lot_ of other historic material, and it's
> going to take a while to sort it all out; it includes a Version 6 with NCP
> from NOSC/SRI, some Unix from BBN; a BCPL compiler; a 'bind' for .rel
> format
> files (produced by MACRO-11 and probably BCPL) written in BCPL; programs to
> convert from .rel to a.out and back; an early verion of Montgomery EMACS;
> another Unix from 'TMI' (whoever that might be); another UNIX that's
> somehow
> associated with TRIX; someone's early kernel overlay stuff; an early 68K C
> compiler, and also an early 8080 C compiler - just a ton of stuff (that's
> just
> a few items that grabbed my eye as I scrolled by).
>
> Algol, alas, appears not to be there (we probably didn't add it, because of
> space reasons). The copy of LISP on this tape seem to be damaged; I do
> have 3
> other tapes, and between them, I hope we'll be able to retrieve it.
>
>         Noel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20170130/3a79b214/attachment.html>

