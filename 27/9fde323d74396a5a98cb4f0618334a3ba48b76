X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	DKIM_VALID_AU,HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 24101 invoked from network); 15 May 2020 20:25:34 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 15 May 2020 20:25:34 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id F1A199C97D; Sat, 16 May 2020 06:25:33 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 621A29C694;
	Sat, 16 May 2020 06:25:18 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (1024-bit key; unprotected) header.d=ccc.com header.i=@ccc.com header.b="ineMh5dY";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 28A5C9C668; Sat, 16 May 2020 06:25:16 +1000 (AEST)
Received: from mail-qk1-f177.google.com (mail-qk1-f177.google.com
 [209.85.222.177])
 by minnie.tuhs.org (Postfix) with ESMTPS id A184D9C668
 for <tuhs@tuhs.org>; Sat, 16 May 2020 06:25:15 +1000 (AEST)
Received: by mail-qk1-f177.google.com with SMTP id n14so3975210qke.8
 for <tuhs@tuhs.org>; Fri, 15 May 2020 13:25:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ccc.com; s=google;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=o3Qk0RMUSpLcrjSY8PUBGo4vg7k+aKSxDWK5nf/y8yo=;
 b=ineMh5dYR1Ar3+eqkTUFCqv+X8bRoXsPEqyRdgiWVRFkcJ8Y9+2Lu2mc/LX1kvn3nf
 Jyl4QdBLp9AfHWNz1xKBVjRNO1y1XHvNZZEWqoB3Z4dXyp0QLsrQpQOi5hAVhPkisX9m
 5z1GKfLDsCUZuADcaBihnnMJjYjAGmmgktgAY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=o3Qk0RMUSpLcrjSY8PUBGo4vg7k+aKSxDWK5nf/y8yo=;
 b=XWTdq5omOHCPm2F6KvScLGTV+uEhMvmc/SkYlJovAf8nFy9PoCYfjLA8kfYb0RF//k
 W3I2ekw1WusakQBuksMfpCJV1pByZ73BFY/9oGXGsoW5KFSGhYOnOARYg4mIsHR8Pc41
 H9Sb6NumDqllxu4I7jwwoU9+s6riH45xHsI9G1tKilHmpfNL4jPH0GOPghIFDE4wqrKX
 GtFsaSszCSEicLG0rnA7YBlfOtQPB0CV5y5B8fgEcaWsrfD21yTDayVWOk65lbNTQJgY
 prGj3bFDHbdNIOf01S7R3URfu4Mez4PkLnCwa2GywXKhMaX5z5pix05fezvBNs7x6Alk
 o1pA==
X-Gm-Message-State: AOAM532xm3JTceOxSO84jMj0LaKz0NwVF69m6CtAyC3uB/m/MXzgqcAW
 xHTA6JrjUveUFQO2An8P6r3zwRC9ZTqqf1ezA44uDUE9
X-Google-Smtp-Source: ABdhPJzWSZdwjrSDIBh4B8I0ouS/ScGSMolaEoaVl0wnLNXkkLbcsQ7ElJ+WL1JdImvwdR5nA3WPtWFqqmDWd1pTQec=
X-Received: by 2002:a37:a485:: with SMTP id n127mr5316554qke.476.1589574314639; 
 Fri, 15 May 2020 13:25:14 -0700 (PDT)
MIME-Version: 1.0
References: <202005141841.04EIfvEZ063529@tahoe.cs.Dartmouth.EDU>
 <CAKzdPgworqAHGFATWOao8PEpXeVP48UvCq-iE94jsaCUOXBD5w@mail.gmail.com>
 <D3259CA9-784C-4E37-888C-95D01E92ADB5@csp-partnership.co.uk>
 <20200515150122.GF30160@mcvoy.com>
 <CAC0cEp_HD6sSgxw9NmuS=tuvBkwRxL-tmP-rmuEMe3Y5JD_sUQ@mail.gmail.com>
 <014001d62af3$9cc209b0$d6461d10$@ronnatalie.com>
 <CAC20D2PDaM3hrvzD=QbWhMun_YUGrV0j5yqU4X+p8-i0xy0HoQ@mail.gmail.com>
 <019701d62af6$050344b0$0f09ce10$@ronnatalie.com>
In-Reply-To: <019701d62af6$050344b0$0f09ce10$@ronnatalie.com>
From: Clem Cole <clemc@ccc.com>
Date: Fri, 15 May 2020 16:24:47 -0400
Message-ID: <CAC20D2NkRqiiNhu8R5N9+wvK=zLxY+k8zuyS75zP698Jb+m7tA@mail.gmail.com>
To: Ronald Natalie <ron@ronnatalie.com>
Content-Type: multipart/alternative; boundary="0000000000005e5ac405a5b59cf4"
Subject: Re: [TUHS] v7 K&R C
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--0000000000005e5ac405a5b59cf4
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

I suspect we are saying the same thing.   C is defined as an int (as Larry
also showed), not an unsigned char (and frankly if you had done that, most
modern compilers will give you a warning).  IIRC you are correct that the
Ritchie compiler would not catch that error.

But, the truth is I know few C (experienced) programmers that would define
c as anything but an int; particularly in the modern era with compiler
warnings as good as they are.

Clem

On Fri, May 15, 2020 at 4:18 PM <ron@ronnatalie.com> wrote:

> EOF is defined to be -1.
>
> getchar() returns int, but c is a unsigned char, the value of (c =3D
> getchar()) will be 255.    This will never compare equal to -1.
>
>
>
>
>
>
>
> Ron,
>
>
>
> Hmmm... getchar/getc are defined as returning int in the man page and C i=
s
> traditionally defined as an int in this code..
>
>
>
> On Fri, May 15, 2020 at 4:02 PM <ron@ronnatalie.com> wrote:
>
> Unfortunately, if c is char on a machine with unsigned chars, or it=E2=80=
=99s of
> type unsigned char, the EOF will never be detected.
>
>
>
>
>
>
>
>
>    - while ((c =3D getchar()) !=3D EOF) if (c =3D=3D '\n') { /* entire re=
cord is
>    now there */
>
>
>
>

--0000000000005e5ac405a5b59cf4
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_default" style=3D"font-family:arial,he=
lvetica,sans-serif">I suspect we are saying the same thing.=C2=A0 =C2=A0C i=
s defined as an int (as Larry also showed), not an unsigned char (and frank=
ly if you had done that, most modern compilers will give you a warning).=C2=
=A0 IIRC you are correct that the Ritchie compiler would not catch that err=
or.</div><div class=3D"gmail_default" style=3D"font-family:arial,helvetica,=
sans-serif"><br></div><div class=3D"gmail_default" style=3D"font-family:ari=
al,helvetica,sans-serif">But, the truth is I know few C (experienced) progr=
ammers that would define c as anything but an int; particularly in the mode=
rn era with compiler warnings as good as they are.</div><div class=3D"gmail=
_default" style=3D"font-family:arial,helvetica,sans-serif"><br></div><div c=
lass=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">Cle=
m</div></div><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail=
_attr">On Fri, May 15, 2020 at 4:18 PM &lt;<a href=3D"mailto:ron@ronnatalie=
.com">ron@ronnatalie.com</a>&gt; wrote:<br></div><blockquote class=3D"gmail=
_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204=
,204);padding-left:1ex"><div lang=3D"EN-US"><div class=3D"gmail-m_159854993=
1325008144WordSection1"><p class=3D"MsoNormal">EOF is defined to be -1.<u><=
/u><u></u></p><p class=3D"MsoNormal">getchar() returns int, but c is a unsi=
gned char, the value of (c =3D getchar()) will be 255.=C2=A0=C2=A0=C2=A0 Th=
is will never compare equal to -1.<u></u><u></u></p><p class=3D"MsoNormal">=
<u></u>=C2=A0<u></u></p><div style=3D"border-right:none;border-bottom:none;=
border-left:none;border-top:1pt solid rgb(225,225,225);padding:3pt 0in 0in"=
><p class=3D"MsoNormal"><u></u>=C2=A0<u></u></p></div><p class=3D"MsoNormal=
"><u></u>=C2=A0<u></u></p><div><div><p class=3D"MsoNormal"><span style=3D"f=
ont-family:Arial,sans-serif">Ron,=C2=A0<u></u><u></u></span></p></div><div>=
<p class=3D"MsoNormal"><span style=3D"font-family:Arial,sans-serif"><u></u>=
=C2=A0<u></u></span></p></div><div><p class=3D"MsoNormal"><span style=3D"fo=
nt-family:Arial,sans-serif">Hmmm... getchar/getc are defined as returning i=
nt in the man page and C is traditionally defined as an int in this code..<=
u></u><u></u></span></p></div></div><p class=3D"MsoNormal"><u></u>=C2=A0<u>=
</u></p><div><div><p class=3D"MsoNormal">On Fri, May 15, 2020 at 4:02 PM &l=
t;<a href=3D"mailto:ron@ronnatalie.com" target=3D"_blank">ron@ronnatalie.co=
m</a>&gt; wrote:<u></u><u></u></p></div><blockquote style=3D"border-top:non=
e;border-right:none;border-bottom:none;border-left:1pt solid rgb(204,204,20=
4);padding:0in 0in 0in 6pt;margin-left:4.8pt;margin-right:0in"><div><div><p=
 class=3D"MsoNormal">Unfortunately, if c is char on a machine with unsigned=
 chars, or it=E2=80=99s of type unsigned char, the EOF will never be detect=
ed.<u></u><u></u></p><p class=3D"MsoNormal">=C2=A0<u></u><u></u></p><div><d=
iv><div><p class=3D"MsoNormal"><span style=3D"font-size:12pt">=C2=A0</span>=
<u></u><u></u></p></div><div><p class=3D"MsoNormal"><span style=3D"font-siz=
e:12pt">=C2=A0</span><u></u><u></u></p></div></div><blockquote style=3D"mar=
gin:5pt 0in 5pt 30pt"><div><div><ul style=3D"margin-top:0in" type=3D"disc">=
<li class=3D"gmail-m_1598549931325008144gmail-m-1419922433001503362msolistp=
aragraph"><span style=3D"font-size:12pt;font-family:&quot;Courier New&quot;=
;color:rgb(80,0,80)">while ((c =3D getchar()) !=3D EOF) if (c =3D=3D &#39;\=
n&#39;) { /* entire record is now there */</span><u></u><u></u></li></ul></=
div></div></blockquote><div><div><p class=3D"MsoNormal"><span style=3D"font=
-size:12pt">=C2=A0</span><u></u><u></u></p></div></div></div></div></div></=
blockquote></div></div></div></blockquote></div>

--0000000000005e5ac405a5b59cf4--
