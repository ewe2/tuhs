From: schily@schily.net (Joerg Schilling)
Date: Mon, 27 Jun 2016 17:17:40 +0200
Subject: [TUHS] Origin year of BSD csh?
In-Reply-To: <DC2A30BA-C596-4FB8-991F-6E42F310A75E@ronnatalie.com>
References: <201606261014.u5QAE1qX015184@skeeve.com>
 <5770032F.8030306@mhorton.net> <20160626181450.GK26734@mcvoy.com>
 <CAC20D2N1gHSsQYNCmUixdK4D5hhbfMuyD7wnYPmvD-3dTgtV7Q@mail.gmail.com>
 <57710068.Y5JOWn5FNyxO2PxU%schily@schily.net>
 <DC2A30BA-C596-4FB8-991F-6E42F310A75E@ronnatalie.com>
Message-ID: <57714394.vv8pvCYFh+xj37yi%schily@schily.net>

Ronald Natalie <ron at ronnatalie.com> wrote:

> vfork() is of use on non-paged (and poorly implemented paging) systems.    If you implemented the copy-on-write fork() behavior, you???d not need the vfork KLUDGE.

This is what the Linux people believe. As a result, they have a vfork() 
implementation that collects all pitfalls from fork() and vfork() ;-)

The basic difference is:

-	With a copy-on-write fork, you copy an address space description and
	need to set up a set of new MMU PTEs.

-	With vfork, you borrow the address space descrition and the MMU PTEs 
	from the parent.

Jörg

-- 
 EMail:joerg at schily.net                  (home) Jörg Schilling D-13353 Berlin
       joerg.schilling at fokus.fraunhofer.de (work) Blog: http://schily.blogspot.com/
 URL:  http://cdrecord.org/private/ http://sourceforge.net/projects/schilytools/files/'

