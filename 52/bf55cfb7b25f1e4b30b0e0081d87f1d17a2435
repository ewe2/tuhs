From: arnold@skeeve.com (arnold@skeeve.com)
Date: Sat, 10 Sep 2016 20:39:42 -0600
Subject: [TUHS] Shell control through external commands
In-Reply-To: <006301d20bcb$43ae03b0$cb0a0b10$@ronnatalie.com>
References: <201607151647.u6FGlqvW037575@tahoe.cs.Dartmouth.EDU>
 <20160910174011.GF5970@dnied%tiscali.it>
 <alpine.BSF.2.11.1609110842190.78806@aneurin.horsfall.org>
 <006301d20bcb$43ae03b0$cb0a0b10$@ronnatalie.com>
Message-ID: <201609110239.u8B2dgDJ010272@freefriends.org>

"Ron Natalie" <ron at ronnatalie.com> wrote:

> Traditionally, the shell recognized shell scripts and ran them in a new
> instance of the shell rather than calling exec on them.

I think that the way the shell "recognized" scripts was by having
exec fail, otherwise how would it know?  I think we'll have to go
grubbing in the source archives to be sure.

> It was a Berkeley hack to add a new exec magic number that happened to
> correspond to the characters #!.

ISTR reading on this list that #! was a post-V7 Bell Labs invention
that the BSD guys went and implemented themselves...

Can someone who was there please clarify?

Thanks,

Arnold

