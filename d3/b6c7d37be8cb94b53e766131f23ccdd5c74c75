X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	MIME_QP_LONG_LINE,T_SCC_BODY_TEXT_LINE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 20436 invoked from network); 31 Jan 2022 20:01:17 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 31 Jan 2022 20:01:17 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 4258D9B8E4; Tue,  1 Feb 2022 06:01:12 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id E0A909B67C;
	Tue,  1 Feb 2022 06:00:46 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 3BDB1951B7; Tue,  1 Feb 2022 06:00:44 +1000 (AEST)
Received: from cesium.clock.org (cesium.clock.org [157.22.10.65])
 by minnie.tuhs.org (Postfix) with ESMTPS id 303EB9518E
 for <tuhs@minnie.tuhs.org>; Tue,  1 Feb 2022 06:00:43 +1000 (AEST)
Received: from cesium.clock.org (localhost [127.0.0.1])
 by cesium.clock.org (Postfix) with ESMTP id 9D21ECBF35
 for <tuhs@minnie.tuhs.org>; Mon, 31 Jan 2022 12:00:40 -0800 (PST)
From: "Erik E. Fair" <fair-tuhs@netbsd.org>
In-reply-to: <CABH=_VS7G1XqO03NRkvSXEr8EiHWWP_sGyRnVNxV9wt3G9W_EQ@mail.gmail.com>
References: <alpine.DEB.2.21.2201301944370.17970@sd-119843.dedibox.fr>
To: tuhs@minnie.tuhs.org
Content-Type: text/plain; charset=US-ASCII; format=flowed
Content-Transfer-Encoding: quoted-printable
Mime-Version: 1.0
Date: Mon, 31 Jan 2022 12:00:40 -0800
Message-ID: <499.1643659240@cesium.clock.org>
Subject: Re: [TUHS] Compilation "vs" byte-code interpretation,
 was Re: Looking back to 1981 - what pascal was popular on what unix?
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

The definitions and boundaries between:

	Instruction Set Architecture (usually hardware, but see Webasm)

	P-code/bytecode interpreter internal instructions (e.g. Pascal, Java)

	Register Transfer Languages (RTL - compilers)

seem awfully ... fuzzy. Are there any hard & fast rules for classifying =
particular implementations into taxnomical categories? Wikipedia has an =
over-arching definition for "intermediate representation" ...

	https://en.wikipedia.org/wiki/Intermediate_representation

This is related to Unix in that Unix itself (both kernel system call API & C =
library) is an abstracting intermediary between the hardware (whole computer =
system including storage, networking), and application software, which "if =
written portably" doesn't have to care what hardware it's run on, so long as =
that hardware meets some minimum requirements for both Unix, and whatever the =
application's needs are.

	Erik
