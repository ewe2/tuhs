From: clemc@ccc.com (Clem Cole)
Date: Sun, 21 May 2017 15:58:25 -0400
Subject: [TUHS] Unix with TCP/IP for small PDP-11s
In-Reply-To: <alpine.BSF.2.20.1705220154160.48990@aneurin.horsfall.org>
References: <20170519151518.8800D18C09D@mercury.lcs.mit.edu>
 <CAC20D2PhQwCiPuSNZBhJUng=ZoE-JgTPayvhf+UkNctNuZ3POg@mail.gmail.com>
 <alpine.BSF.2.20.1705220154160.48990@aneurin.horsfall.org>
Message-ID: <CAC20D2N4i-kbLp6YyTyfntpNCzg36NaTUp8UHnJfzS4y=ejRtg@mail.gmail.com>

On Sun, May 21, 2017 at 12:16 PM, Dave Horsfall <dave at horsfall.org> wrote:

> Story time: DEC were flogging the /60s real cheap here in Oz, because a
> ​ ​
> deal with a major publisher (Murdoch?  Packer?  Who knows?) fell through
> ​ ​
> at the last moment, and they had an entire warehouse to shift.
>
​It was world wide.   The /60 was the fastest machine from release to
traditional product in DEC's history.​




>
> Trivia: the thing was micro-codeable, and I had dreams of implementing the
> ​ ​
> Unix call/return sequences as single instructions, but I never did get a
> ​ ​
> round tuit.
>
​Indeed.  @ Tek we had both the DEC tools and the CMU tools and the 11/40e
microcode from CMU (and the compiler that used csav/cret - probably still
do somewhere).   One problem was the microcode compiler from DEC ran on RSX
and CMU's ran on TOPS-10 of which I had neither.  ​

The /60 and /40 had similar but different base microengines and it was
going to take some work reimplementing the CMU extens for the 60.   I've
forgotten the details of what changed in the microengine, but something was
hugely different and enough that the CMU microcode would have been a model,
but would not work even if I could manage to get the tools together.
So, it was also on my todo list, but we got an 11/70 shortly after I pulled
together the pieces and we never got to it.

What I can tell you from the CMU experience is that it bought a small
amount of speed up, but the big thing code size reduction for some programs
and on 40 class machine -- anything like that helped.   But... the problem
was it made the binaries not portable.

We had to be very careful.   The EE production machines (which were 11/34
and later /34As) binaries of course could run on the CS systems, but the CS
machines with the /40e microcode, compiler et al, created binaries that
core dumped on the 34.   Worse yet, was accidently mixing libraries.

Ted and I talked about hacking the EE kernel to support a UUI like the FPs
did could take the CS binaries and run them.   But that project never
occurred - which was probably a shame.  Instead, Danny Klein and I got
really good at purging any tape or disk that passed through a CS system for
anything binary on it.

Clem
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20170521/944d42bd/attachment.html>

