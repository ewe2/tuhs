From: tfb@tfeb.org (Tim Bradshaw)
Date: Tue, 1 Nov 2011 16:24:00 +0000
Subject: [TUHS] b remnants?
In-Reply-To: <CAFCBnZtX8s+s5gXJG+3N7bhjd7iQ42Lrwt-7mKv=1AsUDsXPng@mail.gmail.com>
References: <CAFCBnZv9vWOwYL2Nxwpr_s0JvFsV1nfg59p7zppani7OjNPWAw@mail.gmail.com>
	<CAFCBnZtX8s+s5gXJG+3N7bhjd7iQ42Lrwt-7mKv=1AsUDsXPng@mail.gmail.com>
Message-ID: <D4019958-C257-4BD1-9F51-97E784933F1D@tfeb.org>

On 15 Oct 2011, at 04:57, A. P. Garcia wrote:

> What intrigued me about this is that it's such an early example of an
> abstract machine running as an interpreter. BCPL, roughly
> contemporaneous, used ocode as an intermediate language, but it seems
> this was intended to be further translated into assembly. While it's
> possible to interpret ocode, in practice it seems this was rare, if it
> was done at all.

I think there was at least one system which interpreted O-code (ocode?): the BCPL system for the BBC micro.  That machine was pretty short of RAM (32k but the screen and OS ate a significant chunk of that, at least in some screen modes) but had a good deal of ROM, and I think the ocode interpreter lived in ROM (as well, I assume as the BCPL compiler, though that might itself have been an ocode program on a floppy, I'm not sure).  I learnt BCPL on that platform.

