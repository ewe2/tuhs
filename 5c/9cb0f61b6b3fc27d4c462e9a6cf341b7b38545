From: clemc@ccc.com (Clem Cole)
Date: Sat, 18 Nov 2017 13:57:55 -0500
Subject: [TUHS] Determining what was on a tape back in the day
In-Reply-To: <e8e3e990-6b54-9ceb-bf2c-1857de4e2211@gmail.com>
References: <e8e3e990-6b54-9ceb-bf2c-1857de4e2211@gmail.com>
Message-ID: <CAC20D2O+qgQdZzC2sg_BmuchRG_HHypS-0W+H+vzKQObfx4b+Q@mail.gmail.com>

A quick look, and I think it's an stp (super TP) tape -- stp is from the
Harvard distribution.   This would make sense, because that was the
standard back before tar.
As Ron pointed out, tp (which Ken designed for DECTapes originally) puts
the index at the head of the tape (tar and later cpis threaded the index
inline).   But it means its a fixed size and there were some other issues
(tp may have originally been in assembler IIRC).   On DECtape, tp worked
pretty well/was pretty cool because you could update a block, less so on
9-track which when you re-wrote block N, you lost all blocks afterwards.
 Also, I don't remember why now [probably the limits off the directory],
but it was typically in those days to take all the files in a directory,
turn them into a foo.a (ar format) archive.  So the stp image was a bunch
of files:   dir1/mumble.a  dir2/grumble.a dir3/bumble.a ...
You then needed to unarchive the files within each directory.   Also,
remember ar(1) when through some changes in format between 4-7th editions
as the compiler and linker matured.  So watch out on that front too...

Anyway, v6 tp probably will read it, but if you poke around the TUHS and
bitkeeper archives for the original Harvard distribution, stp.c should
exist.

On Sat, Nov 18, 2017 at 11:39 AM, Will Senn <will.senn at gmail.com> wrote:

> So, I came across this tape:
>
> http://bitsavers.trailing-edge.com/bits/DEC/pdp11/dectape/
> TU_DECtapes/unix6.dta
>
> I was curious what was on it,  so I read the description at:
>
> http://bitsavers.trailing-edge.com/bits/DEC/pdp11/dectape/TU_DECtapes.txt
>
> UNIX1       PURDUE UNIX TAPES
> UNIX2
> UNIX4
> UNIX6
> HARBA1      HARVARD BASIC TAPE 1
> HARBA2      HARVARD BASIC TAPE 2
> MEGTEK      MEGATEK UNIX DRIVER
> RAMTEK      RAMTEK UNIX DRIVER
>
> Cool, sounds interesting, so I downloaded the unix6.dta file and fired up
> simh - after some fiddling, I figured out that I could get a boot prompt
> (is that actually from the tape?) if I:
>
> set cpu 11/40
> set en tc
> att tc0 unix6.dta
> boot tc0
> =
>
> At that point, I was stuck - the usual tmrk, htrk, and the logical
> corollary tcrk didn't do anything except return me to the boot prompt.
>
> I was thinking this was a sixth edition install tape of some sort, but if
> it is, I'm not able to figure it out. I thought I would load the tape into
> v7 and look at its content using tm or tp, but then I realized that I
> didn't have a device set up for TU56 and even if I did, I didn't know how
> to do a dir on a tape - yeah, I know, I will go read the manual(s) in
> chagrin.
>
> In the meantime, my question for y'all is similar to my other recent
> questions, and it goes like this:
>
> When you received an unmarked tape back in the day, how did you go about
> figuring out what was on it? What was your process (open the box, know by
> looking at it that it was an x rather than a y, load it into the tape
> reader and read some bytes off it and know that it was a z, use unix to
> read the tape using tm, tp, tar, dd, cpio or what, and so on)? What advice
> would you give a future archivist to help them quickly classify bit copies
> of tapes :).
>
> Thanks,
>
> Will
>
>
>
>
>
> --
> GPG Fingerprint: 68F4 B3BD 1730 555A 4462  7D45 3EAA 5B6D A982 BAAF
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20171118/f2248bad/attachment-0001.html>

