X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	DKIM_VALID_AU,HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 29226 invoked from network); 2 Jun 2020 20:44:18 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 2 Jun 2020 20:44:18 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id D79B49CAEB; Wed,  3 Jun 2020 06:44:17 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id B0A199CA34;
	Wed,  3 Jun 2020 06:43:54 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (1024-bit key; unprotected) header.d=ccc.com header.i=@ccc.com header.b="M8PpWOQN";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 8473A9CA34; Wed,  3 Jun 2020 06:43:52 +1000 (AEST)
Received: from mail-qk1-f177.google.com (mail-qk1-f177.google.com
 [209.85.222.177])
 by minnie.tuhs.org (Postfix) with ESMTPS id 037BD9C96B
 for <tuhs@minnie.tuhs.org>; Wed,  3 Jun 2020 06:43:52 +1000 (AEST)
Received: by mail-qk1-f177.google.com with SMTP id q8so13923352qkm.12
 for <tuhs@minnie.tuhs.org>; Tue, 02 Jun 2020 13:43:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ccc.com; s=google;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=R7lWOMpNQO7b3xkcFetuNoQrbYvhTUfspeHCk69wJf4=;
 b=M8PpWOQNlEIZFTRbkcw017MM0qepFW0kENVw/IqYe9FNfMGWGRW80jep7HeepdJQE9
 B8gDUWprETD6OkVWQ4FRAxWgEzSLqBnXbUf2BkYhpN8wdwrtQ59oqENOvoSr+nCWCP1c
 0kXWpUQ670sd7B7Ndee8Qjey3Lzm6uKS608pk=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=R7lWOMpNQO7b3xkcFetuNoQrbYvhTUfspeHCk69wJf4=;
 b=e8f4R+XDo6SqmBiLxg78n45uZCocpPDw7mArWqnz3hyDGm5pls1U1Qbi4/G7WaAFqW
 RkaM7leleK3jUL2hCS65xADoSs9eE2vpkYSaxIZzr4KU5C2zwmszzrCCJqs5GZR7Vldp
 OXtQz42ZrhgWf9ApX38MCzcmBf+hhBKp5qD5/7VjvFjE43u+vxNCOvnJ+qrUivAuIhxK
 GroG9hlMvWYiBSIDf/B1S9KmKKmeugQlD7VJ5PRU2xgJBN+/UAQY8ccDKMcIu7hJxuNR
 RqNCdJBMPDY7udNYccrH1dwxDGNO44SKv6h5EUCBeYWKniOyKkQhw+5yLygYDVC2kFAq
 dSjA==
X-Gm-Message-State: AOAM532a2u595nomg5b5Bf6W6wyhBdN2VWeOvwWg2CoACCOPdQQEBui/
 hmHGutCippEkefWRtt19Ic+iPROOmmeHpzQjNR9wQoJmuLk=
X-Google-Smtp-Source: ABdhPJzfp15vI5zW718DH6Ts8frSnyPO2IcmszTF7bH7Wmi0/67b0mfgF89vbA9gkvqheMXkOpGgjACfVTLPrQTXwpM=
X-Received: by 2002:a37:6385:: with SMTP id
 x127mr26781732qkb.307.1591130630942; 
 Tue, 02 Jun 2020 13:43:50 -0700 (PDT)
MIME-Version: 1.0
References: <20200602201334.95D9718C079@mercury.lcs.mit.edu>
In-Reply-To: <20200602201334.95D9718C079@mercury.lcs.mit.edu>
From: Clem Cole <clemc@ccc.com>
Date: Tue, 2 Jun 2020 16:43:25 -0400
Message-ID: <CAC20D2PRThvBqMz_ApiQk1f36F1Yz4VSqf_BB1dnuC9HNxfOvQ@mail.gmail.com>
To: Noel Chiappa <jnc@mercury.lcs.mit.edu>
Content-Type: multipart/alternative; boundary="0000000000000c86e505a71ff8d3"
Subject: Re: [TUHS] non-blocking IO
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--0000000000000c86e505a71ff8d3
Content-Type: text/plain; charset="UTF-8"

On Tue, Jun 2, 2020 at 4:14 PM Noel Chiappa <jnc@mercury.lcs.mit.edu> wrote:

> Ahem. Lots more _core_. People keeep forgetting that we're looking at
> decicions made at a time when each bit in main memory was stored in a
> physically separate storage device, and having tons of memory was a dream
> of
> the future.
>
Yeah -- that is something that forgotten.  There's a kit/hackday project to
make 32-byte core for an Arduino I did with some of my boy scouts doing
electronic MB a while back just to try to give them a feel what a 'bit'
was.    Similarly, there was a update of in late 1960's children's book
originally called 'A Million' it's now called: A Million Dots
<https://www.amazon.com/Million-Dots-Andrew-Clements/dp/0689858248/ref=sr_1_1?crid=2AX8H8L2EM0HL&dchild=1&keywords=a+million+dots+by+andrew+clements&qid=1591129965&sprefix=a+million+dots%2Caps%2C155&sr=8-1>
Each page has 10K dots.  The idea is to help young readers get a real feel
for what 'a million' means visually.


>
> E.g. the -11/40 I first ran Unix on had _48 KB_ of core memory - total!
> And that had to hold the resident OS, plus the application! It's no
> surprise that Unix was so focused on small size - and as a corollary, on
> high bang/buck ratio.'

Amen -- I ran an 11/34 with 64K under V6 for about 3-6 months while we were
awaiting the 256K memory upgrade.


>
>
> But even in his age of lighting one's cigars with gigabytes of main memory
> (literally), small is still beautiful, because it's easier to understand,
> and
> complexity is bad. So it's too bad Unix has lost that extreme parsimony.
>
Yep -- I think we were discussing this last week WRT to cat -v/fmt et al.

I fear some people confuse 'progress' with 'feature creep.'   Just because
we can do something, does not mean we should.

As I said, I'm a real fan of async I/O and like Paul, feel that it is a
'better' primitive.  But I fully understand and accept, that given the
tradeoffs of the time, UNIX did really well and I much prefer what we got
than the alternative.  I'm happy we ended up with simply and just works.

--0000000000000c86e505a71ff8d3
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><div class=3D"gmail_default" style=3D"fon=
t-family:arial,helvetica,sans-serif"><br></div></div><br><div class=3D"gmai=
l_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Tue, Jun 2, 2020 at 4:14 =
PM Noel Chiappa &lt;<a href=3D"mailto:jnc@mercury.lcs.mit.edu">jnc@mercury.=
lcs.mit.edu</a>&gt; wrote:</div><blockquote class=3D"gmail_quote" style=3D"=
margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-lef=
t:1ex">
Ahem. Lots more _core_. People keeep forgetting that we&#39;re looking at<b=
r>
decicions made at a time when each bit in main memory was stored in a<br>
physically separate storage device, and having tons of memory was a dream o=
f<br>
the future.<br></blockquote><div><span class=3D"gmail_default" style=3D"fon=
t-family:arial,helvetica,sans-serif">Yeah -- that is something that forgott=
en.=C2=A0 There&#39;s a kit/hackday project to make 32-byte core for an Ard=
uino I did with some of my boy scouts doing electronic=C2=A0MB a while back=
 just to try to give them a feel what a &#39;bit&#39; was.=C2=A0 =C2=A0 Sim=
ilarly, there was a update of in late 1960&#39;s children&#39;s book origin=
ally called &#39;A Million&#39; it&#39;s now called:=C2=A0</span><a href=3D=
"https://www.amazon.com/Million-Dots-Andrew-Clements/dp/0689858248/ref=3Dsr=
_1_1?crid=3D2AX8H8L2EM0HL&amp;dchild=3D1&amp;keywords=3Da+million+dots+by+a=
ndrew+clements&amp;qid=3D1591129965&amp;sprefix=3Da+million+dots%2Caps%2C15=
5&amp;sr=3D8-1">A Million Dots</a></div><div><span class=3D"gmail_default" =
style=3D"font-family:arial,helvetica,sans-serif">Each page has 10K dots.=C2=
=A0 The idea is to help young readers get a real feel for what &#39;a milli=
on&#39;=C2=A0means visually.</span></div><div><span class=3D"gmail_default"=
 style=3D"font-family:arial,helvetica,sans-serif"></span>=C2=A0</div><block=
quote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1=
px solid rgb(204,204,204);padding-left:1ex">
<br>
E.g. the -11/40 I first ran Unix on had _48 KB_ of core memory - total!<br>
And that had to hold the resident OS, plus the application! It&#39;s no<br>
surprise that Unix was so focused on small size - and as a corollary, on<br=
>
high bang/buck ratio.<span class=3D"gmail_default" style=3D"font-family:ari=
al,helvetica,sans-serif">&#39;</span></blockquote><div><span class=3D"gmail=
_default" style=3D"font-family:arial,helvetica,sans-serif">Amen -- I ran an=
 11/34 with 64K under V6 for about 3-6 months while we were awaiting the 25=
6K memory upgrade.</span></div><div><span class=3D"gmail_default" style=3D"=
font-family:arial,helvetica,sans-serif"></span>=C2=A0</div><blockquote clas=
s=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid r=
gb(204,204,204);padding-left:1ex"><span class=3D"gmail_default" style=3D"fo=
nt-family:arial,helvetica,sans-serif"></span><br>
<br>
But even in his age of lighting one&#39;s cigars with gigabytes of main mem=
ory<br>
(literally), small is still beautiful, because it&#39;s easier to understan=
d, and<br>
complexity is bad. So it&#39;s too bad Unix has lost that extreme parsimony=
.<br></blockquote><div><span class=3D"gmail_default" style=3D"font-family:a=
rial,helvetica,sans-serif">Yep -- I think we were discussing this last week=
 WRT to cat -v/fmt et al.</span></div><div><span class=3D"gmail_default" st=
yle=3D"font-family:arial,helvetica,sans-serif"><br></span></div><div><span =
class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">I =
fear some people confuse &#39;progress&#39; with &#39;feature creep.&#39;=
=C2=A0 =C2=A0Just because we can do something, does not mean we should.</sp=
an></div><div><span class=3D"gmail_default" style=3D"font-family:arial,helv=
etica,sans-serif"><br></span></div><div><span class=3D"gmail_default" style=
=3D"font-family:arial,helvetica,sans-serif">As I said, I&#39;m a real fan o=
f async I/O and like Paul, feel that it is=C2=A0a &#39;better&#39; primitiv=
e.</span>=C2=A0<span class=3D"gmail_default" style=3D"font-family:arial,hel=
vetica,sans-serif"> But I fully understand and accept, that given the trade=
offs of the time, UNIX did really well and I much prefer what we got than t=
he alternative.=C2=A0 I&#39;m happy we ended up with simply and just works.=
</span></div></div></div>

--0000000000000c86e505a71ff8d3--
