From: krewat@kilonet.net (Arthur Krewat)
Date: Thu, 5 Apr 2018 18:46:55 -0400
Subject: [TUHS] long lived programs
In-Reply-To: <CAC20D2PfGSsv_EwxOHAmx=LrXwcdxMYSLUQ3mBX6bQ4RgtY20w@mail.gmail.com>
References: <1522962186.9871.for-standards-violators@oclsc.org>
 <CAC20D2PfGSsv_EwxOHAmx=LrXwcdxMYSLUQ3mBX6bQ4RgtY20w@mail.gmail.com>
Message-ID: <60721fb1-d71b-1790-b2b6-d83453ef4dff@kilonet.net>

On 4/5/2018 5:23 PM, Clem Cole wrote:
> Case folding I find funnier however. Back in the days of 5 and 6 bit 
> codes, particularly when file names were stored in things like rad50 
> it made perfect sense.   The basic character code did not handle upper 
> and lower well, and many keyboards were only one case anyway.   But by 
> the time of the 8 bit byte, CP/M and it's child DOS, blindly follow 
> along.  Instead of thinking why it was done and since we have a new 
> file system format and thinking -- hmmm maybe we don't need to have 
> the same limitation.
>

I come from the world of SIXBIT on TOPS-10. One of my first tasks for 
LIRICS/BOCES was to write a replacement for MIC, while still in High 
School. The TTY I used did only upper case. So all the comments in that 
source code were in upper case.

When it came to real ASCII, and keyboard input, you could never assume 
that the TTY was going to give you lower case by default (or upper, for 
that matter). What to do? Be case-insensitive in everything you do.

While I understand the simplicity of the code that had to deal with 
filenames in UNIX (no flipping bits), I don't understand why a file 
README.TXT is different than readme.txt in UNIX.

Now, I love UNIX - I wouldn't have it any other way, but I often wonder 
what the design goal was. As for a "limitation" for case-sensitive file 
names, it's more like a feature to me.

art k.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20180405/09f883d8/attachment.html>

