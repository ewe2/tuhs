From: dave@horsfall.org (Dave Horsfall)
Date: Sun, 11 Sep 2016 14:07:48 +1000 (EST)
Subject: [TUHS] Shell control through external commands
In-Reply-To: <201609110239.u8B2dgDJ010272@freefriends.org>
References: <201607151647.u6FGlqvW037575@tahoe.cs.Dartmouth.EDU>
 <20160910174011.GF5970@dnied%tiscali.it>
 <alpine.BSF.2.11.1609110842190.78806@aneurin.horsfall.org>
 <006301d20bcb$43ae03b0$cb0a0b10$@ronnatalie.com>
 <201609110239.u8B2dgDJ010272@freefriends.org>
Message-ID: <alpine.BSF.2.11.1609111404230.78806@aneurin.horsfall.org>

On Sat, 10 Sep 2016, arnold at skeeve.com wrote:

> I think that the way the shell "recognized" scripts was by having exec 
> fail, otherwise how would it know?  I think we'll have to go grubbing in 
> the source archives to be sure.

Correct; if the exec failed then the invoking shell assumed that it was a 
shell script, and spawned a shell to run it.

With the #! hack, it had to be followed by the full path name (white space 
optional) and the kernel ran it directly.

-- 
Dave Horsfall DTM (VK2KFU)  "Those who don't understand security will suffer."

