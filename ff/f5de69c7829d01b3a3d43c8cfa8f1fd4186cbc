X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.5 required=5.0 tests=MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE,SUBJ_ALL_CAPS autolearn=ham autolearn_force=no
	version=3.4.4
Received: (qmail 7488 invoked from network); 9 Feb 2021 07:43:07 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 9 Feb 2021 07:43:07 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 0ABB59C9AC; Tue,  9 Feb 2021 17:43:04 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id AEE359BA43;
	Tue,  9 Feb 2021 17:42:39 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 5E2879BA43; Tue,  9 Feb 2021 17:42:36 +1000 (AEST)
Received: from hop.toad.com (75-101-100-43.dsl.static.fusionbroadband.com
 [75.101.100.43])
 by minnie.tuhs.org (Postfix) with ESMTPS id C5ECE9BA42
 for <tuhs@minnie.tuhs.org>; Tue,  9 Feb 2021 17:42:35 +1000 (AEST)
Received: from hop.toad.com (localhost [127.0.0.1])
 by hop.toad.com (8.12.9/8.12.9) with ESMTP id 1197gYmj008093;
 Mon, 8 Feb 2021 23:42:34 -0800
To: Andrew Warkentin <andreww591@gmail.com>
In-reply-to: <CAD-qYGrbFhrjtWgAxRxMBCtV812zM38zAphyaE-+1ehhT3795g@mail.gmail.com> 
References: <f5977ed8-b5ac-b626-a5cf-ec18b1778f91@gmail.com>
 <CAD-qYGrbFhrjtWgAxRxMBCtV812zM38zAphyaE-+1ehhT3795g@mail.gmail.com>
Comments: In-reply-to Andrew Warkentin <andreww591@gmail.com>
 message dated "Mon, 08 Feb 2021 22:10:05 -0700."
Date: Mon, 08 Feb 2021 23:42:34 -0800
Message-ID: <8092.1612856554@hop.toad.com>
From: John Gilmore <gnu@toad.com>
Subject: Re: [TUHS] QNX
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

Andrew Warkentin <andreww591@gmail.com> wrote:
> A lot of people still seem to believe that microkernels are inherently
> slow, even though fast microkernels (specifically QNX) predate the
> slow ones by several years.

Wait, are we talking about the same operating system called QNX?

We had a customer at Cygnus in the 1990s (perhaps QNX itself) who wanted
us to port the GNU compilers to it.  It was the slowest, buggiest system
we ever tried to run our code on.  I think they claimed POSIX
compatibility; hollow laugh!  It was more like 1970's compatibility.  It
had 14-character file names, the shell and utilities regularly
core-dumped when doing ordinary work, everything had built-in random
undocumented line length limits and file size limits and such (which was
also true in V7 -- that's one thing Richard Stallman insisted on fixing
in every GNU utility; see the GNU Coding Standards).

Our GNU compiler tools ran everywhere, they hosted and bootstrapped on
everything.  Everything except QNX.  Shell scripts and makefiles that
worked on a hundred other UNIX systems were impossible to get working on
QNX.  I think we reported dozens of QNX bugs to the vendor, most of which
never got fixed.

Perhaps somewhere under all that crud there was some kind of "fast
microkernel", but you couldn't prove it by me.  By the time it got to
user code, the only thing it was fast at was failing.  We were trying to
do real work on it, and gave up after some engineers turned the air blue
with incredulous exclamations.  I think we ended up cross-compiling the
GNU compilers for it, from some sane system.  They still had to fix a
bunch of bugs in their libraries that we had to link with.

I realize this flame is not about microkernels.  But perhaps if they had
spent less time optimizing cache hits in the microkernel, the rest of
their system wouldn't have been shot full of obvious holes.

	John
