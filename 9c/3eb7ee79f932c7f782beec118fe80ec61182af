From: steffen@sdaoden.eu (Steffen Nurpmeso)
Date: Thu, 09 Feb 2017 14:07:04 +0100
Subject: [TUHS] // comment in C++
In-Reply-To: <9E957EE0-DC6F-4B39-9AF9-CFAE68616CF8@planet.nl>
References: <CAP6exYJ_ifC=9zLTwq99fXt+nFAt2SSoPzdQKZwTHEG0NBcoSg@mail.gmail.com>
 <20170208224556.GG65698@eureka.lemis.com>
 <04c401d2825d$d0758da0$7160a8e0$@ronnatalie.com>
 <20170209121204.GJ5418@yeono.kjorling.se>
 <9E957EE0-DC6F-4B39-9AF9-CFAE68616CF8@planet.nl>
Message-ID: <20170209130704.XIzNK%steffen@sdaoden.eu>

Paul Ruizendaal <pnr at planet.nl> wrote:
 |> On 9 Feb 2017, at 13:12, Michael Kjörling <michael at kjorling.se> wrote:
 |> On 8 Feb 2017 17:50 -0500, from ron at ronnatalie.com (Ron Natalie):
 |>> Amusingly in the UNIVAC FIELDDATA character set.   The @ had the \
 |>> value zero
 |>> (and was called the master space).
 |> 
 |> That wouldn't have anything to do with how ^@ is a somewhat common
 |> representation of 000, would it? (Yes, using octal on purpose.) I've
 |> always kind of wondered where that notation came from.
 |> 
 |> That ^A through ^Z were representations of 001 through 032 makes more
 |> sense.
 |
 |Isn’t it because it is simply the control code + 0100 to arrive at the
 |capitals column of the ascii table? (http://www.asciitable.com)
 |
 |Hence ^@ for NULL and ^[ for ESC.

That is also what i thought and think.  The MUA i maintain now
documents (in the next release):

  ‘\cX’    A mechanism that allows usage of the non-printable
           (ASCII and compatible) control codes 0 to 31: to cre‐
           ate the printable representation of a control code the
           numeric value 64 is added, and the resulting ASCII
           character set code point is then printed, e.g., BEL is
           ‘7 + 64 = 71 = G’.  Whereas historically circumflex
           notation has often been used for visualization pur‐
           poses of control codes, e.g., ‘^G’, the reverse
           solidus notation has been standardized: ‘\cG’.  Some
           control codes also have standardized (ISO 10646, ISO
           C) alias representations, as shown above (e.g., ‘\a’,
           ‘\n’, ‘\t’): whenever such an alias exists S-nail will
           use it for display purposes.  The control code NUL
           (‘\c@’) ends argument processing without producing
           further output.

I hope this is correct.

--steffen

