From: will.senn@gmail.com (Will Senn)
Date: Mon, 16 Oct 2017 11:38:48 -0500
Subject: [TUHS} Running V8 ...
In-Reply-To: <201710161158.v9GBweD4005539@coolidge.cs.Dartmouth.EDU>
References: <201710161158.v9GBweD4005539@coolidge.cs.Dartmouth.EDU>
Message-ID: <314e66e3-c357-0e05-f0ed-75dd386366a5@gmail.com>

On 10/16/17 6:58 AM, Doug McIlroy wrote:
> The advent of non-typewriter input put a damper on Universal Unix. One has
> to learn something to get started with a novel device. I am impressed,
> though, by the breadth of Universal Unix that survives behind those
> disparate facades.

Doug,

I totally agree. In 2005, I bought a Powerbook because I liked the 
aesthetics of it over Windows laptops of that era. I had been using 
Linux for fun but not without a significant bit of pain since the early 
1990's (0.9 kernel), but never seriously. When I opened up my first 
terminal on the Powerbook, I began to love my Powerbook and Unix - 
beauty AND power! As a result of that exposure, I'm comfortable with 
pretty much any *nix and am only frustrated when distributions mess with 
the core tools or leave out system documentation.

To digress a little, my recent exposure to V6 an V7 have only served to 
reinforce my appreciation for the universal aspects of Unix. How is it 
remotely possible that OS's that are approaching 40 years old have so 
much in common with their modern ancestors? The thing that most 
impresses me though, is the durability of the documentation. I was 
reading K&R's "Programming Unix" in volume 2 of the V7 programmer's 
guide. When I came across a concise and informative description of fork:

    Now  we  will  show  how  to regain  control  after  running a 
    program  with execl or execv.   Since  these  routines simply 
    overlay  the new  program  on  the  old  one,  to  save the  old 
    one  requires  that  it  first  be  split  into  two copies;  one  of
    these  can  be  overlaid,  while  the  other  waits  for  the new, 
    overlaying  program  to  finish.   The  splitting  is
    done  by  a  routine  called fork.

Nowadays, fork is usually discussed first, with exec seeming to be 
included as a second class citizen (see Rago & Stevens APUE), which to 
me always seemed a little inverted. The K&R note shows exec first and 
then fork - seems logical - which is how most of K&R and most of the V6 
& V7 documentation is - too bad most of today's documentation is either 
deemed unnecessary (vis a vis the intuitiveness of the Mac/iPhone or is 
of poor quality.

Your note makes me wonder what you thought of Plan 9's mouse input, or 
what K&R thought of it, about "having" to use a mouse for input. I'm 
playing with Plan 9 on my raspberry pi 2 model b and while it seems to 
work, I find the interface constantly getting in the way of my mind and 
fingers :). You even have to use the mouse to wake the screen up! Don't 
get me wrong, I find Plan 9 to be quite interesting and parts of it  
conceptually elegant, but not the interface!

Later,

Will




-- 
GPG Fingerprint: 68F4 B3BD 1730 555A 4462  7D45 3EAA 5B6D A982 BAAF

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20171016/4bf58ed0/attachment.html>

