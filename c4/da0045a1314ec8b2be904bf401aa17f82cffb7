From: richard@inf.ed.ac.uk (Richard Tobin)
Date: Sun, 14 May 2017 00:11:21 +0100 (BST)
Subject: [TUHS] C declarations.
In-Reply-To: Random832's message of Sat, 13 May 2017 15:08:12 -0400
Message-ID: <20170513231121.0DB3A1274787@macaroni.inf.ed.ac.uk>

> Fortran, for the record, passes nearly everything by reference

Sort of.  The Fortran 77 standard imposes restrictions that appear to
be intended to allow the implementation to pass by value-and-result
(i.e. values are copied in, and copied back at return).  In particular
it disallows aliasing that would allow you to distinguish between
the two methods:

  If a subprogram reference causes a dummy argument in the referenced
  subprogram to become associated with another dummy argument in the
  referenced subprogram, neither dummy argument may become defined
  during execution of that subprogram.

http://www.fortran.com/F77_std/rjcnf-15.html#sh-15.9.3.6

-- Richard

-- 
The University of Edinburgh is a charitable body, registered in
Scotland, with registration number SC005336.


