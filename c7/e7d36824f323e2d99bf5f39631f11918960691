X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_ADSP_CUSTOM_MED,
	DKIM_INVALID,DKIM_SIGNED,FREEMAIL_FROM,HTML_MESSAGE,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 25857 invoked from network); 20 Jul 2020 17:24:58 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 20 Jul 2020 17:24:58 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 326FF9BA75; Tue, 21 Jul 2020 03:24:54 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 9CE2F9BA30;
	Tue, 21 Jul 2020 03:24:03 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=gmail.com header.i=@gmail.com header.b="asr2ZHZc";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id B935A9BA30; Tue, 21 Jul 2020 03:24:01 +1000 (AEST)
Received: from mail-oi1-f169.google.com (mail-oi1-f169.google.com
 [209.85.167.169])
 by minnie.tuhs.org (Postfix) with ESMTPS id 374A59BA2A
 for <tuhs@minnie.tuhs.org>; Tue, 21 Jul 2020 03:24:01 +1000 (AEST)
Received: by mail-oi1-f169.google.com with SMTP id y22so14938036oie.8
 for <tuhs@minnie.tuhs.org>; Mon, 20 Jul 2020 10:24:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=to:from:subject:message-id:date:user-agent:mime-version
 :content-language;
 bh=yaVcx0HOOT4wCnZ58uf6uJZ5IwsI1sTs1ZlHQXT+iHE=;
 b=asr2ZHZchgOG4imEbvxnIo5HN+BH1B/820OYXSr6nHsl8+N3WP25ECoaltr85pzAha
 eluzunIbs5gYb3iZnT+qeuBUI/I5Cr/ZbX6AHOP7gQuarl838kM5k/1df1IOEMAzL7C3
 jpiX5mUYMZbJs72CU01S8/6YMeB4Ri6LPwI0H6W0SZHhypQXDr9oIi1PfTvtSCfO2VM2
 ql4djTn/u2EkNB1EUv7QdRs3EeLcoNKkny/B6NCdrjdSY5wTFQZqScqaDiklAQueKskN
 H6ibLTYxhU9CItgVur6Kt7lrzzKqdK9s8F7GqZ755ufmHGoXGYapaStQmijZixEKZ3rI
 7CEQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:to:from:subject:message-id:date:user-agent
 :mime-version:content-language;
 bh=yaVcx0HOOT4wCnZ58uf6uJZ5IwsI1sTs1ZlHQXT+iHE=;
 b=UqxAo+V/VWzgsgXyh50aRho5HthuKNH57C7yb14aDxjSMJq+PQB7LPZ8FiEnBk4l7i
 wldoSYw0g0kERiBIFYwLKjzv1+GmcSMuw1UDT4apHEmYJBD4pKGsMxMmPi29RP2hBbXO
 Ipgpz0drcVfNNFoevlEVYnxYLC7OAkjgBPG97WDl7E3wmRlykVWE8427VqOQPFCyLtLT
 NbVNg9ZYGtJRa44/+QImgWMHjmOIdxPUFlI9Usat0boixytgqwclNsexZU+In8eqU7cS
 Cr0lO67mFTOz0xVkl8tHgWXyUB4CNM/W536LacLsUf30Oz/RZJ0WQP/T+W+9aUOW9tLo
 ekGQ==
X-Gm-Message-State: AOAM53051UgSMdBA1wdLkc2UWU1w4GGWdlHq8/XRF2ZpuHDVmHVY6ULN
 sFtLvFAdhed3nczS6TXDW8+EwB015BY=
X-Google-Smtp-Source: ABdhPJytxpughlI6nfRmV8xNh1+TZ4peiz2zkYEVB9XH/B81IaR1yL+9P67reyLF4cpv5c0Bxmf60g==
X-Received: by 2002:aca:fdd2:: with SMTP id b201mr288349oii.83.1595265840165; 
 Mon, 20 Jul 2020 10:24:00 -0700 (PDT)
Received: from terra.local (99-139-148-170.lightspeed.rcsntx.sbcglobal.net.
 [99.139.148.170])
 by smtp.gmail.com with ESMTPSA id o10sm44472ote.50.2020.07.20.10.23.59
 for <tuhs@minnie.tuhs.org>
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Mon, 20 Jul 2020 10:23:59 -0700 (PDT)
To: TUHS main list <tuhs@minnie.tuhs.org>
From: Will Senn <will.senn@gmail.com>
Message-ID: <78041442-c5e5-1b5c-8565-b6d31f23ec1b@gmail.com>
Date: Mon, 20 Jul 2020 12:23:59 -0500
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:68.0)
 Gecko/20100101 Thunderbird/68.10.0
MIME-Version: 1.0
Content-Type: multipart/alternative;
 boundary="------------184BECDEE99F80A33DCB86BB"
Content-Language: en-US
Subject: [TUHS] Traditional method of dealing with embedded shar files
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

This is a multi-part message in MIME format.
--------------184BECDEE99F80A33DCB86BB
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit

As y'all know, I'm a relative latecomer to the world of Unix, but I do 
try to figure out how y'all did it back when. So, sometimes, as in this 
case, I can figure out how to do something, but I'm curious how it was 
done back in the day, moreso than how I can get it done today. I'm 
looking at the patching of my shiny new 2.11 BSD pl 431 system running 
on my speedy little virtual PDP-11/70, so I grabbed patch 432 (here's a 
portion of the patch):
...
     To install the update cut where indicated below and save to a file
     (/tmp/432) and then:

         cd /tmp
         sh 432
         ./432.sh
         ./432.rm
         sh 432.shar
         patch -p0 < 432.patch

     Watch carefully for any rejected parts of the patch.   Failure of a
     patch typically means the system was not current on all preceeding
     updates _or_ that local modifications have been made.
...
====== cut here
#! /bin/sh
# This is a shell archive, meaning:
# 1. Remove everything above the #! /bin/sh line.
# 2. Save the resulting text in a file.
# 3. Execute the file with /bin/sh (not csh) to create:
#    432.rm
#    432.sh
#    432.shar
#    432.patch
...
#    End of shell archive

This seems straightforward. Just follow the directions et voila magic 
happens.

My questions for y'all are how would you go about doing this? Use vi to 
delete everything through the ==== cut here line? Use some combination 
of standard unix tools to chop it up? What was your workflow for 
patching up the system using these files?

In my world, if I screw something up, it's 15 seconds to run a restore 
script in my simh directory and I can try again, so my level of concern 
for a mistake is pretty low. If I was doing this in 1980, on real 
hardware, I would have had many concerns, as I'm sure some of y'all can 
remember, how did you prepare and protect yourselves so a patch was 
successful.

BTW, I thought .shar was an archive format, so when I saw the patch was 
a shar file, I was worried it would be in some binary form, lo and 
behold, it looks like text to me... not even b64. So much to learn, so 
little time.

Thanks,

Will

-- 
GPG Fingerprint: 68F4 B3BD 1730 555A 4462  7D45 3EAA 5B6D A982 BAAF


--------------184BECDEE99F80A33DCB86BB
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 8bit

<html>
  <head>

    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  </head>
  <body>
    <font face="Helvetica, Arial, sans-serif">As y'all know, I'm a
      relative latecomer to the world of Unix, but I do try to figure
      out how y'all did it back when. So, sometimes, as in this case, I
      can figure out how to do something, but I'm curious how it was
      done back in the day, moreso than how I can get it done today. I'm
      looking at the patching of my shiny new 2.11 BSD pl 431 system
      running on my speedy little virtual PDP-11/70, so I grabbed patch
      432 (here's a portion of the patch):<br>
      ...<br>
          To install the update cut where indicated below and save to a
      file<br>
          (/tmp/432) and then:<br>
      <br>
              cd /tmp<br>
              sh 432<br>
              ./432.sh<br>
              ./432.rm<br>
              sh 432.shar<br>
              patch -p0 &lt; 432.patch<br>
      <br>
          Watch carefully for any rejected parts of the patch.   Failure
      of a<br>
          patch typically means the system was not current on all
      preceeding <br>
          updates _or_ that local modifications have been made.<br>
      ...<br>
      ====== cut here<br>
      #! /bin/sh<br>
      # This is a shell archive, meaning:<br>
      # 1. Remove everything above the #! /bin/sh line.<br>
      # 2. Save the resulting text in a file.<br>
      # 3. Execute the file with /bin/sh (not csh) to create:<br>
      #    432.rm<br>
      #    432.sh<br>
      #    432.shar<br>
      #    432.patch<br>
      ...<br>
      #    End of shell archive<br>
      <br>
      This seems straightforward. Just follow the directions et voila
      magic happens.<br>
      <br>
      My questions for y'all are how would you go about doing this? Use
      vi to delete everything through the ==== cut here line? Use some
      combination of standard unix tools to chop it up? What was your
      workflow for patching up the system using these files?<br>
      <br>
      In my world, if I screw something up, it's 15 seconds to run a
      restore script in my simh directory and I can try again, so my
      level of concern for a mistake is pretty low. If I was doing this
      in 1980, on real hardware, I would have had many concerns, as I'm
      sure some of y'all can remember, how did you prepare and protect
      yourselves so a patch was successful.<br>
      <br>
      BTW, I thought .shar was an archive format, so when I saw the
      patch was a shar file, I was worried it would be in some binary
      form, lo and behold, it looks like text to me... not even b64. So
      much to learn, so little time.<br>
      <br>
      Thanks,<br>
      <br>
      Will<br>
    </font>
    <pre class="moz-signature" cols="72">-- 
GPG Fingerprint: 68F4 B3BD 1730 555A 4462  7D45 3EAA 5B6D A982 BAAF</pre>
  </body>
</html>

--------------184BECDEE99F80A33DCB86BB--
