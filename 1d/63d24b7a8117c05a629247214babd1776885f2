Return-Path: <tuhs-bounces@minnie.tuhs.org>
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.5 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	HEADER_FROM_DIFFERENT_DOMAINS,HTML_MESSAGE,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no version=3.4.2
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id 21210bd0
	for <ml@inbox.vuxu.org>;
	Sat, 8 Feb 2020 23:36:08 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 786249CCB4; Sun,  9 Feb 2020 09:36:07 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id D46309CCAA;
	Sun,  9 Feb 2020 09:35:33 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=bsdimp-com.20150623.gappssmtp.com header.i=@bsdimp-com.20150623.gappssmtp.com header.b="OONbWaNw";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 232489CCAA; Sun,  9 Feb 2020 09:35:32 +1000 (AEST)
Received: from mail-qt1-f178.google.com (mail-qt1-f178.google.com
 [209.85.160.178])
 by minnie.tuhs.org (Postfix) with ESMTPS id 48C6E9CCA9
 for <tuhs@tuhs.org>; Sun,  9 Feb 2020 09:35:31 +1000 (AEST)
Received: by mail-qt1-f178.google.com with SMTP id r5so1035262qtt.9
 for <tuhs@tuhs.org>; Sat, 08 Feb 2020 15:35:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=bsdimp-com.20150623.gappssmtp.com; s=20150623;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=woIuBFN8s+WGYlg6JkDzdl6Ucr0DZPxb2B3C1np9PzE=;
 b=OONbWaNwkP2cSeNz4whBbAx4NzAN0ghcQEmw4gXUMs2WSsowIZdnf/i/n4L6RhDik+
 nn1QC/UoKaPZWvhgGy7j92tWosRB0V8kOiGKz282Ssdi1DuN7Kr1TRhUPLI4x9KtozSP
 52wZJaaqRn3k8AB9zrgBWRYxIk7srzIW5pV5HCg+QY1+t+BbD84bjJ44ieMhobvsg8Ac
 E0Rb5HkkWSyBTIs8O3bl8kGRvz09AhtyYiN3csOx0EGU5IxVe/8TpC6po8V1h2q50sIu
 ZG7UT3q1i/mgRgVj012P1ZPnDMmCjzh2r81uYGrJmshvo3BSRzF1LxvmsNExQup/ieVw
 F7tA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=woIuBFN8s+WGYlg6JkDzdl6Ucr0DZPxb2B3C1np9PzE=;
 b=ByRVAq+1uHpL2h01Hq0iA3bnNersqZsxBJvbKuRPd0BYLNkUBlOk75nQflV3RDeNqY
 Zo5aY5vWttSCgtofQw8kuXNXR2ojlD+qojut0/ryWRt6ekrH4P/CQ47OYifVKfSMsbvJ
 nnN1mREzZTtWinIhdOUCiUhGtPsyhBFeiEh/goEjRvsHJWyErAVYiTBMWTPV/YLF++T5
 LBGX6O8xSn9jJNBfWynyufnh6QF5LK1fZH4V+/pWgcX7vScYlw2q0b/kMQEIy3fgIYCP
 q3Nw0mkOtIKfZ3KwWuiLrssdJGF15uMN1gwwn7pp7+2a+w+H78CiXHdvy2p6xApnJL1o
 xgeg==
X-Gm-Message-State: APjAAAW8/WLbWyfTjfBAWRTtZAFsRl/gEIzbXzExhev5iwxXEowHF1X4
 CCNSVR3dRQg4vL/MmxKFd4Mpald2h9lqIQn+ZO30dw==
X-Google-Smtp-Source: APXvYqwXXL3NP7cXspsLI0xJz7S2T7Vgf2YHkssHfJmFIMR6XnmFpeeyP0Dr3ZERLsRIijPFH9DVHynfPYSBIIFmffo=
X-Received: by 2002:ac8:78c:: with SMTP id l12mr4426856qth.187.1581204930387; 
 Sat, 08 Feb 2020 15:35:30 -0800 (PST)
MIME-Version: 1.0
References: <C63994DC-C33E-48E6-BB5B-79A36E15132C@tuhs.org>
 <CAKzdPgy6WJ_bUSY4hUoqtq41F1dYH_9SGLK_istBAb5Hv346EA@mail.gmail.com>
 <CANCZdfqkAmo+4LcM9MJps9knoJa6sbd5WX94QN0MDcGZLBKeAQ@mail.gmail.com>
 <CAKzdPgxeqBaXgFEHE7tvxXa6ZywTYY-eCtcZUGRBzGQUsU6BHg@mail.gmail.com>
 <46c41c18-5b44-14e5-1f0a-9272866993da@case.edu>
 <CAKzdPgw-YK0SAPUnwsjbQ_RGLsMUt2_A7+OYJ-9sxq98hmmOdw@mail.gmail.com>
 <b18775ce-a2e5-7238-c36d-70014c25ff22@case.edu>
 <CAKzdPgwRr_U9MeoM8AHziY=EAEj48W+m+SRASda_hGwauKqysw@mail.gmail.com>
 <62548c3e-4692-c2d3-f06f-745353490b95@case.edu>
 <CAKzdPgxZXp24KK5D06x1sgh3HS5xZqxbDwY5N7SipDaoBvX0LQ@mail.gmail.com>
In-Reply-To: <CAKzdPgxZXp24KK5D06x1sgh3HS5xZqxbDwY5N7SipDaoBvX0LQ@mail.gmail.com>
From: Warner Losh <imp@bsdimp.com>
Date: Sat, 8 Feb 2020 16:35:18 -0700
Message-ID: <CANCZdfppr+ywYUsadw67bni1oEBEM7FJivPPxKWYDx5tez9pjQ@mail.gmail.com>
To: Rob Pike <robpike@gmail.com>
Content-Type: multipart/alternative; boundary="00000000000031783e059e18f655"
Subject: Re: [TUHS] Warner's Early Unix Presentation
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--00000000000031783e059e18f655
Content-Type: text/plain; charset="UTF-8"

On Sat, Feb 8, 2020, 4:29 PM Rob Pike <robpike@gmail.com> wrote:

> % rc
>
> % whatis cd
>
> builtin cd
>
> %
>
>
> It's much simpler this way. The output is the executable input, free of
> decoration and ready to use.
>
>
> In today's Unix (I use the term loosely) world, the phrase "free of
> decoration" is apostasy.
>

A number of utilities have a special flag to use in shell scripts to remove
the decorations. I both like and loath this design pattern.

Warner

-rob
>
>
>
> On Sun, Feb 9, 2020 at 10:26 AM Chet Ramey <chet.ramey@case.edu> wrote:
>
>> On 2/8/20 6:11 PM, Rob Pike wrote:
>> > Not for me it doesn't.
>> >
>> > % bash
>> >
>> > bash-3.2$ function f() {
>> >
>> >     echo hi
>> >
>> >     }
>> >
>> > bash-3.2$ export f
>> > bash-3.2$ bash
>> > bash-3.2$ f
>> > bash-3.2$
>>
>> jenna(1)$ echo $BASH_VERSION
>> 5.0.11(6)-release
>> jenna(1)$ f() { echo f; }
>> jenna(1)$ export -f f
>> jenna(1)$ bash
>> jenna(2)$ f
>> f
>> jenna(2)$
>>
>> It works the same in Mac OS X's bash-3.2.
>>
>> > I added the 'builtin' command, which did leave the labs. But I added it
>> as
>> > a way for the "whatis" command to show a builtin, as well as allowing a
>> way
>> > to guarantee you get the builtin on execution.
>>
>> Bash uses `type' to tell whether something is a builtin. How does
>> `builtin'
>> say whether or not a command is builtin? The output with no arguments?
>>
>> > How do I get bash to print the function as (shell) source code, so I
>> could
>> > edit it and play with it again? It was the synergy of all this stuff
>> > connected seamlessly that made it so compelling.
>> >
>>
>> jenna(2)$ declare -pf f
>> f ()
>> {
>>     echo f
>> }
>> declare -fx f
>>
>> If it weren't exported, you wouldn't get the `declare' command appended
>> there.
>>
>> --
>> ``The lyf so short, the craft so long to lerne.'' - Chaucer
>>                  ``Ars longa, vita brevis'' - Hippocrates
>> Chet Ramey, UTech, CWRU    chet@case.edu    http://tiswww.cwru.edu/~chet/
>>
>

--00000000000031783e059e18f655
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"auto"><div><br><br><div class=3D"gmail_quote"><div dir=3D"ltr" =
class=3D"gmail_attr">On Sat, Feb 8, 2020, 4:29 PM Rob Pike &lt;<a href=3D"m=
ailto:robpike@gmail.com">robpike@gmail.com</a>&gt; wrote:<br></div><blockqu=
ote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc s=
olid;padding-left:1ex"><div dir=3D"ltr">





<p style=3D"margin:0px;font-variant-numeric:normal;font-variant-east-asian:=
normal;font-stretch:normal;font-size:14px;line-height:normal;font-family:&q=
uot;Lucida Grande Mono550&quot;;color:rgb(0,0,0)"><span style=3D"font-varia=
nt-ligatures:no-common-ligatures">% rc</span></p>
<p style=3D"margin:0px;font-variant-numeric:normal;font-variant-east-asian:=
normal;font-stretch:normal;font-size:14px;line-height:normal;font-family:&q=
uot;Lucida Grande Mono550&quot;;color:rgb(0,0,0)"><span style=3D"font-varia=
nt-ligatures:no-common-ligatures">% whatis cd</span></p>
<p style=3D"margin:0px;font-variant-numeric:normal;font-variant-east-asian:=
normal;font-stretch:normal;font-size:14px;line-height:normal;font-family:&q=
uot;Lucida Grande Mono550&quot;;color:rgb(0,0,0)"><span style=3D"font-varia=
nt-ligatures:no-common-ligatures">builtin cd</span></p>
<p style=3D"margin:0px;font-variant-numeric:normal;font-variant-east-asian:=
normal;font-stretch:normal;font-size:14px;line-height:normal;font-family:&q=
uot;Lucida Grande Mono550&quot;;color:rgb(0,0,0)"><span style=3D"font-varia=
nt-ligatures:no-common-ligatures">%<span>=C2=A0</span></span></p><p style=
=3D"margin:0px;font-variant-numeric:normal;font-variant-east-asian:normal;f=
ont-stretch:normal;font-size:14px;line-height:normal;font-family:&quot;Luci=
da Grande Mono550&quot;;color:rgb(0,0,0)"><span style=3D"font-variant-ligat=
ures:no-common-ligatures"><span><br></span></span></p><p style=3D"margin:0p=
x;font-variant-numeric:normal;font-variant-east-asian:normal;font-stretch:n=
ormal;font-size:14px;line-height:normal;color:rgb(0,0,0)"><font face=3D"ari=
al, sans-serif"><span style=3D"font-variant-ligatures:no-common-ligatures">=
It&#39;s much simpler this way. The output is the executable input, free of=
 decoration and ready to use.</span></font></p><p style=3D"margin:0px;font-=
variant-numeric:normal;font-variant-east-asian:normal;font-stretch:normal;f=
ont-size:14px;line-height:normal;color:rgb(0,0,0)"><font face=3D"arial, san=
s-serif"><span style=3D"font-variant-ligatures:no-common-ligatures"><br></s=
pan></font></p><p style=3D"margin:0px;font-variant-numeric:normal;font-vari=
ant-east-asian:normal;font-stretch:normal;font-size:14px;line-height:normal=
;color:rgb(0,0,0)"><font face=3D"arial, sans-serif"><span style=3D"font-var=
iant-ligatures:no-common-ligatures">In today&#39;s Unix (I use the term loo=
sely) world, the phrase &quot;free of decoration&quot; is apostasy.=C2=A0</=
span></font></p></div></blockquote></div></div><div dir=3D"auto"><br></div>=
<div dir=3D"auto">A number of utilities have a special flag to use in shell=
 scripts to remove the decorations. I both like and loath this design patte=
rn.=C2=A0</div><div dir=3D"auto"><br></div><div dir=3D"auto">Warner=C2=A0</=
div><div dir=3D"auto"><br></div><div dir=3D"auto"><div class=3D"gmail_quote=
"><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:=
1px #ccc solid;padding-left:1ex"><div dir=3D"ltr"><p style=3D"margin:0px;fo=
nt-variant-numeric:normal;font-variant-east-asian:normal;font-stretch:norma=
l;font-size:14px;line-height:normal;color:rgb(0,0,0)"><font face=3D"arial, =
sans-serif"><span style=3D"font-variant-ligatures:no-common-ligatures">-rob=
</span></font></p><p style=3D"margin:0px;font-variant-numeric:normal;font-v=
ariant-east-asian:normal;font-stretch:normal;font-size:14px;line-height:nor=
mal;color:rgb(0,0,0)"><font face=3D"arial, sans-serif"><span style=3D"font-=
variant-ligatures:no-common-ligatures"><br></span></font></p></div><br><div=
 class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Sun, Feb 9,=
 2020 at 10:26 AM Chet Ramey &lt;<a href=3D"mailto:chet.ramey@case.edu" tar=
get=3D"_blank" rel=3D"noreferrer">chet.ramey@case.edu</a>&gt; wrote:<br></d=
iv><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;bord=
er-left:1px solid rgb(204,204,204);padding-left:1ex">On 2/8/20 6:11 PM, Rob=
 Pike wrote:<br>
&gt; Not for me it doesn&#39;t.<br>
&gt; <br>
&gt; % bash<br>
&gt; <br>
&gt; bash-3.2$ function f() {<br>
&gt; <br>
&gt; =C2=A0 =C2=A0 echo hi<br>
&gt; <br>
&gt; =C2=A0 =C2=A0 }<br>
&gt; <br>
&gt; bash-3.2$ export f <br>
&gt; bash-3.2$ bash <br>
&gt; bash-3.2$ f <br>
&gt; bash-3.2$ <br>
<br>
jenna(1)$ echo $BASH_VERSION<br>
5.0.11(6)-release<br>
jenna(1)$ f() { echo f; }<br>
jenna(1)$ export -f f<br>
jenna(1)$ bash<br>
jenna(2)$ f<br>
f<br>
jenna(2)$<br>
<br>
It works the same in Mac OS X&#39;s bash-3.2.<br>
<br>
&gt; I added the &#39;builtin&#39; command, which did leave the labs. But I=
 added it as<br>
&gt; a way for the &quot;whatis&quot; command to show a builtin, as well as=
 allowing a way<br>
&gt; to guarantee you get the builtin on execution.<br>
<br>
Bash uses `type&#39; to tell whether something is a builtin. How does `buil=
tin&#39;<br>
say whether or not a command is builtin? The output with no arguments?<br>
<br>
&gt; How do I get bash to print the function as (shell) source code, so I c=
ould<br>
&gt; edit it and play with it again? It was the synergy of all this stuff<b=
r>
&gt; connected seamlessly that made it so compelling.<br>
&gt; <br>
<br>
jenna(2)$ declare -pf f<br>
f ()<br>
{<br>
=C2=A0 =C2=A0 echo f<br>
}<br>
declare -fx f<br>
<br>
If it weren&#39;t exported, you wouldn&#39;t get the `declare&#39; command =
appended<br>
there.<br>
<br>
-- <br>
``The lyf so short, the craft so long to lerne.&#39;&#39; - Chaucer<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0``Ars longa, =
vita brevis&#39;&#39; - Hippocrates<br>
Chet Ramey, UTech, CWRU=C2=A0 =C2=A0 <a href=3D"mailto:chet@case.edu" targe=
t=3D"_blank" rel=3D"noreferrer">chet@case.edu</a>=C2=A0 =C2=A0 <a href=3D"h=
ttp://tiswww.cwru.edu/~chet/" rel=3D"noreferrer noreferrer" target=3D"_blan=
k">http://tiswww.cwru.edu/~chet/</a><br>
</blockquote></div>
</blockquote></div></div></div>

--00000000000031783e059e18f655--
