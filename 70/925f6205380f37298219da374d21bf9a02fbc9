From: charles.unix.pro@gmail.com (Charles Anthony)
Date: Sat, 12 Sep 2015 19:29:34 -0700
Subject: [TUHS] Did realloc ever zero the new memory?
In-Reply-To: <m2twqzp0lf.fsf@fastmail.com>
References: <201509130032.t8D0WvPl024634@tahoe.cs.Dartmouth.EDU>
 <m2twqzp0lf.fsf@fastmail.com>
Message-ID: <CANV78LQe0JLt_DeWx-dQGoeLekP1yX1qkQ1bOS6kzoC8e7zwoA@mail.gmail.com>

On Sat, Sep 12, 2015 at 6:30 PM, Random832 <random832 at fastmail.com> wrote:

> Doug McIlroy <doug at cs.dartmouth.edu> writes:
> > It's odd that the later introduction of calloc() as a zeroing malloc()
> > has never been complemented by a similar variant of realloc().
>
> Speaking of calloc, was it ever envisioned that any implementation would
> do anything more sophisticated with the two arguments than multiply them
> together (and detect overflow)? Has any such implementation ever
> existed? It seems like one of the great mysteries of the C library
> design, especially since early implementations didn't do overflow
> checking.
>
>
Alignment perhaps?

-- Charles
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20150912/3942e5af/attachment.html>

