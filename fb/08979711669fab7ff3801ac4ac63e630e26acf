X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 29695 invoked from network); 28 Jun 2022 10:39:50 -0000
Received: from minnie.tuhs.org (50.116.15.146)
  by inbox.vuxu.org with ESMTPUTF8; 28 Jun 2022 10:39:50 -0000
Received: from minnie.tuhs.org (localhost [IPv6:::1])
	by minnie.tuhs.org (Postfix) with ESMTP id 9FD1D40C85;
	Tue, 28 Jun 2022 20:39:28 +1000 (AEST)
Received: from clarinet.employees.org (clarinet.employees.org [198.137.202.74])
	by minnie.tuhs.org (Postfix) with ESMTPS id E304E40C84
	for <tuhs@tuhs.org>; Tue, 28 Jun 2022 20:39:14 +1000 (AEST)
Received: by clarinet.employees.org (Postfix, from userid 1736)
	id A1C914E11B15; Tue, 28 Jun 2022 10:38:43 +0000 (UTC)
Date: Tue, 28 Jun 2022 11:38:43 +0100
From: Derek Fawcus <dfawcus+lists-tuhs@employees.org>
To: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Message-ID: <YrraM0wD+qeaAX0V@clarinet.employees.org>
References: <2803DC51-6CBC-4257-B40C-8A559C27CAE3@planet.nl>
 <20220625230939.GG19404@mcvoy.com>
 <CAKzdPgxoT5zJ-rHEe=Wqhnd4zXcUZB+Qs+0Za5bWnRuEFc7WuQ@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAKzdPgxoT5zJ-rHEe=Wqhnd4zXcUZB+Qs+0Za5bWnRuEFc7WuQ@mail.gmail.com>
Message-ID-Hash: 7MEJPFYRM2P2W77TQANMJLDD4YYOE2WP
X-Message-ID-Hash: 7MEJPFYRM2P2W77TQANMJLDD4YYOE2WP
X-MailFrom: dfawcus@employees.org
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; header-match-tuhs.tuhs.org-0; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
X-Mailman-Version: 3.3.6b1
Precedence: list
Subject: [TUHS] Re: Research Datakit notes
List-Id: The Unix Heritage Society mailing list <tuhs.tuhs.org>
Archived-At: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/message/7MEJPFYRM2P2W77TQANMJLDD4YYOE2WP/>
List-Archive: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/>
List-Help: <mailto:tuhs-request@tuhs.org?subject=help>
List-Owner: <mailto:tuhs-owner@tuhs.org>
List-Post: <mailto:tuhs@tuhs.org>
List-Subscribe: <mailto:tuhs-join@tuhs.org>
List-Unsubscribe: <mailto:tuhs-leave@tuhs.org>

On Sun, Jun 26, 2022 at 09:57:17AM +1000, Rob Pike wrote:
> One of the things we liked about Datakit was that the computer didn't have
> to establish the connection before it could reject the call, unlike TCP/IP
> where all validation happens after the connection is made.

Nor does TCP, one can send a RST to a SYN, and reject the call before it is
established.  That would then look to the caller just like a non listening
endpoint, unless one added data with the RST.

So this is really just a consequence of the sockets API, and the current implementations.
I've a vague recall of folks suggesting ways to expose that facility via the sockets
layer, possibly using setsockopt(), but don't know if anyone ever did it.

As I recall that TCP capability was actually exposed via the TLI/XTI API,
and (for some STREAMS based TCP stacks) it did function. Although I may be
thinking of embedded STREAMS TCP stacks, not unix based stacks.

Or by 'connection' are you referring to an end-to-end packet delivery,
and that Datakit allowed a closer switch to reject a call before the packet
got to the far end?

DF
