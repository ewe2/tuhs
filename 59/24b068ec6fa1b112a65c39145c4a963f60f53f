From: bakul@bitblocks.com (Bakul Shah)
Date: Wed, 3 Jan 2018 10:28:25 -0800
Subject: [TUHS] OT: critical Intel design flaw
In-Reply-To: <CAP6exYJUvNuXi1o=wOX+cdkgLx-oDmttJTunzy5zsaMhLxd42g@mail.gmail.com>
References: <20180103134358.3F16818C098@mercury.lcs.mit.edu>
 <CAC20D2NEvx_3R_HjzO6r3h6OaAcrpkmWuTRNX7-ApoEz8+KxTg@mail.gmail.com>
 <C30F8795-EBB0-4734-8550-0BE2B77F07F0@bitblocks.com>
 <CAP6exYJUvNuXi1o=wOX+cdkgLx-oDmttJTunzy5zsaMhLxd42g@mail.gmail.com>
Message-ID: <483D45E8-9F95-4A8E-8F19-05D1CF1F7FEF@bitblocks.com>

On Jan 3, 2018, at 9:46 AM, ron minnich <rminnich at gmail.com> wrote:
> 
> The type of kernel is orthogonal to this particular design flaw from what I know. It's about how page tables are set up for user mode processes. I may be wrong but pretty much every Unix or Unix-like kernel (including Plan 9) follows the page table model Windows and Linux use: the ring 0 PTEs are present in the page table, even in user mode, and we count on the architecture to prevent ring 3 access to ring 0 memory. This is certainly the case on all the ones I've worked on. 
> 
> I don't think a microkernel would save you.

My point was simply that in a ukernel this arrangement doesn't buy
you much as the real "OS" is just another user level process. The
ukernel is basically just a message router. In Mill the message
routing itself is done in h/w (well, a portal call is more like
a call to a different protection domain in the same thread so no
need for marshalling/unmarshalling arguments).


