Return-Path: <tuhs-bounces@minnie.tuhs.org>
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.2
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id f2d7c006
	for <ml@inbox.vuxu.org>;
	Wed, 26 Jun 2019 23:20:15 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 6426D9BFC5; Thu, 27 Jun 2019 09:20:14 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id E13539BD9B;
	Thu, 27 Jun 2019 09:19:44 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id CBC689BD9B; Thu, 27 Jun 2019 09:19:41 +1000 (AEST)
Received: from mail.bitblocks.com (ns1.bitblocks.com [173.228.5.8])
 by minnie.tuhs.org (Postfix) with ESMTP id 432169BD84
 for <tuhs@minnie.tuhs.org>; Thu, 27 Jun 2019 09:19:41 +1000 (AEST)
Received: from bitblocks.com (localhost [127.0.0.1])
 by mail.bitblocks.com (Postfix) with ESMTP id EF38A156E40C;
 Wed, 26 Jun 2019 16:19:19 -0700 (PDT)
To: Larry McVoy <lm@mcvoy.com>
In-reply-to: Your message of "Mon, 24 Jun 2019 21:18:06 -0700."
 <20190625041806.GL7655@mcvoy.com>
References: <8D0B5B0D-9956-47D7-8D36-1729BB1E1DA9@eschatologist.net>
 <5df8c6f6-2768-4bfb-9c47-3345098078a7@PU1APC01FT048.eop-APC01.prod.protection.outlook.com>
 <CAEdTPBeaDesz42GAfbQ-0B12O1VQW44ySgr6ezJpxRZv90BOCA@mail.gmail.com>
 <CAC20D2Nfz9KomdGG_o5sp-iam8bpbzWQLF2uB2apWJ0W6i4ckw@mail.gmail.com>
 <20190625000630.GA7655@mcvoy.com> <20190625003120.GA28608@mit.edu>
 <20190625004523.GB7655@mcvoy.com> <20190625005528.GA11929@wopr>
 <20190625041806.GL7655@mcvoy.com>
Comments: In-reply-to Larry McVoy <lm@mcvoy.com>
 message dated "Mon, 24 Jun 2019 21:18:06 -0700."
From: Bakul Shah <bakul@bitblocks.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-ID: <51493.1561591159.1@bitblocks.com>
Date: Wed, 26 Jun 2019 16:19:19 -0700
Message-Id: <20190626231926.EF38A156E40C@mail.bitblocks.com>
Subject: [TUHS] Craft vs Research (Re:  CMU Mach sources?
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: "tuhs@minnie.tuhs.org" <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

On Mon, 24 Jun 2019 21:18:06 -0700 Larry McVoy <lm@mcvoy.com> wrote:
>
> It's not about money.  It's about caring about your craft.  I cared,
> the people I have worked with in industry cared, if they didn't I
> left.
>
> The point I was trying to make was that you can be a student and still
> be a pro.  Or not.  The pros care about their craft.  The Mach people,
> in my you-get-what-you-paid-for opinion, were not pros.  They got a
> lot done in a sloppy way and they left a mess.
>
> I don't know how to say it more clearly, there are plenty examples of
> students that wrote clean code.  Mach was cool, clean code it was not.

I beg to differ with Larry. Research is basically directed
exploration.  You may have a vague idea about what you're
seeking or you may decide to pursue something you stumbled
upon.  But you are mainly hacking a path through the jungle as
it were.  In my view it is much too early to build permanent
roads (i.e.  write "production quality code") during
exploration.  And if you spend time building roads, you are
likely going to slow down or are already stuck and simply
using road building to procrastinate! Craft certainly counts
but it is not all important.

You should just build *what you absolutely need* and do so as
simply as possible and keep moving.  In fact, the more
permanent structures you build, the more afraid you will be to
throw away bad bits and pieces if you have to change
direction!

It doesn't make sense to expect such exploratory code to work
well in production. It is not going to be rock solid, it won't
take care of corner cases, it will have lousy error recovery,
if any, it may not have some necessary features and it may not
scale well.
