X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	DKIM_VALID_AU,FREEMAIL_FROM,HTML_MESSAGE,MAILING_LIST_MULTI
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 22323 invoked from network); 28 Nov 2021 23:37:45 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 28 Nov 2021 23:37:45 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 32CE79CF2D; Mon, 29 Nov 2021 09:37:44 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id ABD8B94613;
	Mon, 29 Nov 2021 09:35:18 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (2048-bit key; unprotected) header.d=gmail.com header.i=@gmail.com header.b="Y0mDMCos";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id EDC6394613; Mon, 29 Nov 2021 09:35:13 +1000 (AEST)
Received: from mail-pg1-f181.google.com (mail-pg1-f181.google.com
 [209.85.215.181])
 by minnie.tuhs.org (Postfix) with ESMTPS id 7F3C794586
 for <tuhs@tuhs.org>; Mon, 29 Nov 2021 09:35:13 +1000 (AEST)
Received: by mail-pg1-f181.google.com with SMTP id 200so14067820pga.1
 for <tuhs@tuhs.org>; Sun, 28 Nov 2021 15:35:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
 bh=4lcYTyLqQ+9iYtkxV/6UOcx0mB6IcWAevIYiUQZdbV4=;
 b=Y0mDMCoszXGu91M7QskA+JeeqB5xIcZaXVqY9d2yZwNSDwGSATVcaw199odsO+FMng
 nQEAs3rGvcvMXHwfjlWcFdW6kV0Mz6fPbG2mqpyZkzYGvQ2bu/0ziZxBUN3k88k82IHz
 0j80PSdbIMFz/t3nWdv+dE4yxAZlgt/brLUHRoxFNftpX6F4+bTB2Cygt6wSLg2Uqv50
 SdtlOdPDWJ0kqKG9BZNuoSr5QR4AEUnhppcZpJcEQwJn63vdOhUQzekk0iBCjWmKN0FH
 wvWtm/9PHWon/MxzISdYOIreXlb912zqY2L61lUm1BcGGejZbiPLFEP3VStV3BBspSnR
 VwlQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to;
 bh=4lcYTyLqQ+9iYtkxV/6UOcx0mB6IcWAevIYiUQZdbV4=;
 b=0sLZC8Y6xXuqn0pGl5sQvreYyXR2Pau31GnoTvhCtEEfmAOmiMPbd90ThuepNgCZcH
 6XsZKl/t50eFw2cS1JYDtHiWQs6QP32Q6vfGCYOL6ZQZEy0zcegyOKpdox07DZWuyGhb
 0vcqjF7ZnHL774WEhR8PlSEITiUGaoY3vz89Xh+T71gXq040xWIYQnR89TKi50FRLQvM
 fnQEBX6Xhs5YbH/9mwNH14BF8SIsZSgzjibw80lYV8PYQjl8yuEB8UOk9lGqNVNNs8FZ
 PbEBvSjqG9K5NQ92pcVPEpY2m5nVG5w9dg1PDLMvVK4bf+QIadpCsANdmEXagjvxUgGL
 x5sQ==
X-Gm-Message-State: AOAM530meCiHLONtyHLg4XBej6MbWrAKSey3iL+/VpIQpsMo7HcwpxWS
 ct69tXha5KAZwI5aojT5mjVSV9u/Fbphg7sctcoekdTA5jU=
X-Google-Smtp-Source: ABdhPJwgqqaAa2egO4Fnm6Ulb0s93TtKzvd+UVbuwzSWHAfLpyLERsSAClWbX4IOrFxX4TwGylDBQZYWkEXqp9OynGk=
X-Received: by 2002:a63:82c7:: with SMTP id
 w190mr32622014pgd.117.1638142512230; 
 Sun, 28 Nov 2021 15:35:12 -0800 (PST)
MIME-Version: 1.0
References: <20211128231203.3BCB818C075@mercury.lcs.mit.edu>
In-Reply-To: <20211128231203.3BCB818C075@mercury.lcs.mit.edu>
From: Adam Thornton <athornton@gmail.com>
Date: Sun, 28 Nov 2021 16:35:01 -0700
Message-ID: <CAP2nic2LEg=CQG8JEvtcA1zvgJxbRPak999G4e6QWk-Aao-ksw@mail.gmail.com>
To: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Content-Type: multipart/alternative; boundary="00000000000088752405d1e1c679"
Subject: Re: [TUHS] A New History of Modern Computing - my thoughts
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--00000000000088752405d1e1c679
Content-Type: text/plain; charset="UTF-8"

Getting a bit far afield from Unixes, but A Quick Rundown Of Instruction
Sets I Have Known, more or less in the order I learned them:

6502: you never forget your first love, and, sure, it's constrained, but
it's elegant and concise and I still adore it.
68k: Lovely.  I used it before I ever used the PDP-11, but in retrospect
it's like the PDP-11 but more so.  Roomy, comfortable, regular.  Too bad it
lost to x86 in the marketplace.
8051: I mean, OK, I get it, you need a low-cost embedded architecture and
it's the 1980s, but...yuck.
x86-and-descendents: the less said the better.  Maybe I just don't like
Intel's designs?
SPARC: It's not bad.  Having lots of registers is nice.  But by the time it
came along compilers were good enough that I never actually needed to use
it in anger.
S/360-and-descendents: The S/360 is OK, even nice, in a very 1960s IBM
way.  And then its evolution just KEPT adding ever more baroque filigrees
onto it.  Don't get me wrong, I love SIE, because I love VM, but even that
is kind of a bag on the side, and by the time you get to System z...this is
what happens when you don't start over from a clean sheet every so often.
PDP-11: There's a very good reason it was used as a model architecture in
coursework for decades.  Also regular and comfortable.
TI-99/4A (more or less TI 9900): I like microcode as much as anyone but
honestly this is pretty silly here, folks.

These days I'm kinda sorta poking at RISC-V and ARM.  Not that I need to,
but they seem nifty.

Adam

On Sun, Nov 28, 2021 at 4:15 PM Noel Chiappa <jnc@mercury.lcs.mit.edu>
wrote:

>     > The ++ operator appears to have been.
>
> One would expect that most people on this list would have read "The
> Development of the C Language", by Dennis Ritchie, which makes perfectly
> clear
> (at 'More History') that the PDP-11 had nothing to do with it:
>
>   Thompson went a step further by inventing the ++ and -- operators, which
>   increment or decrement; their prefix or postfix position determines
> whether
>   the alteration occurs before or after noting the value of the operand.
> They
>   were not in the earliest versions of B, but appeared along the way.
> People
>   often guess that they were created to use the auto-increment and
>   auto-decrement address modes provided by the DEC PDP-11 on which C and
> Unix
>   first became popular. This is historically impossible, since there was no
>   PDP-11 when B was developed.
>
>     https://www.bell-labs.com/usr/dmr/www/chist.html
>
> thereby alleviating the need for Ken to chime in (although they do allow a
> very efficient implementation of it).
>
> Too much to hope for, I guess.
>
>      Noel
>
>

--00000000000088752405d1e1c679
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Getting a bit far afield from Unixes, but A Quick Run=
down Of Instruction Sets I Have Known, more or less in the order I learned =
them:</div><div><br></div><div>6502: you never forget your first love, and,=
 sure, it&#39;s constrained, but it&#39;s elegant and concise and I still a=
dore it.</div><div>68k: Lovely.=C2=A0 I used it before I ever used the PDP-=
11, but in retrospect it&#39;s like the PDP-11 but more so.=C2=A0 Roomy, co=
mfortable, regular.=C2=A0 Too bad it lost to x86 in the marketplace.<br></d=
iv><div>8051: I mean, OK, I get it, you need a low-cost embedded architectu=
re and it&#39;s the 1980s, but...yuck.<br></div><div>x86-and-descendents: t=
he less said the better.=C2=A0 Maybe I just don&#39;t like Intel&#39;s desi=
gns?<br></div><div>SPARC: It&#39;s not bad.=C2=A0 Having lots of registers =
is nice.=C2=A0 But by the time it came along compilers were good enough tha=
t I never actually needed to use it in anger.</div><div>S/360-and-descenden=
ts: The S/360 is OK, even nice, in a very 1960s IBM way.=C2=A0 And then its=
 evolution just KEPT adding ever more baroque filigrees onto it.=C2=A0 Don&=
#39;t get me wrong, I love SIE, because I love VM, but even that is kind of=
 a bag on the side, and by the time you get to System z...this is what happ=
ens when you don&#39;t start over from a clean sheet every so often.</div><=
div><div>PDP-11: There&#39;s a very good reason it was used as a model arch=
itecture in coursework for decades.=C2=A0 Also regular and comfortable.</di=
v><div>TI-99/4A (more or less TI 9900): I like microcode as much as anyone =
but honestly this is pretty silly here, folks.<br></div><div><br></div><div=
>These days I&#39;m kinda sorta poking at RISC-V and ARM.=C2=A0 Not that I =
need to, but they seem nifty.<br></div></div><div><br></div><div>Adam<br></=
div></div><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_at=
tr">On Sun, Nov 28, 2021 at 4:15 PM Noel Chiappa &lt;<a href=3D"mailto:jnc@=
mercury.lcs.mit.edu">jnc@mercury.lcs.mit.edu</a>&gt; wrote:<br></div><block=
quote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1=
px solid rgb(204,204,204);padding-left:1ex">=C2=A0 =C2=A0 &gt; The ++ opera=
tor appears to have been.<br>
<br>
One would expect that most people on this list would have read &quot;The<br=
>
Development of the C Language&quot;, by Dennis Ritchie, which makes perfect=
ly clear<br>
(at &#39;More History&#39;) that the PDP-11 had nothing to do with it:<br>
<br>
=C2=A0 Thompson went a step further by inventing the ++ and -- operators, w=
hich<br>
=C2=A0 increment or decrement; their prefix or postfix position determines =
whether<br>
=C2=A0 the alteration occurs before or after noting the value of the operan=
d. They<br>
=C2=A0 were not in the earliest versions of B, but appeared along the way. =
People<br>
=C2=A0 often guess that they were created to use the auto-increment and<br>
=C2=A0 auto-decrement address modes provided by the DEC PDP-11 on which C a=
nd Unix<br>
=C2=A0 first became popular. This is historically impossible, since there w=
as no<br>
=C2=A0 PDP-11 when B was developed.<br>
<br>
=C2=A0 =C2=A0 <a href=3D"https://www.bell-labs.com/usr/dmr/www/chist.html" =
rel=3D"noreferrer" target=3D"_blank">https://www.bell-labs.com/usr/dmr/www/=
chist.html</a><br>
<br>
thereby alleviating the need for Ken to chime in (although they do allow a<=
br>
very efficient implementation of it).<br>
<br>
Too much to hope for, I guess.<br>
<br>
=C2=A0 =C2=A0 =C2=A0Noel<br>
<br>
</blockquote></div>

--00000000000088752405d1e1c679--
