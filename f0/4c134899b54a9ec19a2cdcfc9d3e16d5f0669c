From: bill@cs.scranton.edu (Bill Gunshannon)
Date: Fri, 2 Nov 2001 11:51:35 -0500 (EST)
Subject: [pups] The Software Tools Virtual Operating System
In-Reply-To: <3BE2C9AD.B4414B4C@oracle.com>
Message-ID: <20011102113550.E48859-100000@server2.cs.scranton.edu>

On Fri, 2 Nov 2001, Bill Mayhew wrote:

> > (don't ask me why, but the VOS was ported to Unix!!).
>
> That's easy to answer, recalling some of the burnt and frayed edges of the Good
> Old Days ;-)
>
> The question "what *is* UNIX?" was a popular *philosophical* question at the
> time, even among people who used UNIX and knew it well, because there were so
> many incompatible variants, even on the same hardware, that called themselves
> UNIX.

I would imagine the differences then were minor compared to today.  There
really were only two major variants.  And, because the underlying model of
Unix was also The Software Tools approach, the APIof the VOS, as far as it
went, was of a decidely Unix flavor.

>
> That problem was one of the drivers of the whole Software Tools movement, as I
> recall.  ST, including VOS, was viewed as a way of addressing the compatibility
> problem, regardless of whether the underlying "real" OS claimed to be UNIX,
> UNIX-compatible, UNIX-like, or none-of-the-above.

And this is one of the reasons why I am so interested in reviving the effort.
This need still exists, even among Unix systems, but when you bring none
Unix systems into the picture (yes, they still exist!!) the problem grows
exponentially.

So, let's look backwards a little.  Anybody here remember Eunice on VMS??
How about Primix on Primos??  These were obvious commercial attempts at
the STVOS.  Why did they fail??  Performance.  And a user community unwilling
to accept anything less than the best performance the hardware of the day
could deliver.  The same was true of the P-Machine approach.  While it
offered true binary compatability and portability of applications (anybody
here remember PCD Systems of Penn Yan, NY??) even the minor loss of machine
efficiency made people look at (frequently more expensive) alternatives.

But today, the average user has power to burn.  The Java VM is stting on
top of the world.  And efficiency doesn't even get mentioned in most CS
classrooms.  And there are other examples.  "The POSIX Shell".  CYGWin.
Even DII-COE smacks of it.

And anyway, some of the old ideas are just plain fun.  Why else do we all
spend our free time working with our PDP-11's??  :-)

All the best.

bill

-- 
Bill Gunshannon          |  de-moc-ra-cy (di mok' ra see) n.  Three wolves
bill at cs.scranton.edu     |  and a sheep voting on what's for dinner.
University of Scranton   |
Scranton, Pennsylvania   |         #include <std.disclaimer.h>



