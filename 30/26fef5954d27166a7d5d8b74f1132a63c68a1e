From: clemc@ccc.com (Clem cole)
Date: Thu, 15 Feb 2018 20:06:59 -0500
Subject: [TUHS] Happy birthday, Niklaus Wirth!
In-Reply-To: <CAEoi9W51rVASfMjMrK8RhPorWuPNmUa7YYg0Oy56pF6hVaV4Cg@mail.gmail.com>
References: <alpine.BSF.2.21.1802150801090.5573@aneurin.horsfall.org>
 <d718364c-87f4-280e-9bcc-9753493a75a5@telegraphics.com.au>
 <alpine.BSF.2.21.1802161058010.798@aneurin.horsfall.org>
 <CAEoi9W51rVASfMjMrK8RhPorWuPNmUa7YYg0Oy56pF6hVaV4Cg@mail.gmail.com>
Message-ID: <FF2CBAAF-5B09-457C-B55A-511041CEB3C1@ccc.com>

The whole reason VM was developed at UCB was because Ernie (the original) Vax was funded to develop the ability to port MacLisp and more importantly Macsyma from ITS.  
V32’s static address space was not going to work. 


Btw the program we used to debug the VM system on the original mc500 was macsyma’s competition, sms (which would later become wolfram).

In both cases the idea was to ensure the memory system was being exercised. 

Clem


Sent from my PDP-7 Running UNIX V0 expect things to be almost but not quite. 

> On Feb 15, 2018, at 7:51 PM, Dan Cross <crossd at gmail.com> wrote:
> 
>> On Thu, Feb 15, 2018 at 7:01 PM, Dave Horsfall <dave at horsfall.org> wrote:
>> On Wed, 14 Feb 2018, Toby Thain wrote:
>>>> ALGOL, one of the most influential languages ever, with just about every programming language in use today tracing its roots to it.
>>> 
>>> Worth mentioning one significant exception: the Lisp family.
>> 
>> I know about LISP (and even used it); it's on my history list.
>> 
>> Actually, I can't think of any language that derived exclusively from LISP (other than Scheme etc)...  Oh, and EMACS :-)
> 
> There were (and are!) a whole bunch of dialects of Lisp: Common Lisp and Scheme might be the best known, with Clojure a modern entrant. Arc is sort of a thing. Most folks know about emacs Lisp. All of these derive from the original Lisp.
> 
> But there were a whole slew of historical dialects descended from Lisp 1.5: MacLisp, InterLisp, FranzLisp, Lisp Machine Lisp, the original variant implemented by Symbolics before they adopted Common Lisp, Portable Standard Lisp...and any number of others that were implemented as extension languages: AutoLisp from AutoCAD, the aforementioned Emacs Lisp, the pseudo-Lisp from Gosling's Emacs, and plenty of others. And how about implementations? VAX Lisp, LispWorks, Allegro, etc. I think the thing is that "Lisp" isn't a single language, but rather a family of languages that all share common features (code is data, macros, etc, etc, etc) with lots of variation between them (I understand that there was serious argument about whether integer literals should be written in octal in Common Lisp, as they were in MacLisp. Somehow common sense prevailed).
> 
> So, how's this relevant to Unix? Well, I'd like to know more about the historical interplay between the Unix and Lisp communities. What about the Lisp done at Berkeley on the VAX (Franz Lisp).
> 
> One of the things that strikes me about Lisp and Unix is the conceptual similarity between image based languages (like Lisp) with a REPL and the Unix "process as virtual machine" model with a shell and set of utilities. An image is a sort of virtual machine and a REPL is a sort of shell; callable functions in the REPL are sort of like discrete programs in the $PATH. To a first order approximation, at any rate.
> 
> So anyway...some of you who were there, was there cross-pollination? Was Franz Lisp a thing Unix people at Berkeley played with, or was it mostly Lisp people who just happened to be using Unix because VAXen were expensive?
> 
>         - Dan C.
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20180215/00914085/attachment.html>

