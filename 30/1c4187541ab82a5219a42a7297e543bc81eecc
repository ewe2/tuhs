From: clemc@ccc.com (Clem Cole)
Date: Sun, 24 Sep 2017 15:54:07 -0400
Subject: [TUHS] RFS was: Re: UNIX of choice these days?
In-Reply-To: <b6e8b71c-ba04-bbfb-00db-c371ee62cdb8@kilonet.net>
References: <c38ba7b5-e867-93a3-14a2-c61c90bb49b5@kilonet.net>
 <alpine.BSF.2.21.1709201036150.89458@aneurin.horsfall.org>
 <20170923091704.GD10152@darioniedermann.it>
 <CANuZA8QHNn=6Gg-Sm20s-0PSsS7y26c=uNbNETUX74Tx1A=DWQ@mail.gmail.com>
 <CALMnNGgMSmqQ56r7xTRNdrDYfRiMieQ48kuZfWtSKd+yjmP2tg@mail.gmail.com>
 <CAP6exYKxC2g06dSRiM8-0BLN08AEWyO-8a0VAcy3vP4H3-8o8A@mail.gmail.com>
 <CAC20D2MKSzQEfmD0dnKYv-0V00TkL6f_-Dv4Gs1diOrBLS8x3Q@mail.gmail.com>
 <b6e8b71c-ba04-bbfb-00db-c371ee62cdb8@kilonet.net>
Message-ID: <CAC20D2PYANmz2=oWCHX6h3jM5bxFBbzQZHDZXP00idyw+fwDZw@mail.gmail.com>

On Sun, Sep 24, 2017 at 1:51 PM, Arthur Krewat <krewat at kilonet.net> wrote:

> Where does RFS (AT&T System III) fit in all of this?
>
​Well it was not in PWB 3.0 - aka System ​III.




>
> ​....
>
>
> Just looking for history on RFS if any.
>
David Arnovitz's work -- Dave worked for us at Masscomp in Atlanta​
afterwards.  IIRC Summit pushed it out via System V, it was not part of
System III (David did not even work for BTL when System II was released).

RFS was based on ideas Peter had used in Eighth Edition file system.  When
we did EFS @ Masscomp, Perry Flinn and I were both aware of Peter's work (I
had talked to him a few times).  As we finished it, we hired Dave in
Atlanta and told me about us a little about RFS although it had not yet
been released.   If you look, my EFS paper was the alternate paper given
against Rusty's when the NFS paper published - difference - Masscomp would
not give away EFS - different story].

Anyway, Dave's RFS used Peter's file system switch that was in
Eighth Edition.  I used something similar for EFS.   Which was not as clean
as Steve Klieman's VFS layer; which I think Sun did right.   But NFS got
the whole stateless thing wrong which I was pleased over the years to see I
was right (the whole point of the EFS paper was if it's a real UNIX file
system, then their will be shared state and its how do you recover from an
error).

RFS, EFS and Weinberger's FS all did stateful recovery.  RFS used a
function ship model IIRC.  I did not get to look at the code until long
after it was released so I never studied it in detail and I never ran it.
But he had Peter's work available to him, so I suspect there is a lot
common ideas.  I think Peter used function shipping also.    [EFS did not,
it was more ad hoc as what we shipped and what we did not.   That was a
performance thing for us as we had Apollo down the street and were very,
very concerned with what Ageis/Domain could do].

That said, NFS had a really simple model, which (in practice) was good
enough for many things and more importantly, Sun gave the code away and
made it a standard.  So the old less is more; Christensen disruption theory
of technology came through.

Masscomp (and Apollo with Domain) both had 'better' distributed file
systems, but 'lost' because (like DEC were many of their people -
particularly in marketing - came) - did not get it.   Tried to keep to
closed like VMS et al... and it ultimately died.  NFS was 'free' and did
the job.   What was there not to like.

In hindsight, I wish I could have understood that then.  Cudo's the Kleiman
for what he did!

Clem
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20170924/b59b4cb6/attachment-0001.html>

