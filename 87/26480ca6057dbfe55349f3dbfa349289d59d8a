X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 7123 invoked from network); 12 Oct 2020 17:55:27 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 12 Oct 2020 17:55:27 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id B848B9CA81; Tue, 13 Oct 2020 03:55:25 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id A3CB49CA7A;
	Tue, 13 Oct 2020 03:55:02 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (2048-bit key; unprotected) header.d=bsdimp-com.20150623.gappssmtp.com header.i=@bsdimp-com.20150623.gappssmtp.com header.b="yLfLmUwc";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id D883A9CA7A; Tue, 13 Oct 2020 03:54:59 +1000 (AEST)
Received: from mail-qv1-f67.google.com (mail-qv1-f67.google.com
 [209.85.219.67])
 by minnie.tuhs.org (Postfix) with ESMTPS id EB4E793D6D
 for <tuhs@minnie.tuhs.org>; Tue, 13 Oct 2020 03:54:58 +1000 (AEST)
Received: by mail-qv1-f67.google.com with SMTP id o25so2227832qvf.7
 for <tuhs@minnie.tuhs.org>; Mon, 12 Oct 2020 10:54:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=bsdimp-com.20150623.gappssmtp.com; s=20150623;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=fR+Vqa2CHxXPHk/AtqKegtgyrt+jezpEvHAF+JvAAig=;
 b=yLfLmUwcNdqFO34URFWR98LrJFVlDMyMD7I3dltj+IyjYN8lcKRvolZ59f2jeRu7+4
 h4pXCdk7qga4eSBVDqWO2j/VilBIHhqVxSRKOys0z1im1C8TFv4bz9rQDamUHe3C9g+b
 RsIp57PALcXOyTW2LIVds6qQRQ4LDVqF/LjBaB0zKWK8aGCmntRns+hUvtIQVErOBGty
 fRH0Xz1iqrPLglAJhKDiJGEgwRdUbm7GYukuBpK388h0F9FYBBgkGialhPFZiFz9O3cS
 YjOhnoCS8PVvkXgL7MeOxpcccTyBQIcVYeSWOwOG3xKLSjjEHs3oe3woRUzH5ivCt0c1
 LK3A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=fR+Vqa2CHxXPHk/AtqKegtgyrt+jezpEvHAF+JvAAig=;
 b=IB9+JBjDie2mZTHtk1xyDb8k+mN/+4mBftGo8XoPvvq5JeXkyFOlcrY5U/AVjA3/1Q
 Um44VnXdIkFcw3TPMJy2WsCK/ep5LJDnstI5ULkwJt15CCtEgjBay/Xo0Xx52/oTuMk8
 6zMquel24yW0ihzQo3Dqc+uZ/OJNkuY2yuP/Ef1/ulNUifSP8VpgzYnS38JUykNYfgIM
 eiDrRUBGiNmwqqUxbyUQ4v5fH43EauJaQRiVjJBL0rMre1J/31NiU+Vly6GNsZYrb+63
 A8L4YXlslgKcFoo4l3lYzS3dD/5w3kYoGsCff8nsraA0oWfyVcpenfVqAMS47H2PZuAS
 l5pA==
X-Gm-Message-State: AOAM532mhofQBoCJMCD/b7V2uWWsGwsKHpta3LogxUavSFg8vMNgCJt8
 3qSUN/rp2lHjpYP3jQK5An7qnLRV1gkN69re6CsbCQ==
X-Google-Smtp-Source: ABdhPJxHAyKhZw0/cwG1R/RiKXWGyZ0DmGNFxY+aDEiXoSo/ad0l32kWMCVMuSXR7ilNi04c6CeqCcHVETXbWvBDBX0=
X-Received: by 2002:a0c:e283:: with SMTP id r3mr9085201qvl.28.1602525297849;
 Mon, 12 Oct 2020 10:54:57 -0700 (PDT)
MIME-Version: 1.0
References: <20201010232948.5F33818C0A6@mercury.lcs.mit.edu>
 <CAD05_j2dX-8ObXkr+VRFWpcNpnZmNUqACPvzcG-TZTiZY=xm+Q@mail.gmail.com>
 <alpine.BSF.2.21.9999.2010121148370.91515@aneurin.horsfall.org>
 <CANCZdfpBcb6EXKgvgU-ZHETK4kdXajrynu52eYWtn+ZFsc3hGQ@mail.gmail.com>
 <faab01ad-bbe9-6b50-3592-e526224863bf@kilonet.net>
 <35E93126-1C37-471B-82E6-FEA71A062307@iitbombay.org>
In-Reply-To: <35E93126-1C37-471B-82E6-FEA71A062307@iitbombay.org>
From: Warner Losh <imp@bsdimp.com>
Date: Mon, 12 Oct 2020 11:54:46 -0600
Message-ID: <CANCZdfpQ5wFW+G3YaA_ocJV83LqJfaLHxMZ=5F6dKRJTxUrkvQ@mail.gmail.com>
To: Bakul Shah <bakul@iitbombay.org>
Content-Type: multipart/alternative; boundary="0000000000001f4b8805b17cff69"
Subject: Re: [TUHS] FreeBSD disk devices (Re: Choice of Unix for 11/03 and
 11/23+ Systems
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--0000000000001f4b8805b17cff69
Content-Type: text/plain; charset="UTF-8"

On Mon, Oct 12, 2020 at 11:47 AM Bakul Shah <bakul@iitbombay.org> wrote:

> On Oct 12, 2020, at 9:57 AM, Arthur Krewat <krewat@kilonet.net> wrote:
> >
> > On 10/11/2020 9:56 PM, Warner Losh wrote:
> >> unaligned I/O on the block device
> > Sorry, I have to laugh... isn't that an oxymoron? ;)
>
> Actually there are no *block* devices in FreeBSD.
> And while raw device files such as /dev/r<blkdev>
> no longer exist, it is the block devices (with
> their buffering etc.) that are gone. Only raw devices
> exist now.
>

There's still the buffer cache that does do buffering on the devices... but
it's a different kind of buffering than traditional kernels.  but you're
right, only the cdevs are plumbed down, not the bdevs.


> And FreeBSD raw disk device drivers don't allow
> unaligned I/O access. Nor should they paper over
> what is not allowed by the underlying device. Try
>
> #include <stdio.h>
> #include <stdlib.h>
> #include <unistd.h>
>
> unsigned char buf[1024];
>
> int main(int c, char**v) {
>         char* a = c > 1? v[1] : "1";
>         off_t off = (off_t)strtoull(a, 0, 0);
>         ssize_t r = pread(0, buf, sizeof buf, off);
>         if (r < 0) { perror("read"); return 1; }
>         for (int i = 0; i < 4; i++) printf(" %02x", buf[i]);
>         printf("\n");
>         return 0;
> }
>

I meant something different about 'unaligned' access. I mean that the
buffers you read the data into needn't be page aligned. That causes a fair
amount of hair in the lower layers where I spend much of my time...

You are correct you have to read them on an LBA boundary.

Warner

--0000000000001f4b8805b17cff69
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><br></div><br><div class=3D"gmail_quote">=
<div dir=3D"ltr" class=3D"gmail_attr">On Mon, Oct 12, 2020 at 11:47 AM Baku=
l Shah &lt;<a href=3D"mailto:bakul@iitbombay.org">bakul@iitbombay.org</a>&g=
t; wrote:<br></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0p=
x 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex">On Oct=
 12, 2020, at 9:57 AM, Arthur Krewat &lt;<a href=3D"mailto:krewat@kilonet.n=
et" target=3D"_blank">krewat@kilonet.net</a>&gt; wrote:<br>
&gt; <br>
&gt; On 10/11/2020 9:56 PM, Warner Losh wrote:<br>
&gt;&gt; unaligned I/O on the block device<br>
&gt; Sorry, I have to laugh... isn&#39;t that an oxymoron? ;)<br>
<br>
Actually there are no *block* devices in FreeBSD.<br>
And while raw device files such as /dev/r&lt;blkdev&gt;<br>
no longer exist, it is the block devices (with<br>
their buffering etc.) that are gone. Only raw devices<br>
exist now.<br></blockquote><div><br></div><div>There&#39;s still the buffer=
 cache that does do buffering on the devices... but it&#39;s a different ki=
nd of buffering than traditional kernels.=C2=A0 but you&#39;re right, only =
the cdevs=C2=A0are plumbed down, not the bdevs.</div><div>=C2=A0</div><bloc=
kquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:=
1px solid rgb(204,204,204);padding-left:1ex">
And FreeBSD raw disk device drivers don&#39;t allow<br>
unaligned I/O access. Nor should they paper over<br>
what is not allowed by the underlying device. Try<br>
<br>
#include &lt;stdio.h&gt;<br>
#include &lt;stdlib.h&gt;<br>
#include &lt;unistd.h&gt;<br>
<br>
unsigned char buf[1024];<br>
<br>
int main(int c, char**v) {<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 char* a =3D c &gt; 1? v[1] : &quot;1&quot;;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 off_t off =3D (off_t)strtoull(a, 0, 0);<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 ssize_t r =3D pread(0, buf, sizeof buf, off);<b=
r>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 if (r &lt; 0) { perror(&quot;read&quot;); retur=
n 1; }<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 for (int i =3D 0; i &lt; 4; i++) printf(&quot; =
%02x&quot;, buf[i]);<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 printf(&quot;\n&quot;);<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 return 0;<br>
}<br></blockquote><div><br></div><div>I meant something different about &#3=
9;unaligned&#39; access. I mean that the buffers you read the data into nee=
dn&#39;t be page aligned. That causes a fair amount of hair in the lower la=
yers where I spend much of my time...</div><div><br></div><div>You are corr=
ect you have to read them on an LBA boundary.</div><div><br></div><div>Warn=
er</div></div></div>

--0000000000001f4b8805b17cff69--
