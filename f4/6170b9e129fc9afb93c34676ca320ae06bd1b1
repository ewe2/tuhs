From: random832@fastmail.us (random832@fastmail.us)
Date: Tue, 06 Jan 2015 15:33:53 -0500
Subject: [TUHS] pdp11 UNIX memory allocation.
In-Reply-To: <54AC4394.3050302@update.uu.se>
References: <mailman.147.1420574271.3354.tuhs@minnie.tuhs.org>
 <54AC4394.3050302@update.uu.se>
Message-ID: <1420576433.410248.210385277.513EF8EC@webmail.messagingengine.com>

On Tue, Jan 6, 2015, at 15:20, Johnny Billquist wrote:
> Later model PDP-11 processors had a hardware feature called split I/D 
> space. This meant that you could have one 64Kb virtual memory space for 
> instructions, and one 64Kb virtual memory space for data.

Was it possible to read/write to the instruction space, or execute the
data space? From what I've seen, the calling convention for PDP-11 Unix
system calls read their arguments from directly after the trap
instruction (which would mean that the C wrappers for the system calls
would have to write their arguments there, even if assembly programs
could have them hardcoded.)


