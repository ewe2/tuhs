From: dfawcus+lists-tuhs@employees.org (Derek Fawcus)
Date: Sun, 8 Nov 2015 05:10:28 +0000
Subject: [TUHS] System III - TCP/IP
In-Reply-To: <20151107231338.Horde.d8EIgIMMf9VYCExfovc2K_M@avocado.salatschuessel.net>
References: <20151107200358.Horde.M1lYZZyTC4t0Qb8KrygKzhy@avocado.salatschuessel.net>
 <20151107192043.GA11895@mcvoy.com>
 <CAC20D2NnLC2H=+8ZzpXEpgUqa+qW3JuFMLeWjL_Su9OBoHWBZQ@mail.gmail.com>
 <20151107231338.Horde.d8EIgIMMf9VYCExfovc2K_M@avocado.salatschuessel.net>
Message-ID: <20151108051028.GA32246@cowbell.employees.org>

On Sat, Nov 07, 2015 at 11:13:38pm +0100, Oliver Lehmann wrote:
> 
> It is basically a pcc as of 1981 with whatever Zilog hacked into it
> additionally. I once tried to get a current pcc onto the system but...
> yeah... I guess I lack skill ;)
> - the new PCC would need to create Z8001 ASM code.... something I lack skill.
> - an optimizer... haha...  no way I could  even optimize Z8001 ASM code by
>    hand ;)
> - if a new linker is needed - how to create Zilogs s.out format...
> - I guess I would need to recompile the whole kernel with this new compiler
>    to have every object work "together" - but I still lack some sources (most
> of them I "retranslated" from disassembled object files to C code - but 2 or
> 3 are just are too hard to retranslate)
> I also had a look at the C-Compiler which comes with Plexis SYSIII (which
> is available as source somewhere in the WWW) but this is a compiler capable
> of non-segmented executables (one 64K segment adressable) only but I need a
> Compiler creating segmented executables (128 64k segments accessable = 8MB
> address space)

Older versions of gcc (around 3.3/3.4) supported the z8000 family,  so you
could try using it to make things easier.  Have a look here:
  http://www.z80ne.com/m20/sections/download/z8kgcc/z8kgcc.html
which seems to be a version supporting segments - the '-mz8001' switch.

DF


