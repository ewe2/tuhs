X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 25177 invoked from network); 24 Feb 2021 20:06:15 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 24 Feb 2021 20:06:15 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id E536D9C837; Thu, 25 Feb 2021 06:06:10 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 6FC309C6CE;
	Thu, 25 Feb 2021 06:05:44 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 381409C6CE; Thu, 25 Feb 2021 06:05:42 +1000 (AEST)
Received: from central.weird.com (unknown [198.96.117.51])
 by minnie.tuhs.org (Postfix) with ESMTP id 6B2539BA4D
 for <tuhs@tuhs.org>; Thu, 25 Feb 2021 06:05:41 +1000 (AEST)
Received: from (invalid client hostname: bind: DNS error: DNS lookup for A for
 'more.local': Unknown host)more.local
 ((no PTR matching greeting name)d207-6-82-137.bchsia.telus.net[207.6.82.137]
 port=63659) by central.weird.com([198.96.117.51] port=587)
 via TCP with esmtp (6738 bytes) (sender: <woods@mail.weird.com>)
 (ident <nobody> using UNIX) id <m1lF0Pk-00r7ThC@central.weird.com>
 for <tuhs@tuhs.org>; Wed, 24 Feb 2021 15:05:40 -0500 (EST)
 (Smail-3.2.0.122-Pre 2005-Nov-17 #78 built 2020-Mar-25)
Received: from (invalid client hostname: the DNS A record (with the targegt
 address [10.0.1.129]) for the hostname 'more.local' does not match the
 expected address [10.0.1.129])more.local
 ((no PTR matching greeting name)xentastic.local[10.0.1.140] port=59392)
 by more.local([10.0.1.129] port=25) via TCP with esmtp (6232 bytes)
 (sender: <woods@mail.weird.com>) id <m1lF0Pi-0036x9C@more.local>
 for <tuhs@tuhs.org>; Wed, 24 Feb 2021 12:05:38 -0800 (PST)
 (Smail-3.2.0.122-Pre 2005-Nov-17 #1 built 2015-Feb-17)
Message-Id: <m1lF0Pi-0036x9C@more.local>
Date: Wed, 24 Feb 2021 12:05:38 -0800
From: "Greg A. Woods" <woods@robohack.ca>
To: The Unix Heritage Society mailing list <tuhs@tuhs.org>
In-Reply-To: <CANCZdfpia=NOocC4sgrtCYcVbXJ8f=xr_rLOf5VkQmwew0OhsA@mail.gmail.com>
References: <CMM.0.96.0.1614109077.beebe@gamma.math.utah.edu>
 <91696417-3233-232e-e1f4-3cb914202801@technologists.com>
 <CAEdTPBc-warK9hZxzTg8Shm4uM8+9oN2NmiurT1WWhohZM0yBg@mail.gmail.com>
 <m1lEkCi-0036x9C@more.local>
 <CANCZdfpia=NOocC4sgrtCYcVbXJ8f=xr_rLOf5VkQmwew0OhsA@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM/1.14.9 (=?ISO-8859-4?Q?Goj=F2?=) APEL/10.8 EasyPG/1.0.0 Emacs/25.3
 (x86_64--netbsd) MULE/6.0 (HANACHIRUSATO)
X-Face: ; j3Eth2XV8h1Yfu<eXd9JL+"t;
 iT8?{X]Fjm`Qb]>*uL{<:dQ$#E[DB0gemGZJ"J#4fH*][
 lz; @-iwMv_u\6uIEKR0KY"=MzoQH#CrqBN`nG_5B@rrM8,f~Gr&h5a\=<t0loVf0$}bP=]i3OMh"n_
 _@m4/, ~2`V=(-9LyW.)'`@E_fE^<4y7)BIe`A''/j-Y#gDNZERh%CCij'q-NA4F<|yjznEhd7=l^xH
 2.qD3o0IanGHERTW+z$G
Organization: Planix, Inc.
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Wed_Feb_24_12:04:22_2021-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Subject: Re: [TUHS] Abstractions
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Reply-To: The Unix Heritage Society mailing list <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--pgp-sign-Multipart_Wed_Feb_24_12:04:22_2021-1
Content-Type: text/plain; charset=US-ASCII

At Tue, 23 Feb 2021 20:20:55 -0700, Warner Losh <imp@bsdimp.com> wrote:
Subject: Re: [TUHS] Abstractions
>
> I booted a FreeBSD/i386 4 system, sans compilers and a few other things,
> off 16MB CF card in the early 2000s. I did both static (one binary) and
> dynamic and found dynamic worked a lot better for the embedded system...

I guess it may depend on your measure of "better"?

With a single static-linked binary on a modern demand paged system with
shared text pages, the effect is that almost all instructions for any
and all programs (and of course all libraries) are almost always paged
in at any given time.  The result is that program startup requires so
few page-in faults that it appears to happen instantaneously.

My little i386 image feels faster at the command line (e.g. running on
an old Soekris box, even when the root filesystem is on a rather slow
flash drive) than on any of the fastest non-static-linked systems I've
ever used because of this -- that is of course until it is asked to do
any actual computing or other I/O operations.  :-)

So, in an embedded system there will be many influencing factors,
including such as how many exec()s there are during normal operations.

For machines with oodles of memory and very fast and large SSDs (and
using any kernel with a decently tuneable paging system) one can simply
static-link all binaries separately and achieve similar results, at
least for programs that are run relatively often.

For example the build times of a full system build of, e.g. NetBSD, with
a fully static-linked host system and toolchain are remarkably lower
than on a fully dynamic-linked system since all the extra processing
(and esp. any extra I/Os) done by the "stupid" dynamic linker (i.e. the
one that's ubiquitous in modern unixy systems) are completely and
forever eliminated.  I haven't even measured the difference in years now
because I find fully dynamic-linked systems too painful to use for
intensive development of large systems.

Taking this to the opposite extreme one need only use modern macOS on a
machine with an older spinning-rust hard drive that has a loud seek arm
to hear and feel how incredibly slow even the simplest tasks can be,
e.g. typing "man man" after a reboot or a few days of not running "man".
This is because on top of the "stupid" dynamic linker that's needed to
start the "man" program, there's also a huge stinking pile of additional
wrappers has been added to all of the toolchain command-line tools that
require doing even more gratuitous I/O operations (as well as running
perhaps millions more gratuitous instructions) for infrequent
invocations (luckily these wrappers seem to cache some of the most
expensive overhead).  (note: "man" is not in the same boat as, e.g. the
toolchain progs, and I'm not quite sure why it churns so much on first
invocations)

My little static-linked i386 system can run "man man" several (many?)
thousand times before my old iMac can display even the first line of
output.  And that's for a simple small program -- just imagine the
immense atrocities necessary to run a program that links to several
dozen libraries (e.g. the typical GUI application like a web browser,
with the saving grace that we don't usually restart browsers in a loop
like we restart compilers; but, e.g. /usr/bin/php on macos links to 21
libraries, and even the linker (ld) needs 7 dynamic libraries).

BTW, a non-stupid dynamic linker would work the way Multics did (and to
some extent I think that's more how dynamic linking worked in AT&T UNIX
(SysVr3.2) on the 3B2s), but such things are so much more complicated in
a flat address space.  Pre-binding, such as I think macOS and IRIX do
(and maybe can be done with the most modern binutils), are somewhat like
Multics "bound segments" (though still less flexible and perhaps less
performant).

--
					Greg A. Woods <gwoods@acm.org>

Kelowna, BC     +1 250 762-7675           RoboHack <woods@robohack.ca>
Planix, Inc. <woods@planix.com>     Avoncote Farms <woods@avoncote.ca>

--pgp-sign-Multipart_Wed_Feb_24_12:04:22_2021-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit
Content-Description: OpenPGP Digital Signature

-----BEGIN PGP SIGNATURE-----

iF0EABECAB0WIQTWEnAIIlcZX4oAawJie18UwlnHhQUCYDaxfQAKCRBie18UwlnH
hTsiAJ9+Ch9IqjXtwmOiunMXVtE2B4LoKwCg6FAbh35SxiHGsE9Uxd9XeCYegcg=
=IHtS
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Wed_Feb_24_12:04:22_2021-1--
