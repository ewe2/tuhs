From: ggm@algebras.org (George Michaelson)
Date: Tue, 20 Mar 2018 17:47:16 +0000
Subject: [TUHS] FORTRAN
In-Reply-To: <CABH=_VToT+y25XBfsyYATAPNReZFKeT1Zh22f37O_PekuXZZkQ@mail.gmail.com>
References: <61051ebbca4809c08b60e92014851069e83a07f8@webmail.yaccman.com>
 <e3c0e8ee-4b95-3661-1a5f-39d1aa6323f4@gmail.com>
 <CABH=_VToT+y25XBfsyYATAPNReZFKeT1Zh22f37O_PekuXZZkQ@mail.gmail.com>
Message-ID: <CAKr6gn31aWY7Zmi2mGffB-b3W3BinHfj1h1SqmgQyNww9n1RoQ@mail.gmail.com>

I have some sympathy with the compiler writers, because if you have
invested in passing compliance and test suites, to make code which NAG
will then be compiled through, somebody out there is going to use this
code to test the strain in a bridge (topical...) or something similar,
and when it fails under load because the loop terminated the way you
didn't expect, things are very ugly.

If you know your compiler is what you stand behind, it makes sense to
push for it to be the one adopted. The likelihood the linker causes
the problem feels lower.

Actually I think it was just not-invented-here, but I do have some sympathy.

-G

On Tue, Mar 20, 2018 at 5:42 PM, Paul Winalski <paul.winalski at gmail.com> wrote:
> Another bit of history of Fortran on UNIX:
>
> DEC initially offered f77 on Ultrix, its commercial UNIX release for
> the VAX.  When the decision to market Ultrix was made, our engineering
> group, which developed the compiler and software development tools
> suite for VAX/VMS, offered to port some of our products, including VAX
> Fortran, to Ultrix.  The Ultrix engineering group fought the proposal
> tooth and nail, and so we dropped the idea.
>
> f77 was never taken very seriously by the Fortran user community,
> whereas VAX Fortran was considered the gold standard for the language.
> There were repeated calls from potential Ultrix customers for DEC to
> make VAX Fortran available on that platform.  Eventually circa 1985
> there was a panic rush project to port VAX Fortran to Ultrix.  It was
> decided that, if we were to meet the short time-to-market goal,
> modifying the VAX Fortran code generator to emit zmagic object files
> was out of the question.  Instead, we would have it continue to
> produce VMS object files, and we would port the VMS linker to Ultrix
> and teach it to understand zmagic, stab-style debug information, and
> ar archives.  I led the team that produced the lk linker, which could
> take in either zmagic or VAX object files and produced a.out-style
> images.  lk didn't implement some of the esoteric features of ld, but
> it got the job done.  The Fortran RTL was shipped as VMS-style object
> files.
>
> One feature of VMS object files is that the name of the compiler that
> produced them is recorded.  The lk linker reported this in the link
> maps it produced.  VAX Fortran for Ultrix customers were rather
> surprised to see the variety of languages (BLISS, Pascal, BASIC,
> Fortran, assembler, etc.) that had been used to implement the Fortran
> RTL.
>
> -Paul W.

