From: tfb@tfeb.org (Tim Bradshaw)
Date: Mon, 27 Feb 2017 06:41:56 +0000
Subject: [TUHS] Emacs and undump
In-Reply-To: <141DC1F7-C4AA-4EF4-8CBE-E99845326D7B@kdbarto.org>
References: <mailman.334.1488132096.3779.tuhs@minnie.tuhs.org>
 <141DC1F7-C4AA-4EF4-8CBE-E99845326D7B@kdbarto.org>
Message-ID: <3FA64C9B-4EBB-4EDA-8BD7-B59DAE6BF650@tfeb.org>

> On 26 Feb 2017, at 19:16, David <david at kdbarto.org> wrote:
> 
> I remember that GNU Emacs launched the first time and then dumped itself out as a core file. Each subsequent launch would then ‘undump’ itself back into memory. All this because launching emacs the first time required compiling all that lisp code.

It still works like that.  Indeed that's the conventional way that Lisp systems tend to work for delivering applications: you compile and load your code into a running image and then dump that image in a form where it can be reloaded quickly.  The dumped image is either directly executable or is loaded by some small bootstrap loader which might also provide some low-level support (but might not: all that can be in the dumped image).  What you call these dumped images depends on your culture: they might be 'worlds', 'bands' or 'sysouts' among other things.

(There are often also compiled files which are generally called fasl files, though in emacs they are elc files.)

