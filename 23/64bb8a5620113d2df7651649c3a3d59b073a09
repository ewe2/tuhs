X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 8889 invoked from network); 8 Apr 2022 16:10:01 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 8 Apr 2022 16:10:01 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 310979D6E6; Sat,  9 Apr 2022 02:09:59 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 014239D680;
	Sat,  9 Apr 2022 02:07:38 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 5F96E9D680; Sat,  9 Apr 2022 02:07:36 +1000 (AEST)
Received: from mercury.lcs.mit.edu (mercury.lcs.mit.edu [18.26.0.122])
 by minnie.tuhs.org (Postfix) with ESMTPS id 562869D665
 for <tuhs@minnie.tuhs.org>; Sat,  9 Apr 2022 02:07:35 +1000 (AEST)
Received: by mercury.lcs.mit.edu (Postfix, from userid 11178)
 id 380DB18C0A8; Fri,  8 Apr 2022 12:07:34 -0400 (EDT)
To: tuhs@minnie.tuhs.org
Message-Id: <20220408160734.380DB18C0A8@mercury.lcs.mit.edu>
Date: Fri,  8 Apr 2022 12:07:34 -0400 (EDT)
From: jnc@mercury.lcs.mit.edu (Noel Chiappa)
Subject: Re: [TUHS] Interesting commentary on Unix from Multicians.
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: jnc@mercury.lcs.mit.edu
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

    > From: Clem Cole

    > Not to put too fine a point on it, It seems like it would be fair to
    > say Multics was 'complete' by the time Organick published his book

This is a pretty ill-judged claim, IMO - but not for any particulars about
the Organick book, etc. The problem is more global.

When was UNIX 'complete' - when the first people were able to do real work on
the PDP-7? When non-programmer clerks from the patent group were able to use
the assembler UNIX on the PDP-11 to format parent documents? When it was
re-written in C for the 4th Edition (since the _portability_ of UNIX was IMO
perhaps the greatest factor in its eventual domination)? Etc, etc, etc.

The exact same problem applies to the question of 'when was Multics
'complete''.

    > don't know when it first appeared and can not seem to find it. ... I
    > bet I have the 3rd printing. ... Anyone have a first edition around
    > with the publication date?

The third printing _is_ the first edition. Anyway, it doesn't matter - see
above. And of course even if the book _wriring_ was finished at time T, it
wouldn't have been printed until some unknown time later. So that's really
pretty useless as a temporal marker; we have much better ones availablw.


    > From: Dan Cross

    > I can't see any indication that this is anything other than the first
    > printing.

My 3rd printing says 3rd was 1980, 2nd in 1976, and copyright 1972.

    > Organick's book is often said to describe an earlier version of the
    > system

Yes; I'm not sure if the version described in it was ever available for
general usege (which could be my definition of 'complete') - or even usage my
Multics system programmers. I don't remember all the details of the
differences (it's been way too long since I read it, and I don't know the
details of the 'first operational' Multics well enough), but for instance:

ISTR that it describes a version which had a linkage segment (holding
intermediate locations in outbound links - since segment >a>b>c might well
have different segment numbers assigned to it in the address spaces of
processes X and Y, so one copy of >a>b>c, shared between X and Y, couldn't
contain direct outbound links) _per segment_ (data or code) - but operational
Multics (I don't know if this is from 'first available to users', or 'first
available to Multics system programmers', or what) collapsed all the linkage
info into a 'combined linkage segment', in which the linkage info from all
the segments in a process' address space were combined (by copying) into a
single linkage segment.

Etc, etc, etc.

    > I understand that Multics got much better after the move to the 6180

I'm not sure that the 6180 made that big a difference to the environment the
average use saw. My understanding (not having been there) was that the big
_architectural_ difference was that cross-ring inter-segment references were
done and monitored in hardware, so a host of security holes caused by
insufficient checking of cross-ring inter-segment pointers were caught
automatically. (The 6180 was also built out of SSI chips, unlike the 645 which
was individual transistors, like a KA10.)

	Noel
