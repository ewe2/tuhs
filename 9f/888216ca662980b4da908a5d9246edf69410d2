X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	HTML_MESSAGE,MAILING_LIST_MULTI,MIME_QP_LONG_LINE,RCVD_IN_DNSWL_NONE
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 2904 invoked from network); 25 Jan 2021 17:12:24 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 25 Jan 2021 17:12:24 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 45F8F9C824; Tue, 26 Jan 2021 03:12:22 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 6011E9C63D;
	Tue, 26 Jan 2021 03:12:04 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=iitbombay-org.20150623.gappssmtp.com header.i=@iitbombay-org.20150623.gappssmtp.com header.b="iyZlQT71";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 4D9879C63D; Tue, 26 Jan 2021 03:12:02 +1000 (AEST)
Received: from mail-ot1-f44.google.com (mail-ot1-f44.google.com
 [209.85.210.44])
 by minnie.tuhs.org (Postfix) with ESMTPS id 4334F9C5FD
 for <tuhs@minnie.tuhs.org>; Tue, 26 Jan 2021 03:12:01 +1000 (AEST)
Received: by mail-ot1-f44.google.com with SMTP id a109so13468459otc.1
 for <tuhs@minnie.tuhs.org>; Mon, 25 Jan 2021 09:12:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=iitbombay-org.20150623.gappssmtp.com; s=20150623;
 h=content-transfer-encoding:mime-version:subject:from:in-reply-to:cc
 :date:message-id:references:to;
 bh=C6XMiv2NlHUyX3V4iYdX5wMMYmSlrxWd+ASfqDEahgY=;
 b=iyZlQT71+q/3zcjtjC8rA4+j8+MCRqQ6VHt/M3x74XnMZXcwSxSowoe/XzGOcAEDMr
 qjn22Q3j8YJKSiraKuVd4+bQzEh73yTRO3vR0731T5v11ryg+E7uDICEyAX1zm/4Ldbp
 mebM9vIcOJnMaixEUwI/zcrfaApWmmli/bvcMHWE6fdTYYqf+Qrln7nrzMprb2AFf3dE
 6eZqbM1NGLPWMu5ByGTdNEuUFz4eeERx1NQam9EdXu55GVgpk+xOC8A+9vqC3DScE9Vt
 iZe9oD8N6EES+OzuScbZ9O8KmXNC2PDfIKnDktAtcE2wTr/7yy/hhi0ja5hl+RIXp6dy
 v1bg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:content-transfer-encoding:mime-version:subject
 :from:in-reply-to:cc:date:message-id:references:to;
 bh=C6XMiv2NlHUyX3V4iYdX5wMMYmSlrxWd+ASfqDEahgY=;
 b=rhc8i4kh1mQOyFdv3RbvhJiUoURIS51EnVcXwhpcsAW49NfRhE9tLyfVsPoplAlToe
 Lw1wOhczV8sEFpYGjKhW0j1pivDto7cbQfiHAaLFVJjZ8etDZSczJwm2cz9rgFaRrx33
 GqQFyPxB0MDIlr/y4+1vJJX3ytUEKv0+lvudfDeiJudH63Gp+Vo2wwhmFgPZMHD2INQK
 GVmETR6QgUd+m3tVEWVGbKK/MV9GpcMMgP4G0vVGzs2zlaKC+DagvPgnuxYOgXq/tY9G
 tEsk5zbhRbSRheFaxHX+jnDSdDTZ4nupI228u15ovpGOPH3rYwOy/CZxzsXbO2VMCsNy
 h77g==
X-Gm-Message-State: AOAM533kLZUzznRTHgRYfTtqJyGcAVqrDNQFvDhSrqUZGJj2kJaGwjXF
 aYWtY3r+6TmCuDcozdUG1kXcz+xOfB856g==
X-Google-Smtp-Source: ABdhPJyGXP3vJ3c5vKsVUqPRTLfHcJ7Az7DF3VOsyTW09QUo9Ki9GTa7DUTnKHpTN3CpCJ09Pb3MrA==
X-Received: by 2002:a9d:3786:: with SMTP id x6mr1162796otb.176.1611594720127; 
 Mon, 25 Jan 2021 09:12:00 -0800 (PST)
Received: from [192.168.1.110]
 (172-125-77-130.lightspeed.sntcca.sbcglobal.net. [172.125.77.130])
 by smtp.gmail.com with ESMTPSA id z3sm3395412ooj.26.2021.01.25.09.11.59
 (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
 Mon, 25 Jan 2021 09:11:59 -0800 (PST)
Content-Type: multipart/alternative;
 boundary=Apple-Mail-238046CA-CEB3-4775-8EF3-6C43DC111608
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (1.0)
From: Bakul Shah <bakul@iitbombay.org>
In-Reply-To: <CAEoi9W4TMh=SSrk=pqprark7+ctvZLsbW8h00pf31KbtUAy_CQ@mail.gmail.com>
Date: Mon, 25 Jan 2021 09:11:58 -0800
Message-Id: <F02E2017-C165-4C32-98F7-6A71D298AA68@iitbombay.org>
References: <CAEoi9W4TMh=SSrk=pqprark7+ctvZLsbW8h00pf31KbtUAy_CQ@mail.gmail.com>
To: Dan Cross <crossd@gmail.com>
X-Mailer: iPad Mail (18C66)
Subject: Re: [TUHS] tangential unix question: whatever happened to NeWS?
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>


--Apple-Mail-238046CA-CEB3-4775-8EF3-6C43DC111608
Content-Type: text/plain;
	charset=utf-8
Content-Transfer-Encoding: quoted-printable

see Ron Rivest=E2=80=99s s-expression serialization:=20

http://people.csail.mit.edu/rivest/Sexp.txt

of course, now we have json....

> On Jan 25, 2021, at 8:38 AM, Dan Cross <crossd@gmail.com> wrote:
> I guess I don't quite understand that. I can get how it works for simple d=
ata types (integers, floating point numbers, perhaps strings) but it seems l=
ike it breaks down pretty quickly for anything with a more complex represent=
ation (structures with multiple members, for instance; how does one deal wit=
h padding, etc?). "Reader makes right" makes some sense for any pair of send=
er/receiver architectures, but once you have more than a handful of machine t=
ypes with potentially different ABIs/representations/alignment requirements,=
 etc, then it seems like you're an n^2 mutual ABI understanding issue. Perha=
ps I'm being naive in assuming that multi-data structures are just written o=
ut in host format, but if you, say, write element by element to avoid that, t=
hen it seems like you're already nearly at an architecture independent data r=
epresentation anyway, so what does NOT having that buy you? I guess it's pot=
entially faster if you don't have to swab bytes between similar architecture=
s?

--Apple-Mail-238046CA-CEB3-4775-8EF3-6C43DC111608
Content-Type: text/html;
	charset=utf-8
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"content-type" content=3D"text/html; charset=3D=
utf-8"></head><body dir=3D"auto"><div dir=3D"ltr"><meta http-equiv=3D"conten=
t-type" content=3D"text/html; charset=3Dutf-8"><div dir=3D"ltr">see Ron Rive=
st=E2=80=99s s-expression serialization:&nbsp;</div><div dir=3D"ltr"><br></d=
iv><div dir=3D"ltr"><a href=3D"http://people.csail.mit.edu/rivest/Sexp.txt">=
http://people.csail.mit.edu/rivest/Sexp.txt</a></div><div dir=3D"ltr"><br></=
div><div dir=3D"ltr">of course, now we have json....</div><div dir=3D"ltr"><=
br><blockquote type=3D"cite">On Jan 25, 2021, at 8:38 AM, Dan Cross &lt;cros=
sd@gmail.com&gt; wrote:<br><br></blockquote></div><blockquote type=3D"cite">=
<div dir=3D"ltr">I guess I don't quite understand that. I can get how it wor=
ks for simple data types (integers, floating point numbers, perhaps strings)=
 but it seems like it breaks down pretty quickly for anything with a more co=
mplex representation (structures with multiple members, for instance; how do=
es one deal with padding, etc?). "Reader makes right" makes some sense for a=
ny pair of sender/receiver architectures, but once you have more than a hand=
ful of machine types with potentially different ABIs/representations/alignme=
nt requirements, etc, then it seems like you're an n^2 mutual ABI understand=
ing issue. Perhaps I'm being naive in assuming that multi-data structures ar=
e just written out in host format, but if you, say, write element by element=
 to avoid that, then it seems like you're already nearly at an architecture i=
ndependent data representation anyway, so what does NOT having that buy you?=
 I guess it's potentially faster if you don't have to swab bytes between sim=
ilar architectures?</div></blockquote></div></body></html>=

--Apple-Mail-238046CA-CEB3-4775-8EF3-6C43DC111608--
