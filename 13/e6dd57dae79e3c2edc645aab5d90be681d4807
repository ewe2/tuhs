X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.2 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	DKIM_VALID_AU,MAILING_LIST_MULTI,NICE_REPLY_A,RCVD_IN_DNSWL_NONE
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 4966 invoked from network); 17 Aug 2020 22:06:03 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 17 Aug 2020 22:06:03 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 97F3C9E1BB; Tue, 18 Aug 2020 08:05:59 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 9C74C9CAB6;
	Tue, 18 Aug 2020 08:05:19 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (1024-bit key; unprotected) header.d=kilonet.net header.i=@kilonet.net header.b="T+zOpg/1";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id F00DB9C8BB; Tue, 18 Aug 2020 08:05:15 +1000 (AEST)
Received: from p3plsmtpa09-02.prod.phx3.secureserver.net
 (p3plsmtpa09-02.prod.phx3.secureserver.net [173.201.193.231])
 by minnie.tuhs.org (Postfix) with ESMTPS id AC9E99C8BB
 for <tuhs@minnie.tuhs.org>; Tue, 18 Aug 2020 08:05:14 +1000 (AEST)
Received: from medusa.kilonet.net ([108.30.24.253]) by :SMTPAUTH: with ESMTPA
 id 7nFgkopYhhpWr7nFhkGAzQ; Mon, 17 Aug 2020 15:05:13 -0700
X-CMAE-Analysis: v=2.3 cv=cLGeTWWN c=1 sm=1 tr=0
 a=DPaANz7MSPdDiKJlpBZCUg==:117 a=DPaANz7MSPdDiKJlpBZCUg==:17
 a=IkcTkHD0fZMA:10 a=y4yBn9ojGxQA:10 a=xbr3S9fc9ZTQigv5b1QA:9 a=QEXdDO2ut3YA:10
X-SECURESERVER-ACCT: krewat@kilonet.net
Received: from [199.89.231.101] (ender.kilonet.net [199.89.231.101])
 by medusa.kilonet.net (8.14.8/8.15.1) with ESMTP id 07HM5C5Y029558
 for <tuhs@minnie.tuhs.org>; Mon, 17 Aug 2020 18:05:12 -0400 (EDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kilonet.net;
 s=default; t=1597701912;
 bh=C+PLe6hqhHl5fe8XrNwIXk9YE+x0UMXgnfVKWHB2cG4=;
 h=Subject:To:References:From:Date:In-Reply-To;
 b=T+zOpg/1NDgvJ3mmp50z+GzSccmkk9lllBtZTODbJ0iCoEGRvk2AYWRAOJbVPNIr/
 gl/QnZYHgoTiBTiP+I8Vh2Ivya7p+0icQvR5jicuL+m28RPvxPBPGc6LFmkzMnwCFM
 eZ5koJK5udWI8gK77Cq5gxU0u2Ycsyrb+BCBmL+s=
To: tuhs@minnie.tuhs.org
References: <20200817192715.22D9518C09E@mercury.lcs.mit.edu>
 <20200817193050.GC11413@mcvoy.com>
 <CABH=_VS=Wyvnb_SoiCfRd3GaYwA47TJhMSRwpryBoEo38T6fyw@mail.gmail.com>
From: Arthur Krewat <krewat@kilonet.net>
Message-ID: <88b97e2f-ddd2-8c5b-f2ac-3d4305c6ae86@kilonet.net>
Date: Mon, 17 Aug 2020 18:05:09 -0400
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:68.0) Gecko/20100101
 Thunderbird/68.11.0
MIME-Version: 1.0
In-Reply-To: <CABH=_VS=Wyvnb_SoiCfRd3GaYwA47TJhMSRwpryBoEo38T6fyw@mail.gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Language: en-US
X-CMAE-Envelope: MS4wfN76bN78rG1Cnhvphi7QWYoSXHiTX84eOrjgQP9cRh2R0OORea6rKTud0o8bXpLDiyYtKj8Ms/H7i4o7uw+dZeCY4c6TWMlEU/usGPmcHIjBEv/b3JzY
 T5IPiywX9q+6LudMlGm4b2SI+cxiuzUh/glwcHIx99juSlTlQ80EcewH5vjW92lNplrVDGy8uOJC5w==
Subject: Re: [TUHS] Memory management in Dennis Ritchie's C Compiler
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

On 8/17/2020 3:50 PM, Paul Winalski wrote:
> VAX/VMS had the equivalent of mmap(2) back in 1978.  You can specify a
> range of contiguous pages in virtual memory and associate that with a
> (page-aligned) range of blocks in a file.  The blocks in the file act
> as backing store for the virtual memory.
I, and my boss, took advantage of that while converting his database 
software from TOPS-10 to VMS.

His TOPS-10 implementation used various ways to optimize I/O from/to 
disk. On VMS, our benchmarks showed that as long as we understood the 
paging size, performance was about the same. RP06 vs. I think something 
bigger. Maybe RP07. But even still, it proved the operating system 
virtual memory system was up to the task.

I seem to remember there was a way to sync a page after you wrote it 
just to make sure it was committed to disk. It worked so well that I 
also seem to recall that we used some of that file space as heap.

art k.

