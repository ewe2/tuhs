Return-Path: <tuhs-bounces@minnie.tuhs.org>
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.2
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id b145aa15
	for <ml@inbox.vuxu.org>;
	Sun, 17 Nov 2019 18:13:28 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 2040D9C5F9; Mon, 18 Nov 2019 04:13:27 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id D77889C5DB;
	Mon, 18 Nov 2019 04:12:53 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id EEFD19C5DB; Mon, 18 Nov 2019 04:12:50 +1000 (AEST)
Received: from mail.bitblocks.com (ns1.bitblocks.com [173.228.5.8])
 by minnie.tuhs.org (Postfix) with ESMTP id 5017F9C2EF
 for <tuhs@tuhs.org>; Mon, 18 Nov 2019 04:12:50 +1000 (AEST)
Received: from bitblocks.com (localhost [127.0.0.1])
 by mail.bitblocks.com (Postfix) with ESMTP id AE91A156E80B;
 Sun, 17 Nov 2019 10:12:28 -0800 (PST)
To: Larry McVoy <lm@mcvoy.com>
In-reply-to: Your message of "Sat, 16 Nov 2019 21:50:58 -0800."
 <20191117055058.GB23794@mcvoy.com>
References: <201911112110.xABLAQfW004396@skeeve.com>
 <20191111223129.GB23273@mit.edu>
 <EBCBF73F-3CF2-45F2-B062-42152AA01FC9@ccc.com>
 <CACytpF_OQwG5d_qUWaz5554T0z2_iP=EvxZWvPHJ4q-89Yj0oA@mail.gmail.com>
 <alpine.BSF.2.21.9999.1911171625260.408@aneurin.horsfall.org>
 <20191117055058.GB23794@mcvoy.com>
Comments: In-reply-to Larry McVoy <lm@mcvoy.com>
 message dated "Sat, 16 Nov 2019 21:50:58 -0800."
From: Bakul Shah <bakul@bitblocks.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-ID: <11708.1574014348.1@bitblocks.com>
Date: Sun, 17 Nov 2019 10:12:28 -0800
Message-Id: <20191117181235.AE91A156E80B@mail.bitblocks.com>
Subject: Re: [TUHS] History of m6?
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

On Sat, 16 Nov 2019 21:50:58 -0800 Larry McVoy <lm@mcvoy.com> wrote:
Larry McVoy writes:
> On Sun, Nov 17, 2019 at 04:30:15PM +1100, Dave Horsfall wrote:
> > On Sat, 16 Nov 2019, SPC wrote:
> > 
> > >My first FORTRAN textbook was titled "FORTRAN with WATFOR and WATFIV". It
> > >had a long print run as well.
> > 
> > Now *that* brings back memories (not necessarily pleasant).  WATFOR was as
> > ugly as sin
>
> I'm pretty sure that was the Fortran I learned.  Yeah, it was not C.  But
> it was math.  I spent a bunch of time learning accumulated errors and 
> more time on floating point numbers.  My dad was a theoretical physics
> guy so I did some coding for him.  I respected Fortran for what it could
> do but I developed a hate for floating point.  In my mind, floating
> point numbers meant you couldn't handle the world you were working in.
> It just felt like you could shift the domain you were working in so
> integers could work.  If you couldn't do that, you were admitting that
> you were not accurate.

Many numbers can't be represented perfectly using integers or
rationals (a pair of integers) but can be computed using a
series expansion to arbitrary precision.  I thought FP numbers
were a clever & practical compromise that worked quite well.
David Goldberg's "What every computer scientist should know
about floating-point" is worth reading.
  
  https://www.itu.dk/~sestoft/bachelor/IEEE754_article.pdf

Earlier I remember reading the "Numerical Recipes" books by
Press, Teukolsky, Vetterling & Flannery. IIRC, the original
version used Fortran.  They also had versions using Pascal and
C (I finally bought the C version in '80s though never used it).

Note that Scheme & CL have a full complement of numeric types:
big nums, rationals, reals and complex numbers.  At least some
versions of CL have arbitrary precision FP numbers.

What I really want is a programming language with support for
symbolic manipulation of formulas!
