From: don@DonHopkins.com (Don Hopkins)
Date: Tue, 7 Nov 2017 16:33:59 +0100
Subject: [TUHS] Literal character escapes in v7
In-Reply-To: <b72ba3f2-5f38-6194-4925-b3b9e0caf4b9@gmail.com>
References: <b72ba3f2-5f38-6194-4925-b3b9e0caf4b9@gmail.com>
Message-ID: <B9D2B3E9-B21A-48E8-AC8F-0A4E0AC39FEA@gmail.com>

I have always been a proponent of generalizing /dev/zero such that it supports both block and character mode, and the minor node number specifies the byte you get mapped into memory or read from a file.

So then you could just make a character device /dev/backspace whose minor node number was 8, and /dev/beep whose minor node number was 7! 

-Don

> On 7 Nov 2017, at 05:21, Will Senn <will.senn at gmail.com> wrote:
> 
> I wrote a snippet from my K&R C studies to convert tabs and backspaces to \t \b to display them, the code looks like this:
> 
> /* ex 1-8 */
> 
> main()
> {
>     int c, sf;
> 
>     while((c = getchar()) != EOF) {
>         if(c == '\t')
>             printf("\\t");
>          if(c == '\b')
>             printf("\\b");
>         else
>             putchar(c);
>     }
> }
> 
> I'm not looking for code review, but the code is intended to replace the tabs and backspaces with \t and \b respectively, but I haven't been able to test it because I can't seem to make a backspace character appear in input. In later unices, ^V followed by the backspace would work, but that's not part of v7. Backspace itself is my erase character, so anytime I just type it, it backspaces :).
> 
> Thanks,
> 
> Will
> 
> -- 
> GPG Fingerprint: 68F4 B3BD 1730 555A 4462  7D45 3EAA 5B6D A982 BAAF
> 


