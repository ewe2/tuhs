From: lm@mcvoy.com (Larry McVoy)
Date: Thu, 11 May 2017 15:32:32 -0700
Subject: [TUHS] C declarations.
In-Reply-To: <68E8DC0A-D1B8-4FF0-AD26-ACDC57E308AF@pobox.com>
References: <015401d2caa0$79762650$6c6272f0$@ronnatalie.com>
 <68E8DC0A-D1B8-4FF0-AD26-ACDC57E308AF@pobox.com>
Message-ID: <20170511223232.GM4341@mcvoy.com>

On Fri, May 12, 2017 at 08:03:28AM +1000, David Arnold wrote:
> > On 12 May 2017, at 07:49, Ron Natalie <ron at ronnatalie.com> wrote:
> > 
> > <???>
> > But if we're going to gripe about the evolution of C.   My biggest gripe is when they fixed structs to be real types, they didn't also do so for arrays.
> > Arrays and their  degeneration to poitners is one of the biggest annoyances in C.
> 
> And, conversely (perversely?) one of its greatest joys.

I dunno if it is one of its greatest joys but pointers in C have always 
made sense to me.

I'm curious as to what is busted about arrays in C?  To me they just
seemed like a way to define how to look at a wad of memory and they
seem to work for me.  About the only thing I don't like about them is
that there is no late binding as to the size, Ada has late binding and
I thought it could be useful (I only know because Rob Netzer and I 
wrote an Ada compiler for CS736 at UW-Madison that did a lot of Ada
but exceptions and late binding we did not do).

--lm

