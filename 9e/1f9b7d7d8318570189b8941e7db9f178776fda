From: clemc@ccc.com (Clem Cole)
Date: Mon, 19 Dec 2016 15:59:37 -0500
Subject: [TUHS] Dennis' Draft of the Unix Timesharing System: not so
	draft?
In-Reply-To: <20161219201031.3259D18C0A1@mercury.lcs.mit.edu>
References: <20161219201031.3259D18C0A1@mercury.lcs.mit.edu>
Message-ID: <CAC20D2M93zPXUuh0zvQeK7KpPueKBs1j5fWjvKxD=eFZEehieg@mail.gmail.com>

On Mon, Dec 19, 2016 at 3:10 PM, Noel Chiappa <jnc at mercury.lcs.mit.edu>
wrote:

>
>
> Not really a response to your question, but I'd looked at that
> ​ ​
> 'UnixEditionZero' and was very taken with this line, early on:
>
>   "the most important features of UNIX are its simplicity [and] elegance"
>
> and had been meaning for some time to send in a rant.
>
> The variants of Unix done later by others sure fixed that, didn't they? :-(
>
​One of my favorite comparisons and definitions of "bloat" came when I
discovered years ago that the SVR3 >>boot<< system was larger than the V6
kernel.
​

>
>
> On a related note, great as my respect is for Ken and Doug for their work
> on
> ​ ​
> early Unix (surely the system with the greatest bang/buck ratio ever),

​+1​




> I have
> ​ ​
> to disagree with them about Multics. In particular, if one is going to
> have a
> ​ ​
> system as complex as modern Unices have become, one might as well get the
> ​ ​
> power of Multics for it. Alas, we have the worst of both worlds - the size,
> ​ ​
> _without_ the power.
>
​Mumble -- Other than one important idea (single-level-store as you said),
I'm not so sure.​  I think we ended up with most of what was envisioned,
and some of the SW things (like the "continuation" model and how
dyn-linking ended up working in practice) - I think we are ahead of
Multics.   Winders more than UNIX (IMO) ended up with the complexity and
bloat and most of the bad ideas without the good.  But I think UNIX mostly
was able to stick to what was important (except for the loss of "small is
beautiful" - my rant).  Some of the HW idea moved on - Intel picked up
segments and rings. Look at INTEL*64, we use 2 rings and stopped using
using segments because it too hard to program around them ---  both proved
to be unusable/impractical when they were released.





>
> (Of course, Multics made some mistakes - primarily in thinking that the
> future
> ​ ​
> of computing lay in large, powerful central machines, but other aspects of
> the system - such as the single-level store - clearly were the right
> ​ ​
> direction.

​I agree, and this may yet come back.   It's too bad too many of the
younger engineers have not studied it.  I was recently reviewing some stuff
from a couple of our younger Linux jockeys and they have re-invented
something like it.   I smiled and said -- yes it >>is<< a great idea, but
it has been done.​





> And wouldn't it be nice to have AIM boxes to run our browsers and
> ​ ​
> mail-readers in - so much for malware!)
>
​Indeed.​
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20161219/0a844aac/attachment-0001.html>

