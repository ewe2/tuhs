X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 6283 invoked from network); 13 Jun 2020 21:25:49 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 13 Jun 2020 21:25:49 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 04F5A9C21C; Sun, 14 Jun 2020 07:25:44 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id E2BC69C1C8;
	Sun, 14 Jun 2020 07:24:54 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (1024-bit key; unprotected) header.d=yaccman.com header.i=@yaccman.com header.b="rMu0MnfP";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id B9A6B9C1C8; Sun, 14 Jun 2020 07:24:52 +1000 (AEST)
Received: from egyptian.birch.relay.mailchannels.net
 (egyptian.birch.relay.mailchannels.net [23.83.209.56])
 by minnie.tuhs.org (Postfix) with ESMTPS id 92725945D9
 for <tuhs@tuhs.org>; Sun, 14 Jun 2020 07:24:51 +1000 (AEST)
X-Sender-Id: dreamhost|x-authsender|scj@yaccman.com
Received: from relay.mailchannels.net (localhost [127.0.0.1])
 by relay.mailchannels.net (Postfix) with ESMTP id 32C01540CD4;
 Sat, 13 Jun 2020 21:24:50 +0000 (UTC)
Received: from pdx1-sub0-mail-a96.g.dreamhost.com
 (100-96-21-80.trex.outbound.svc.cluster.local [100.96.21.80])
 (Authenticated sender: dreamhost)
 by relay.mailchannels.net (Postfix) with ESMTPA id 31E47540E0E;
 Sat, 13 Jun 2020 21:24:49 +0000 (UTC)
X-Sender-Id: dreamhost|x-authsender|scj@yaccman.com
Received: from pdx1-sub0-mail-a96.g.dreamhost.com (pop.dreamhost.com
 [64.90.62.162]) (using TLSv1.2 with cipher DHE-RSA-AES256-GCM-SHA384)
 by 0.0.0.0:2500 (trex/5.18.8); Sat, 13 Jun 2020 21:24:50 +0000
X-MC-Relay: Neutral
X-MailChannels-SenderId: dreamhost|x-authsender|scj@yaccman.com
X-MailChannels-Auth-Id: dreamhost
X-Stop-Skirt: 551299c405e6d302_1592083489862_3942123824
X-MC-Loop-Signature: 1592083489861:435246756
X-MC-Ingress-Time: 1592083489861
Received: from pdx1-sub0-mail-a96.g.dreamhost.com (localhost [127.0.0.1])
 by pdx1-sub0-mail-a96.g.dreamhost.com (Postfix) with ESMTP id E072AB170F;
 Sat, 13 Jun 2020 14:24:48 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed; d=yaccman.com; h=
 mime-version:date:from:to:cc:subject:in-reply-to:references
 :message-id:content-type; s=yaccman.com; bh=6yHeMbNYqV3s2NzAgIyD
 P1eJues=; b=rMu0MnfPLzY/crXM8pjUJ/My8DttEq9bZealj1Z5I8IkhRtPK91t
 fwjSGYaMfONy2V+V/uI6UEBBWQPqZXqI1Xi0STNsQIdqgDYwnaCxQePTHjQX7HuU
 /lviyT9sHt3mkWs7Ey+zILMOzEmpe5fEjpzbgqUTmixSNAmMqz9HUn4=
Received: from webmail.dreamhost.com (ip-66-33-200-4.dreamhost.com
 [66.33.200.4]) (Authenticated sender: scj@yaccman.com)
 by pdx1-sub0-mail-a96.g.dreamhost.com (Postfix) with ESMTPA id 11588B191F;
 Sat, 13 Jun 2020 14:24:47 -0700 (PDT)
MIME-Version: 1.0
Date: Sat, 13 Jun 2020 14:24:47 -0700
X-DH-BACKEND: pdx1-sub0-mail-a96
From: scj@yaccman.com
To: Warner Losh <imp@bsdimp.com>
In-Reply-To: <CANCZdfp6KdSuEBhAay005Xc3pvw5oeGzHhyufY_xAfRT+UUE-Q@mail.gmail.com>
References: <CAKzdPgyYUCPDn3KjRgx6Aw_=AD8O2Mdk0WkmPZCH9oN+XkPebg@mail.gmail.com>
 <20200511005745.GL17035@mcvoy.com> <m1jYCHm-0036tPC@more.local>
 <CABH=_VRucqOpJvZVRqhz6Bv-kVe6P-7Hk3SFDuO0XyKZ_=oCBg@mail.gmail.com>
 <CAC20D2NTRE4cK5jewe-Yuo1UVnH6pY2u-wSt8NiG-5hBkzvvzQ@mail.gmail.com>
 <CABH=_VT9dU7kuJSa+iN6zdF7RMpS-hE92DsyeSuMkTmrYGL_9g@mail.gmail.com>
 <357EFE54-BD94-4C10-8C43-C6735BF7D317@via.net>
 <20200511202555.GU17035@mcvoy.com>
 <CABH=_VS8XO8BQA=fMCGTf8u-ubXLKT1tzUJ5ntTXWkjeGk1sSA@mail.gmail.com>
 <alpine.BSF.2.21.9999.2005140930270.18677@aneurin.horsfall.org>
 <20200514173206.GJ20771@mcvoy.com>
 <alpine.DEB.2.20.2005142316170.3374@grey.csi.cam.ac.uk>
 <20200516235308.icuQH%steffen@sdaoden.eu>
 <202005162359.04GNxalN3783011@darkstar.fourwinds.com>
 <E4802BCF-ACA7-449F-84BE-BC758DAA8D63@coraid.com>
 <CANCZdfp6KdSuEBhAay005Xc3pvw5oeGzHhyufY_xAfRT+UUE-Q@mail.gmail.com>
User-Agent: DreamHost Webmail/1.4.1
Message-ID: <50a4ee872b7be9770f96a1c1db10fb86@yaccman.com>
X-Sender: scj@yaccman.com
Content-Type: multipart/alternative;
 boundary="=_06efbf2b8645f302f76af279e28e2743"
X-VR-OUT-STATUS: OK
X-VR-OUT-SCORE: -100
X-VR-OUT-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrgeduhedrudeifedgudeivdcutefuodetggdotefrodftvfcurfhrohhfihhlvgemucggtfgfnhhsuhgsshgtrhhisggvpdfftffgtefojffquffvnecuuegrihhlohhuthemuceftddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmdenucfjughrpeggfffhvffujghffgfkgigtsegrtdhjredtreejnecuhfhrohhmpehstghjseihrggttghmrghnrdgtohhmnecuggftrfgrthhtvghrnhephedtkeegkedvveekfeelffeluefhieduvdffudevtdehhfdtfeduvefhtdeijeejnecuffhomhgrihhnpehrvgdvtgdrohhrghdphhifrggtihdrtghomhenucfkphepieeirdeffedrvddttddrgeenucevlhhushhtvghrufhiiigvpedtnecurfgrrhgrmhepmhhouggvpehsmhhtphdphhgvlhhopeifvggsmhgrihhlrdgurhgvrghmhhhoshhtrdgtohhmpdhinhgvthepieeirdeffedrvddttddrgedprhgvthhurhhnqdhprghthhepshgtjheshigrtggtmhgrnhdrtghomhdpmhgrihhlfhhrohhmpehstghjseihrggttghmrghnrdgtohhmpdhnrhgtphhtthhopehtuhhhshesthhuhhhsrdhorhhg
Subject: Re: [TUHS] v7 K&R C [really lexers]
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--=_06efbf2b8645f302f76af279e28e2743
Content-Transfer-Encoding: 7bit
Content-Type: text/plain; charset=US-ASCII;
 format=flowed

I also gave up on lex for parsing fairly early.   The problem was
reserved words.  These looked like identifiers, but the state machine to
pick out a couple of dozen reserved words out of all identifiers was too
big for the PDP-11.   When I wrote spell, I ran into the same problem. 
I had some rules that wanted to convert plurals to singular forms that
would be found in the dictionary.   Writing a rule to recognize .*ies
and convert the "ies" to "y" blew out the memory after only a handful of
patterns.   My solution was to pick up words and reverse them before
passing them through lex, so I looked for the pattern "sei.*", converted
it to "y" and then reversed the word again.  As it turned out, I only
owned spell for a few weeks because Doug and others grabbed it and ran
with it... 

Steve

---

On 2020-05-16 18:23, Warner Losh wrote:

> On Sat, May 16, 2020, 6:05 PM Brantley Coile <brantley@coraid.com> wrote: 
> 
>> "The asteroid to kill this dinosaur is still in orbit."
>> 
>> --- Plan 9 lex man page
>> 
>> I always hand craft my lexers and use yacc to parse. Most  code on plan 9 does that as well.
> 
> Wow! That is the most awesome thing I've seen in a while.... 
> 
> Warner 
> 
> Brantley 
> 
> On May 16, 2020, at 8:00 PM, Jon Steinhart <jon@fourwinds.com> wrote:
> 
> Steffen Nurpmeso writes:
> Tony Finch wrote in <alpine.DEB.2.20.2005142316170.3374@grey.csi.cam.ac.uk>: |Larry McVoy <lm@mcvoy.com> wrote: |> |> It's got some perl goodness, regexps are part of the syntax, .... | |I got into Unix after perl and I've used it a lot. Back in the 1990s I saw |Henry Spencer's joke that perl was the Swiss Army Chainsaw of Unix, as a |riff on lex being its Swiss Army Knife. I came to appreciate lex |regrettably late: lex makes it remarkably easy to chew through a huge pile |of text and feed the pieces to some library code written in C. I've been |using re2c recently (http://re2c.org/), which is differently weird than |lex, though it still uses YY in all its variable names. It's remarkable |how much newer lexer/parser generators can't escape from the user |interface of lex/yacc. Another YY example: http://www.hwaci.com/sw/lemon/ P.S.: i really hate automated lexers.  I never ever got used to use them.  For learning i once tried to use flex/bison, but i failed really hard.  I like
that blood, sweat and tears thing, and using a lexer seems so shattered, all the pieces.  And i find them really hard to read. If you can deal with them they are surely a relief, especially in rapidly moving syntax situations.  But if i look at settled source code which uses it, for example usr.sbin/ospfd/parse.y, or usr.sbin/smtpd/parse.y, both of OpenBSD, then i feel lost and am happy that i do not need to maintain that code. --steffen 
> Wow, I've had the opposite experience.  I find lex/yacc/flex/bison really
> easy to use.  The issue, which I believe was covered in the early docs,
> is that some languages are not designed with regularity in mind which makes
> for ugly code.  But to be fair, that code is at least as ugly with hand-crafted
> code.
> 
> I believe that the original wisecrack was directed towards FORTRAN.  My ancient
> experience was that it was using lex/yacc for HSPICE was not going to work so I
> had to hand-craft code for that.
> 
> Jon
--=_06efbf2b8645f302f76af279e28e2743
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset=UTF-8

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8" /></head><body style=3D'font-size: 10pt; font-family: Verdana,Gen=
eva,sans-serif'>
<p>I also gave up on lex for parsing fairly early.&nbsp; &nbsp;The problem =
was reserved words.&nbsp; These looked like identifiers, but the state mach=
ine to pick out a couple of dozen reserved words out of all identifiers was=
 too big for the PDP-11.&nbsp; &nbsp;When I wrote spell, I ran into the sam=
e problem.&nbsp; I had some rules that wanted to convert plurals to singula=
r forms that would be found in the dictionary.&nbsp; &nbsp;Writing a rule t=
o recognize .*ies and convert the "ies" to "y" blew out the memory after on=
ly a handful of patterns.&nbsp; &nbsp;My solution was to pick up words and =
reverse them before passing them through lex, so I looked for the pattern "=
sei.*", converted it to "y" and then reversed the word again.&nbsp; As it t=
urned out, I only owned spell for a few weeks because Doug and others grabb=
ed it and ran with it...</p>
<p>Steve</p>
<div id=3D"signature">---<br />
<div class=3D"pre" style=3D"margin: 0; padding: 0; font-family: monospace">=
&nbsp;</div>
</div>
<p><br /></p>
<p id=3D"reply-intro">On 2020-05-16 18:23, Warner Losh wrote:</p>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0">
<div id=3D"replybody1">
<div dir=3D"auto">
<div><br /><br />
<div class=3D"v1gmail_quote">
<div class=3D"v1gmail_attr" dir=3D"ltr">On Sat, May 16, 2020, 6:05 PM Brant=
ley Coile &lt;<a href=3D"mailto:brantley@coraid.com" rel=3D"noreferrer">bra=
ntley@coraid.com</a>&gt; wrote:</div>
<blockquote class=3D"v1gmail_quote" style=3D"margin: 0 0 0 .8ex; border-lef=
t: 1px #ccc solid; padding-left: 1ex;">
<div dir=3D"auto">
<div dir=3D"ltr">
<pre style=3D"margin-left: 2em; font-size: 1.2em; text-align: justify;">"Th=
e asteroid to kill this dinosaur is still in orbit."</pre>
<pre style=3D"margin-left: 2em; font-size: 1.2em; text-align: justify;">   =
 &mdash;- Plan 9 lex man page</pre>
</div>
<div dir=3D"ltr"><br />I always hand craft my lexers and use yacc to parse=
=2E Most &nbsp;code on plan 9 does that as well.&nbsp;</div>
</div>
</blockquote>
</div>
</div>
<div dir=3D"auto">&nbsp;</div>
<div dir=3D"auto">Wow! That is the most awesome thing I've seen in a while=
=2E...</div>
<div dir=3D"auto">&nbsp;</div>
<div dir=3D"auto">Warner</div>
<div dir=3D"auto">&nbsp;</div>
<div dir=3D"auto">&nbsp;</div>
<div dir=3D"auto">
<div class=3D"v1gmail_quote">
<blockquote class=3D"v1gmail_quote" style=3D"margin: 0 0 0 .8ex; border-lef=
t: 1px #ccc solid; padding-left: 1ex;">
<div dir=3D"auto">
<div dir=3D"ltr">&nbsp; Brantley</div>
<div dir=3D"ltr">&nbsp;</div>
<div dir=3D"ltr"><br />
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0">On May 16, 2020, at 8:00 PM, Jon Steinhart &lt;<a href=
=3D"mailto:jon@fourwinds.com" rel=3D"noreferrer">jon@fourwinds.com</a>&gt; =
wrote:<br /><br /></blockquote>
</div>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0">
<div dir=3D"ltr"><span>Steffen Nurpmeso writes:</span><br />
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>Tony Finch wrote in</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>&lt;<a href=3D"mailto:alpine.DEB.2.20.2005142316=
170.3374@grey.csi.cam.ac.uk" rel=3D"noreferrer">alpine.DEB.2.20.20051423161=
70.3374@grey.csi.cam.ac.uk</a>&gt;:</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|Larry McVoy &lt;<a href=3D"mailto:lm@mcvoy.com"=
 rel=3D"noreferrer">lm@mcvoy.com</a>&gt; wrote:</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|&gt;</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|&gt; It's got some perl goodness, regexps are p=
art of the syntax, ....</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|I got into Unix after perl and I've used it a l=
ot. Back in the 1990s I saw</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|Henry Spencer's joke that perl was the Swiss Ar=
my Chainsaw of Unix, as a</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|riff on lex being its Swiss Army Knife. I came =
to appreciate lex</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|regrettably late: lex makes it remarkably easy =
to chew through a huge pile</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|of text and feed the pieces to some library cod=
e written in C. I've been</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|using re2c recently (<a href=3D"http://re2c.org=
/" target=3D"_blank" rel=3D"noopener noreferrer">http://re2c.org/</a>), whi=
ch is differently weird than</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|lex, though it still uses YY in all its variabl=
e names. It's remarkable</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|how much newer lexer/parser generators can't es=
cape from the user</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>|interface of lex/yacc. Another YY example: <a h=
ref=3D"http://www.hwaci.com/sw/lemon/" target=3D"_blank" rel=3D"noopener no=
referrer">http://www.hwaci.com/sw/lemon/</a></span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>P.S.: i really hate automated lexers.&nbsp; I ne=
ver ever got used to</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>use them.&nbsp; For learning i once tried to use=
 flex/bison, but</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>i failed really hard.&nbsp; I like that blood, s=
weat and tears thing,</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>and using a lexer seems so shattered, all the pi=
eces.&nbsp; And i find</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>them really hard to read.</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>If you can deal with them they are surely a reli=
ef, especially in</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>rapidly moving syntax situations.&nbsp; But if i=
 look at settled source</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>code which uses it, for example usr.sbin/ospfd/p=
arse.y, or</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>usr.sbin/smtpd/parse.y, both of OpenBSD, then i =
feel lost and am</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>happy that i do not need to maintain that code=
=2E</span></blockquote>
<blockquote type=3D"cite" style=3D"padding: 0 0.4em; border-left: #1010ff 2=
px solid; margin: 0"><span>--steffen</span></blockquote>
<span></span><br /><span>Wow, I've had the opposite experience.&nbsp; I fin=
d lex/yacc/flex/bison really</span><br /><span>easy to use.&nbsp; The issue=
, which I believe was covered in the early docs,</span><br /><span>is that =
some languages are not designed with regularity in mind which makes</span><=
br /><span>for ugly code.&nbsp; But to be fair, that code is at least as ug=
ly with hand-crafted</span><br /><span>code.</span><br /><span></span><br /=
><span>I believe that the original wisecrack was directed towards FORTRAN=
=2E&nbsp; My ancient</span><br /><span>experience was that it was using lex=
/yacc for HSPICE was not going to work so I</span><br /><span>had to hand-c=
raft code for that.</span><br /><span></span><br /><span>Jon</span></div>
</blockquote>
</div>
</blockquote>
</div>
</div>
</div>
</div>
</blockquote>
</body></html>

--=_06efbf2b8645f302f76af279e28e2743--
