From: tfb@tfeb.org (Tim Bradshaw)
Date: Mon, 15 May 2017 07:46:21 +0100
Subject: [TUHS] C declarations.
In-Reply-To: <20170513231121.0DB3A1274787@macaroni.inf.ed.ac.uk>
References: <20170513231121.0DB3A1274787@macaroni.inf.ed.ac.uk>
Message-ID: <E0BCD6A5-33EC-413A-B590-B1F801D072F5@tfeb.org>

On 14 May 2017, at 00:11, Richard Tobin <richard at inf.ed.ac.uk> wrote:
> 
>  If a subprogram reference causes a dummy argument in the referenced
>  subprogram to become associated with another dummy argument in the
>  referenced subprogram, neither dummy argument may become defined
>  during execution of that subprogram.

I think the purpose of that is to allow compilers to assume that if you pass two array arguments (say) to a routine then they are really different chunks of memory, so it can optimize things (ie it does not need to worry about the various hazards that happen if they are secretly the same memory).

