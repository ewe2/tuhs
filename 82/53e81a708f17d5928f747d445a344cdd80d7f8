From: acahalan@gmail.com (Albert Cahalan)
Date: Sat, 12 Nov 2005 01:13:47 -0500
Subject: [TUHS] Redoing "V6on286" or porting V7...?
In-Reply-To: <849b04683754b84f7e42810d761db3bd@coraid.com>
References: <Pine.LNX.4.62.0511091221220.6113@static-141-149-129-16.buff.east.verizon.net>
	<849b04683754b84f7e42810d761db3bd@coraid.com>
Message-ID: <787b0d920511112213q7156614cv2fe3c5d00852f45c@mail.gmail.com>

On 11/9/05, Brantley Coile <brantley at coraid.com> wrote:
> my suggestions are as follows (i assume you really mean 8086 mode):

That wouldn't be a good match. I believe you want this:

* 16-bit
* protected mode
* no paging
* 8 or 16 segments
* 128 kB of the memory
* no FPU

> using a floppy to boot is a great idea.  i've written several boot
> straps to boot from the floppy that configure the serial port, and put
> the processor in 32-bit mode.  it's tight, but not too hard.  you have
> a great advantage in that you're going to stick to 16 bit so you can
> use the bios.  512 bytes in that case is tons of space.

512 is easy until you try to handle more than one machine. :-(

> next you'll need to write device drivers for the screen/keyboard, the
> clock, and the floppy.  later you can write an ATA driver and get a
> mbr and hard disk boot strap.

I think you need a 4 MB disk and a 10 MB disk. :-)

> if you want to do a 32-bit version, then things are a little
> different.  but this should give you the v6 in about as little
> work as can be.

You might use a 32-bit CPU in 16-bit mode. Then you could use
a 32-bit limit on the FS or GS segment for easier physical memory
access from the kernel. (use an opcode prefix as needed)


