From: krewat@kilonet.net (Arthur Krewat)
Date: Sat, 9 Sep 2017 09:59:51 -0400
Subject: [TUHS] File-as-record
In-Reply-To: <1504921836.59b348ec60d1f@www.paradise.net.nz>
References: <alpine.BSF.2.21.1709090646420.48526@aneurin.horsfall.org>
 <20170908210450.C0FA618C08E@mercury.lcs.mit.edu>
 <20170908210927.GB24413@DD0DDC435AC34EA8A55ABC3A9753F2FB>
 <1504919790.59b340ee1620c@www.paradise.net.nz>
 <20170909013034.GA42338@eureka.lemis.com>
 <1504921836.59b348ec60d1f@www.paradise.net.nz>
Message-ID: <74765943-d615-6d81-cf1b-78462b01bc5e@kilonet.net>

Not sure I quite get this "file as record" thing.

On TOPS-10, you create a file, edit a file, you don't have to allocate 
space for it before you use it.

Sure, it's made up of "blocks" - and writing to the file requires you to 
do it in blocks. But allocating those blocks was done on as the fly as 
you wrote to it.

Also, the first thing I did was to make my own routines that would allow 
the program to read/write in random-size chunks, blocking as it needs to.

Is the distrinction that the operating system (libraries) allowed you to 
read/write random size chunks? If so, the underlying structure of a UNIX 
filesystem still required block I/O. It was just hidden from the 
programmer.

But for peak performance, you still needed to do things in big enough 
chunks (blocks).

If I had known that random-size chunk read/writes were a "thing" I would 
have added it to the TOPS-10 monitor sources and submitted it back to DEC :)

AAK

PS: First TOPS-10 monitor was 1964

