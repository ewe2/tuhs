From: clemc@ccc.com (Clem Cole)
Date: Thu, 29 Mar 2018 20:40:36 -0400
Subject: [TUHS] shared objects in Unix
In-Reply-To: <CABH=_VQvhHKemfOOvVFSu9K+Go1LB5e2Ck214KdLJvtE--z8Hg@mail.gmail.com>
References: <CABH=_VQvhHKemfOOvVFSu9K+Go1LB5e2Ck214KdLJvtE--z8Hg@mail.gmail.com>
Message-ID: <CAC20D2O8iAMhmywzywVkAZqzcHELH5fDLsc+HtwArh2Ft=yoPA@mail.gmail.com>

On Thu, Mar 29, 2018 at 5:37 PM, Paul Winalski <paul.winalski at gmail.com>
wrote:

> Also, when was symbol preemption invented?  Traditional shared library
> designs such as in IBM System/370, VMS, and Windows NT doesn't have
> it.  As one who worked on optimizations in compilers, I came to hate
> symbol preemption because it prohibits many useful optimizations.  ELF
> does provide a way to turn it off, but it's on by default--you have to
> explicitly declare symbols as protected or hidden via source language
> pragmas to get rid of it.


​Unless it came from a place like Sun or Sun where Larry or Charlie might
remember, I suspect that Steve Johnson is probably best to answer this part
of your question -- assuming that it was created during his time in the
compiler team in Summit.

But, I don't remember when it came on to the scene frankly because it did
not effect me.   I think it might have been in the original COFF which came
from those days, but its possible its from one of the many bastardization
of COFF that occurred after its birth.    I don't remember it being in any
of the a.out flavors and I don't think macho has it.

As an OS guy, all I remember about it frankly is you and some the compiler
folks b*tching about it as a misfeature of UNIX at lunch ;-)

​
ᐧ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20180329/caefc951/attachment.html>

