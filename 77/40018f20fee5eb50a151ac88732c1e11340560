From: ron@ronnatalie.com (Ron Natalie)
Date: Tue, 8 May 2018 20:25:08 -0400
Subject: [TUHS] (early parallel/concurrent computing) (was: unix
	"awesome list")
In-Reply-To: <FAED01BC-5B5D-4EB7-8195-2D13F3460E51@orthanc.ca>
References: <146d3e969e94918e80c3d7dae01f0a839968e6bb@webmail.yaccman.com>
 <FAED01BC-5B5D-4EB7-8195-2D13F3460E51@orthanc.ca>
Message-ID: <016301d3e72c$2fae3680$8f0aa380$@ronnatalie.com>

BRL had contracted with the Denver Electronics Corporation (Denelcor) to
build a fluid dynamic platform.   Early plans were for an analog and then
hybrid computer, but this quickly evolved into the all-digital Heterogenous
Element Procesor.   The computer was MIMD and could run 40 or so threads
simultaneously while hardware scheduling 256 times that.   Each memory
location in the main memory had a "full-empty" bit which allowed you to to
execute instructions like "Wait until Full, then Store", and the processor
handled all that.

Of course, this was about the time Mike Muuss and his band were becoming
real firecrackers in the labs.    Mike shot his mouth off  that we could put
UNIX on it (our answer to everything) and the lab management took us up on
the offer.    Perhaps, with the exception of some of the MultibusII stuff,
one of the nicest UNIX architectures around.

Mike immediately set to work.   He did the C compiler while Doug Kingson did
the assembler.   I did the loader I think.   We then started on the kernel.
Mike doing the low level stuff and the guts of the kernel and me doing all
the IO (the "dmr" directory traditionally).      About the time we got the
thing running I realized that the IO performance was terrible.    The thing
had a sidecar unit with 32 distinct unibuses which  really should have been
fast enough, except the latency to start the I/Os was about ten ops/sec.
Me and the HEP designer, Burton Smith sat down at the Golden Corral
steakhouse in Aberdeen and designed a new processor that sat on the main
memory bus.   It was built out of spare HEP parts and a PDP-11/34 that I had
lying around as the control processer.   I through in the LOS operating
system (No time for sharing -- Uniprocessor system) scavenged from my BRL
Gateway code to drive it.   In two days we had drastically increased the IO
performance.

The thing ran parallizable apps, notably Mike's BRL ray tracing "CAD"
package.    We pretty much used it to generate a movie of a shell's eye view
of a collision with a tank.   The system was replaced with a Cray XMP.

Amusingly in our machine room, awaiting arrival of the HEP were taped out
markings where all the cabinets went around a central building pillar.
Visiting the machine in the factor, it was laid out around a taped marking
showing the location of our post.

-Ron



