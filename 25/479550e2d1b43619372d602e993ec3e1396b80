X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 4354 invoked from network); 25 Jan 2021 17:25:49 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 25 Jan 2021 17:25:49 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 146599C78E; Tue, 26 Jan 2021 03:25:48 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 724039C6AF;
	Tue, 26 Jan 2021 03:25:34 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 857BB9C6AF; Tue, 26 Jan 2021 03:25:32 +1000 (AEST)
Received: from mcvoy.com (mcvoy.com [192.169.23.250])
 by minnie.tuhs.org (Postfix) with ESMTPS id E9E489C5FD
 for <tuhs@minnie.tuhs.org>; Tue, 26 Jan 2021 03:25:31 +1000 (AEST)
Received: by mcvoy.com (Postfix, from userid 3546)
 id 5D94035E2E1; Mon, 25 Jan 2021 09:25:31 -0800 (PST)
Date: Mon, 25 Jan 2021 09:25:31 -0800
From: Larry McVoy <lm@mcvoy.com>
To: Dan Cross <crossd@gmail.com>
Message-ID: <20210125172531.GP32503@mcvoy.com>
References: <20210124212525.GJ21030@mcvoy.com>
 <CAEoi9W5=toe-bb+6-zC0odkx4_C4X4FZpK4+ZJTAqCKGOCXP7w@mail.gmail.com>
 <202101242333.10ONXjcI974038@darkstar.fourwinds.com>
 <fc52a1a1-2136-ae39-110c-93a38e73ff94@bitsavers.org>
 <202101250021.10P0L3Z2976588@darkstar.fourwinds.com>
 <CAC20D2OhTW+eebyub7dVMBGZy1zoOja=ojGB_=TOjgB0wEJdHQ@mail.gmail.com>
 <6557f782-ecb1-6476-1eda-e23f30f9bbea@bitsavers.org>
 <CAFH29to9GaKVxUXw8uwbeMAcF6izD=8gqhqROzCOSEA5xOA5aQ@mail.gmail.com>
 <20210125160430.GR21030@mcvoy.com>
 <CAEoi9W4TMh=SSrk=pqprark7+ctvZLsbW8h00pf31KbtUAy_CQ@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAEoi9W4TMh=SSrk=pqprark7+ctvZLsbW8h00pf31KbtUAy_CQ@mail.gmail.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Subject: Re: [TUHS] tangential unix question: whatever happened to NeWS?
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

On Mon, Jan 25, 2021 at 11:37:25AM -0500, Dan Cross wrote:
> On Mon, Jan 25, 2021 at 11:05 AM Larry McVoy <lm@mcvoy.com> wrote:
> > On Mon, Jan 25, 2021 at 10:55:34AM -0500, Richard Salz wrote:
> > > Osterhout's Tk was beyond amazing.
> >
> > Still is, really.  So far as I know, nobody has come up with anything
> > better.
> 
> The Inferno operating system that was essentially a commercialization of
> plan9, implemented Tk with the Limbo programming language (which in many
> ways is perhaps the most direct ancestor of Go). That was neat to play
> with. Too bad it didn't have a lot of success.

We did something similar, I hated Tcl so much I paid a friend to make
a compiler for a very C like language that compiled to Tcl byte codes.
It's really what I'd like to see C evolve to:

http://little-lang.org

> > It had no XDR because it was "reader makes it right" and datatypes
> > > were tagged.
> >
> > That's the first I've heard of that and I really like it.  Most of the
> > time, you are on a network of machines that are the same, so why have
> > a network byte order, reader makes it right will just work.  Neat.
> 
> I guess I don't quite understand that. I can get how it works for simple
> data types (integers, floating point numbers, perhaps strings) but it seems
> like it breaks down pretty quickly for anything with a more complex
> representation (structures with multiple members, for instance; how does
> one deal with padding, etc?). 

Yeah, good points and I suppose that is why Sun did network byte order.
It's still appealing to have reader make right if you can do it, though
with todays out of order CPUs providing a pretty high instructions
per cycle maybe it just doesn't matter.  There is a paper waiting to
be written.

--lm
