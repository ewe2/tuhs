From: clemc@ccc.com (Clem Cole)
Date: Mon, 2 Jun 2014 09:28:58 -0400
Subject: [TUHS] Gnu/Stallman (was Bugs in V6 'dcheck')
In-Reply-To: <FBA977D9-C128-4321-8671-2799EAF06715@ronnatalie.com>
References: <201406020209.s5229Q5o006174@stowe.cs.dartmouth.edu>
 <CAC20D2M3KuBcVGgD6rE-u0JLuQQ=J374DFiqK4kBgOdh3xcSwQ@mail.gmail.com>
 <FBA977D9-C128-4321-8671-2799EAF06715@ronnatalie.com>
Message-ID: <CAC20D2NCJU83yEnxA_FDvTMnhU34mhf+c1fDwrXB5fRXtx3npg@mail.gmail.com>

On Mon, Jun 2, 2014 at 8:27 AM, Ronald Natalie <ron at ronnatalie.com> wrote:

> Well PCC wasn't bad (we used it to build the compilers for the HEP
> Supercomputer), but you are correct GCC was reasonably good.


​Ron you are right..   A number of us used dmr's compiler much less Steve's
compiler to "port UNIX" to a lot of different things (some where good and
some not so good - my own attempt at retargeting the V7 Rtichie compiler to
yet to be name processed experimental process from Moto (later called the
68000) proved "good enough" for the Magnolia project at Tek but it was not
really not a very good compiler).  But you had to have an AT&T license to
get it.   Admittedly a lot of universities did and that did certainly cause
C to get a huge foot hold over its contemporaries (say BCPL, BLISS and
maybe PL/360).

IMHO: what rms did was put a production quality compiler into play that had
sources, that anyone could use and anyone could hack on without having to
purchase it or need some sort of license other than his GPL.  At the time,
there had been lots of attempts at different compilers both "free" and
commercial - some with sources some not (I fondly remember Ron Cain's Small
C for the 8080 being pushed in Byte Magazine the late 1970s/early 1980)​.
Even Whitesmith's (Plauger's) compiler  was really not what would we have
called production code quality.

gcc was not (still is not) perfect and compared to a number of commercial
compilers -- say something like the current Intel compiler or the old DEC,
Masscomp or Sun compilers.   But the "gcc family" did prove to be fairly
easy move to a lot of UNIX/UNIX-like and non-UNIX OS platforms, at the same
time able to be retarget to a number of different ISAs, even a number of
different front ends; all while generally creating good/reasonable if not
darned good/close to optimal code (at least for many of the targets were
the most popular/that mattered).

Frankly, we have seen few developer suites that have been as lasting and I
might suggest that until the LLVM project there has been few (none) that
have had a chance of being so [Tannebaum's compiler kit maybe - but I never
same that it never really went anywhere].

My observation is that without a "pretty good" compiler that was reasonably
"universal" the rest of the command suite would have languished/not
happened.   As Doug points out the base OS really never happened from rms
(they had Trix, then the Hurd and finally defaulted to Linux).   But the
command suite was able to grow and lots of people besides rms contribute to
it, because the basic development tools were there.   As strange and
difficult a person he is, I suspect we do all own rms a certain level of
thanks for the basic dev tools.

Clem
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20140602/5178fdff/attachment.html>

