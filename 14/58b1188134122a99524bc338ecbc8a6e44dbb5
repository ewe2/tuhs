Return-Path: <tuhs-bounces@minnie.tuhs.org>
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.2
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id fff842bc
	for <ml@inbox.vuxu.org>;
	Sun, 3 Feb 2019 21:18:01 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 369079B8A3; Mon,  4 Feb 2019 07:18:00 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 4BBFE9B894;
	Mon,  4 Feb 2019 07:17:37 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id C8F659B894; Mon,  4 Feb 2019 07:17:34 +1000 (AEST)
Received: from mcvoy.com (mcvoy.com [192.169.23.250])
 by minnie.tuhs.org (Postfix) with ESMTPS id 157CA9B892
 for <tuhs@tuhs.org>; Mon,  4 Feb 2019 07:17:34 +1000 (AEST)
Received: by mcvoy.com (Postfix, from userid 3546)
 id BBBA535E130; Sun,  3 Feb 2019 13:17:33 -0800 (PST)
Date: Sun, 3 Feb 2019 13:17:33 -0800
From: Larry McVoy <lm@mcvoy.com>
To: Clem Cole <clemc@ccc.com>
Message-ID: <20190203211733.GO6420@mcvoy.com>
References: <CAC20D2PQV7T4-LfdOhTjfW0Wraf8iK7=-agdZHfAXxyz9wbTkA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAC20D2PQV7T4-LfdOhTjfW0Wraf8iK7=-agdZHfAXxyz9wbTkA@mail.gmail.com>
User-Agent: Mutt/1.5.24 (2015-08-30)
Subject: Re: [TUHS] Commercial UNIX was other stuff before
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

On Sun, Feb 03, 2019 at 03:58:39PM -0500, Clem Cole wrote:
> On Sun, Feb 3, 2019 at 2:59 PM C??g <ca6c@bitmessage.ch> wrote:
> 
> > [Hockey Pucks and AIX are alive, Wikipedia says.
> > The problem could be that neither support amd64 and/or
> 
>  Be careful.  The history of proprietary commercial UNIX implementations is
> that they were developed by HW manufacturers that had proprietary ISAs.  So
> that fact that UX was Itanium and AIX was Power (or Tru64 in its day was
> Alpha) should not be surprising.  It was the way the market developed. Each
> vendor sold a unique ecosystem and tried very hard to keep you in it.
> Portability was designed as an >>import<< idea, and they tried to keep you
> from exporting by getting you to use 'value add.'

Not on Sun's.  I personally wrote lint libraries for other OS's, BSD,
strict POSIX, System V, etc.  Had a huge fight with Gingell to get
them included in SunOS 4.something (he didn't want to give up 40KB
of extra files in the install; I threatened to quit if they didn't
go in - I won).

My theory was Sun was the most liked development platform, I wanted
to keep that going.  The idea was make it so you could develop for 
any major target on Suns.  Yeah, I wanted the devs to be on Suns but
be able to deploy on whatever you had to. 

> Linux running on VMs.  But a huge issue was code reuse.   To reuse, Henry's
> great line about BSD, Linux is just like Unix; only different.

That's because people are sloppy and don't code to a standard.  If you
look through the BitKeeper code you'll find our own libc that is portable
across pretty much every major commercial Unix, Linux (at one point on
Alpha, PPC, MIPS, SPARC, x86, x86-64, even whatever the IBM mainframe
Unix), BSD, MacOS and Windows.

The hardest part was fork(2), we didn't figure out a way to emulate that
so we redid windows spawn() style on Unix.  I have typed out 

	switch (pid = fork()) {
		...
	}

in decades.

Yeah, we have a few #ifdefs but the libc interface our code uses is 
quite clean and portable.

So it is possible to have code that runs everywhere but you have to
get disciplined about it.

Other than those quibbles, I agree with Clem.
