X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=5.0 tests=DKIM_SIGNED,DKIM_VALID,
	DKIM_VALID_AU,HTML_MESSAGE,MAILING_LIST_MULTI autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 13169 invoked from network); 29 Dec 2021 17:39:32 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 29 Dec 2021 17:39:32 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id F36729CFF5; Thu, 30 Dec 2021 03:39:30 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id E84269CED2;
	Thu, 30 Dec 2021 03:39:14 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=pass (1024-bit key; unprotected) header.d=ccc.com header.i=@ccc.com header.b="YpAJUknh";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 233AD9CED2; Thu, 30 Dec 2021 03:39:13 +1000 (AEST)
Received: from mail-qk1-f173.google.com (mail-qk1-f173.google.com
 [209.85.222.173])
 by minnie.tuhs.org (Postfix) with ESMTPS id 9EBF09CEA9
 for <tuhs@minnie.tuhs.org>; Thu, 30 Dec 2021 03:39:12 +1000 (AEST)
Received: by mail-qk1-f173.google.com with SMTP id t66so9072257qkb.4
 for <tuhs@minnie.tuhs.org>; Wed, 29 Dec 2021 09:39:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ccc.com; s=google;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=+OSID4qgnlK0a9POBNKHgUEbVnkFWQ9InrjwVATMHTM=;
 b=YpAJUknhRcfHU1nF3Tr6iG1KevNxiNlBISziUaZGxdOcAOv8fxMpN6guMhnrWec8Xw
 LwLRLPzTXAz2uUaF09crtD/RIx/imt24e8zliA4e5XFPU5UghhcVHscVdg9YhDHzmvo0
 sLzbRkWKdyCj20Gg1nUJz1EPQtsWCSEpFdT7g=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=+OSID4qgnlK0a9POBNKHgUEbVnkFWQ9InrjwVATMHTM=;
 b=mhqUF0rVVjvi6Xwf9bWg6Lp7pUe6lETvTdWQLYl+zqCm+IRIrC8h2hViytGGoPANDO
 LNvN351cs/eZNsyiDwtkkjTMtIZSjkxH0e7XQ4TZ6fIk6lrqMJwKd5AZqFTzMNCfGN3d
 CgH6yZEZ/qzFqzBiiM3i+az+/Bhfxt+xu2siKkYrsSALBEMAvaMXJWMBjDlK4YCNPM3n
 R0/GwdTEAT2l/pfFFfoApsZNUQlDdGp3dc55vgUJgACJEA1So9swJnlIYIuLo4Kw0EdB
 ZkgkVIHXLwNUKyltItP2mW9YgjaY8m/zI5fOuqtEP9ipLAJj8H0VMN6K0+BjbXgBLS/q
 GqVA==
X-Gm-Message-State: AOAM531YKSbUiNXdLvK0DxDGIuonioNt3/F9k3JnAHc1Q7UwiIlgNtIN
 zoj26rtttIjbNeUqttwiVW952Z/hXGEUY1Y3Rb8liNRUcgGzZg==
X-Google-Smtp-Source: ABdhPJwfq+OrB7bP+FjDEECvrbVW8tvD/Wvasv0rlV82WcwucUCOyOcYx3uKkk4Y7I3si7DIDNf+mxO1sZ2HzwnR7bU=
X-Received: by 2002:a05:620a:25d2:: with SMTP id
 y18mr19157928qko.442.1640799551588; 
 Wed, 29 Dec 2021 09:39:11 -0800 (PST)
MIME-Version: 1.0
References: <A26707C7-C43E-4A52-9405-B442C9412989@iitbombay.org>
 <202112291714.1BTHEiXo008223@freefriends.org>
In-Reply-To: <202112291714.1BTHEiXo008223@freefriends.org>
From: Clem Cole <clemc@ccc.com>
Date: Wed, 29 Dec 2021 12:38:45 -0500
Message-ID: <CAC20D2M-sHyxw4Zgsvi+71kPpHi=3ZarLU9v4KPu45ZRAJRfJw@mail.gmail.com>
To: arnold@skeeve.com
Content-Type: multipart/alternative; boundary="0000000000006ba22905d44c6aef"
Subject: Re: [TUHS] moving directories in svr2
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: bakul@iitbombay.org, tuhs@minnie.tuhs.org
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--0000000000006ba22905d44c6aef
Content-Type: text/plain; charset="UTF-8"

At the risk of kicking a dead horse too much ...

On Wed, Dec 29, 2021 at 12:14 PM <arnold@skeeve.com> wrote:

> Plan 9 eventually did something like this. I don't remember the details.
>
Arnold - point taken but ... unfortunately, I think that the comparison is
a little difficult because Plan9's concepts of namespaces is a tad
different than UNIX's.  But I'll let Rob or Ken comment as they lived and
developed both systems.

FWIW: An object store is something that retains information after the
processes that operates on it complete -* i.e. *its a *static entity*.
Links were (are) also a static concept.   Late binding to names (like
symlinks) are a dynamic (runtime idea).  Bakul points out that by using the
per process u area, the dynamic context can be retained.  The observation
is that .. (like symlinks) tend to be a runtime (dynamic) notion, although
I'm not sure how you keep consistency in the static FS if you don't store
the link in the inode.  As someone that did, I suggest - try writing fsck
if you are using dynamic content.   How do you know?  I'd still claim it is
the same issue.

Anyway, I suppose that like context sensitive symlinks (which I sorely
miss), you could do this and keep a list of the N inodes for the N parents
and then like CDSL's keep the one you used to get there in the u area so
that .. picks the proper one on the way out and you can still have the
static notion which something like fsck can check off line.

--0000000000006ba22905d44c6aef
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><div class=3D"gmail_default" style=3D"fon=
t-family:arial,helvetica,sans-serif"><font color=3D"#0000ff">At the risk of=
 kicking a dead horse too much ...<br></font></div></div><font color=3D"#00=
00ff"><br></font><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail=
_attr"><font color=3D"#ff0000">On Wed, Dec 29, 2021 at 12:14 PM &lt;<a href=
=3D"mailto:arnold@skeeve.com" target=3D"_blank">arnold@skeeve.com</a>&gt; w=
rote:<br></font></div><blockquote class=3D"gmail_quote" style=3D"margin:0px=
 0px 0px 0.8ex;border-left-width:1px;border-left-style:solid;border-left-co=
lor:rgb(204,204,204);padding-left:1ex"><font color=3D"#ff0000">Plan 9 event=
ually did something like this. I don&#39;t remember the<span class=3D"gmail=
_default" style=3D"font-family:arial,helvetica,sans-serif"> </span>details.=
</font><br></blockquote><div class=3D"gmail_default" style=3D"font-family:a=
rial,helvetica,sans-serif"><font color=3D"#0000ff">Arnold - point taken but=
 ...=C2=A0</font><span style=3D"color:rgb(0,0,255)">unfortunately, I think =
that the comparison is a little difficult because Plan9&#39;s concepts of n=
amespaces is a tad different than UNIX&#39;s.=C2=A0 But I&#39;ll let Rob or=
 Ken comment as they lived and developed both systems.</span></div><div cla=
ss=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif"><font=
 color=3D"#0000ff"><br></font></div><div class=3D"gmail_default" style=3D"f=
ont-family:arial,helvetica,sans-serif"><font color=3D"#0000ff">FWIW: An obj=
ect store is something that retains information after the processes that op=
erates on it complete -<i> i.e. </i>its a <b>static entity</b>.=C2=A0 Links=
 were (are) also a static concept. =C2=A0 Late binding to names (like symli=
nks) are a dynamic (runtime idea).=C2=A0 Bakul points out that by using the=
 per process u area, the dynamic context can be retained.=C2=A0 The observa=
tion is that .. (like symlinks) tend to be a runtime (dynamic) notion, alth=
ough I&#39;m not sure how you keep consistency=C2=A0in the static FS if you=
 don&#39;t store the link in the inode.=C2=A0 As someone that did, I sugges=
t - try writing fsck if you are using dynamic content. =C2=A0 How do you kn=
ow?=C2=A0 I&#39;d still claim it is the same issue.</font></div><div class=
=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif"><font c=
olor=3D"#0000ff"><br></font></div><div class=3D"gmail_default" style=3D"fon=
t-family:arial,helvetica,sans-serif"><font color=3D"#0000ff">Anyway, I supp=
ose that like context sensitive=C2=A0symlinks (which I sorely miss), you co=
uld do this and keep a list of the N inodes for the N parents and then like=
 CDSL&#39;s=C2=A0keep the one you used to get there in the u area so that .=
. picks the proper one on the way out and you can still have the static not=
ion which something like fsck can check off line.</font></div></div></div>

--0000000000006ba22905d44c6aef--
