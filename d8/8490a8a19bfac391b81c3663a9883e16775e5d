From: lars at nocrew.org (Lars Brinkhoff)
Date: Thu, 26 Nov 2020 19:02:22 +0000
Subject: [TUHS] Seeking wisdom from Unix Greybeards
In-Reply-To: <7DBB40AE-259D-494E-8ABF-2FE4D47F4052@iitbombay.org> (Bakul
 Shah's message of "Thu, 26 Nov 2020 10:50:23 -0800")
References: <20201126183746.DD93218C087@mercury.lcs.mit.edu>
 <7DBB40AE-259D-494E-8ABF-2FE4D47F4052@iitbombay.org>
Message-ID: <7wr1ogdjr5.fsf@junk.nocrew.org>

Noel Chiappa wrote:
> If the latter, there's the terminal-independent support of video
> terminals in ITS; that dates to the mid-1970's (i.e. circa V5 or
> so). User programs output device-independent display control codes (I
> have this memory that they were called P-Codes, but that could be my
> memory failing), and the OS translated them to the appropriate
> screen-control characters.

That's correct.  Or ^P-codes, from the character that signalled a
control code.  It would be interesting to figure out when they were
introduced.  They were not present in 1972; at this point ITS only
supported printing terminals, Datapoints, and Imlacs.

WAITS allegedly had an even better abstration of terminal control codes.

> One additional hack was that the number of terminal types supported in
> the OS was limited; there was however a protocol called SUPDUP which
> sent (basically) those device-independent codes over a remote login

Basically, but another set of equivalent codes internal to ITS.  SUPDUP
means super-duper image mode, which alludes to image mode.

> (originally over NCP) frm the server machine to the client. The User
> SUPDUP client supported a lot more terminal types; so people with
> odd-ball terminals used to log in, SUPDUP _back_ to their machine, and
> away they went.

See also CRTSTY.

