X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_ADSP_CUSTOM_MED,
	DKIM_INVALID,DKIM_SIGNED,FREEMAIL_FROM,HTML_MESSAGE,MAILING_LIST_MULTI
	autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 19171 invoked from network); 31 Dec 2021 03:23:53 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 31 Dec 2021 03:23:53 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id CC05B9D039; Fri, 31 Dec 2021 13:23:50 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 37B779D006;
	Fri, 31 Dec 2021 13:23:31 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=gmail.com header.i=@gmail.com header.b="ChTHXKoS";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id D128E9D006; Fri, 31 Dec 2021 13:23:28 +1000 (AEST)
Received: from mail-pl1-f180.google.com (mail-pl1-f180.google.com
 [209.85.214.180])
 by minnie.tuhs.org (Postfix) with ESMTPS id D6EF09D002
 for <tuhs@minnie.tuhs.org>; Fri, 31 Dec 2021 13:23:27 +1000 (AEST)
Received: by mail-pl1-f180.google.com with SMTP id c3so6221528pls.5
 for <tuhs@minnie.tuhs.org>; Thu, 30 Dec 2021 19:23:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=nXYPQBIqAPXW7wUHmGrLCd0Qq/QBiat97vlAExFF1pE=;
 b=ChTHXKoS4/0XLQ7ZPi6A6tLQdR4dmqaM6wytUdj8qvCpZuVAUOsaj15oiLyRDDTglF
 hnDstSGkeDdfo0CIyj24D5q7twB4Q3bPXzTCmToKbcu/+xr+sNGUhREbiZ8f977tnHQ9
 msa+o/CujqN8HXKzFcCoBLJ13btmK2K36e/SW7f2HVzOSWLc8KpCi/pOwRhBkTbERTX5
 4veuq7wMYHpDy8ZULRYbnKkr9EK5dv1jdK8RQXwIAV8LCXi2NyeoieMj1R015MAgdT5Y
 L7s3Kp6x/wabWUl18Z52n3kP7Th4iWnODoElAiJvOim0Hcce4j8wyrYw0kTIwle6Di7m
 E6dg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=nXYPQBIqAPXW7wUHmGrLCd0Qq/QBiat97vlAExFF1pE=;
 b=ZjWqwDCxPqI/IY5e4Zqc3gGQAB4FvGkxcdMsJNHaky38kElJ2w0YsuxAF+rzZbe0X1
 yV4led2mXQXA0pSLU8kT0YcWCILy21+ILKV6Impm5UbYNRLztAH89XXROxSjW8kMXi/I
 4jV/U6sllX30I8E140uL0E5JTnaFBMxww/BAvODgX+B9xmCET4Yk8R9120KnGoLmLu89
 OkE4HgPSUsgl7xyYWhb36qEtBk4TLi1MNG78x3glEpu0cDJQopzc1IjxdC8xzOuSHhyy
 8kGTKrWORgnvRRNkANdGR1spLf+8WUuhNlBNgWYiTa/qQRA/bUsP84J6s4LdwHm8J0j4
 wG/A==
X-Gm-Message-State: AOAM533tXSskos5Wz21zsvxfbwai9aCQK4WChnWpSP3yeux3XHRIrBHB
 BejJ4OAj9f0IP+jv0ej0Q97jdMQJKkYnoPYrlwc=
X-Google-Smtp-Source: ABdhPJxD+G1ObPnL73X2E6ZPP4SCCckUlbNCaXEayst1YSgEsmyy5T+2SLFcZayp/C5R519OIikqSPfaO0vf8CwTFuI=
X-Received: by 2002:a17:902:d4c1:b0:148:a3f4:1ec6 with SMTP id
 o1-20020a170902d4c100b00148a3f41ec6mr33690694plg.32.1640921007178; Thu, 30
 Dec 2021 19:23:27 -0800 (PST)
MIME-Version: 1.0
References: <20211230034512.B9B3718C08E@mercury.lcs.mit.edu>
 <Yc3g/+i9BQBK/5qO@mit.edu>
 <CAEoi9W6NM9pKwLukQdF_bo9enGV0-Mjp7m_bqy+nt1E8Oxssmg@mail.gmail.com>
 <Yc50LSUs7B790YFG@mit.edu>
In-Reply-To: <Yc50LSUs7B790YFG@mit.edu>
From: Rob Pike <robpike@gmail.com>
Date: Fri, 31 Dec 2021 14:23:15 +1100
Message-ID: <CAKzdPgzOBKEaMdCGxKirP4cxSDeBZrU6VO78JFpxf05vi-5_AQ@mail.gmail.com>
To: "Theodore Ts'o" <tytso@mit.edu>
Content-Type: multipart/alternative; boundary="000000000000bcc81805d468b15c"
Subject: Re: [TUHS] moving directories in svr2
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: TUHS main list <tuhs@minnie.tuhs.org>,
 Noel Chiappa <jnc@mercury.lcs.mit.edu>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--000000000000bcc81805d468b15c
Content-Type: text/plain; charset="UTF-8"

In broad strokes, that's exactly what we did in Plan 9, with great results,
as was said here a while back. The paper ended with a plea to do the same
to Unix, which I think is quite doable.

https://9p.io/sys/doc/lexnames.html

-rob


On Fri, Dec 31, 2021 at 2:09 PM Theodore Ts'o <tytso@mit.edu> wrote:

> On Thu, Dec 30, 2021 at 05:31:09PM -0500, Dan Cross wrote:
> > On Thu, Dec 30, 2021 at 11:41 AM Theodore Ts'o <tytso@mit.edu> wrote:
> > > On Wed, Dec 29, 2021 at 10:45:12PM -0500, Noel Chiappa wrote:
> > > >     > From: Bakul Shah
> > > >
> > > >     > My guess is *not* storing a path instead of a ptr to the inode
> was done
> > > >     > to save on memory.
> > > >
> > > > More probably speed; those old disks were not fast, and on a PDP-11,
> disk
> > > > caches were so small that converting the path to the current
> directory to its
> > > > in memory inode could take a bunch of disk reads.
> > >
> > > The other problem with storing the path as a string is that if
> > > higher-level directories get renamed, the path would become
> > > invalidated.  If you store the cwd as "/foo/bar/baz/quux", and someone
> > > renames "/foo/bar" to "/foo/sadness" the cwd-stored-as-a-string would
> > > become invalidated.
> >
> > Why? Presumably as you traversed the filesystem, you'd cache, (path
> > component, inode) pairs and keep a ref on the inode.  For any given
> > file, including $CWD, you'd know it's pathname from the root as you
> > accessed it, but if it got renamed, it wouldn't matter because you'd
> > have cached a reference to the inode.
>
> I was responding to Bakul's suggestion that the original Unix
> could/should have stored the cwd as a string, instead of a pointer to
> a directory inode.  If you stored the cwd as a string, then you could
> interpret .. by chopping off the last file name component of the
> string, and so now you could have hard links to directories and the
> file system tree could then be a file system DAG.
>
> I don't think Bakul's proposal would have worked --- although I
> suppose if you disallowed directory renames, I guess it could.  Noel's
> objection above was a performance one, in that if you had to parse the
> path every single time, you'd be much more dependent on the namei
> cache --- and that PDP-11 didn't have the memory to support a
> sufficiently large cache.
>
>                                                         - Ted
>
>

--000000000000bcc81805d468b15c
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">In broad strokes, that&#39;s exactly what we did in Plan 9=
, with great results, as was said here a while back. The paper ended with a=
 plea to do the same to Unix, which I think is quite doable.<div><br></div>=
<div><a href=3D"https://9p.io/sys/doc/lexnames.html">https://9p.io/sys/doc/=
lexnames.html</a><br><div><br></div><div>-rob</div><div><br></div></div></d=
iv><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_attr">On =
Fri, Dec 31, 2021 at 2:09 PM Theodore Ts&#39;o &lt;<a href=3D"mailto:tytso@=
mit.edu">tytso@mit.edu</a>&gt; wrote:<br></div><blockquote class=3D"gmail_q=
uote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,2=
04);padding-left:1ex">On Thu, Dec 30, 2021 at 05:31:09PM -0500, Dan Cross w=
rote:<br>
&gt; On Thu, Dec 30, 2021 at 11:41 AM Theodore Ts&#39;o &lt;<a href=3D"mail=
to:tytso@mit.edu" target=3D"_blank">tytso@mit.edu</a>&gt; wrote:<br>
&gt; &gt; On Wed, Dec 29, 2021 at 10:45:12PM -0500, Noel Chiappa wrote:<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0&gt; From: Bakul Shah<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0&gt; My guess is *not* storing a path ins=
tead of a ptr to the inode was done<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0&gt; to save on memory.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; More probably speed; those old disks were not fast, and on a=
 PDP-11, disk<br>
&gt; &gt; &gt; caches were so small that converting the path to the current=
 directory to its<br>
&gt; &gt; &gt; in memory inode could take a bunch of disk reads.<br>
&gt; &gt;<br>
&gt; &gt; The other problem with storing the path as a string is that if<br=
>
&gt; &gt; higher-level directories get renamed, the path would become<br>
&gt; &gt; invalidated.=C2=A0 If you store the cwd as &quot;/foo/bar/baz/quu=
x&quot;, and someone<br>
&gt; &gt; renames &quot;/foo/bar&quot; to &quot;/foo/sadness&quot; the cwd-=
stored-as-a-string would<br>
&gt; &gt; become invalidated.<br>
&gt; <br>
&gt; Why? Presumably as you traversed the filesystem, you&#39;d cache, (pat=
h<br>
&gt; component, inode) pairs and keep a ref on the inode.=C2=A0 For any giv=
en<br>
&gt; file, including $CWD, you&#39;d know it&#39;s pathname from the root a=
s you<br>
&gt; accessed it, but if it got renamed, it wouldn&#39;t matter because you=
&#39;d<br>
&gt; have cached a reference to the inode.<br>
<br>
I was responding to Bakul&#39;s suggestion that the original Unix<br>
could/should have stored the cwd as a string, instead of a pointer to<br>
a directory inode.=C2=A0 If you stored the cwd as a string, then you could<=
br>
interpret .. by chopping off the last file name component of the<br>
string, and so now you could have hard links to directories and the<br>
file system tree could then be a file system DAG.<br>
<br>
I don&#39;t think Bakul&#39;s proposal would have worked --- although I<br>
suppose if you disallowed directory renames, I guess it could.=C2=A0 Noel&#=
39;s<br>
objection above was a performance one, in that if you had to parse the<br>
path every single time, you&#39;d be much more dependent on the namei<br>
cache --- and that PDP-11 didn&#39;t have the memory to support a<br>
sufficiently large cache.<br>
<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 - Ted<br>
<br>
</blockquote></div>

--000000000000bcc81805d468b15c--
