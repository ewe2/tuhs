From: random832@fastmail.com (Random832)
Date: Sat, 12 Sep 2015 21:30:36 -0400
Subject: [TUHS] Did realloc ever zero the new memory?
References: <201509130032.t8D0WvPl024634@tahoe.cs.Dartmouth.EDU>
Message-ID: <m2twqzp0lf.fsf@fastmail.com>

Doug McIlroy <doug at cs.dartmouth.edu> writes:
> It's odd that the later introduction of calloc() as a zeroing malloc()
> has never been complemented by a similar variant of realloc().

Speaking of calloc, was it ever envisioned that any implementation would
do anything more sophisticated with the two arguments than multiply them
together (and detect overflow)? Has any such implementation ever
existed? It seems like one of the great mysteries of the C library
design, especially since early implementations didn't do overflow
checking.

The existence of cfree also suggests an intention to eventually have it
use a separate arena from malloc.



