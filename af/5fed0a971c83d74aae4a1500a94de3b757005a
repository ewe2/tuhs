X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.4
Received: (qmail 3805 invoked from network); 25 Jun 2021 23:26:17 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 25 Jun 2021 23:26:17 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 988A19CA68; Sat, 26 Jun 2021 09:26:14 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 25A9693E13;
	Sat, 26 Jun 2021 09:25:06 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (1024-bit key; unprotected) header.d=planet.nl header.i=@planet.nl header.b="u7oXLd9E";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id D708B93DDD; Sat, 26 Jun 2021 09:24:58 +1000 (AEST)
Received: from cpsmtpb-ews07.kpnxchange.com (unknown [213.75.39.10])
 by minnie.tuhs.org (Postfix) with ESMTP id EFBA593E13
 for <tuhs@minnie.tuhs.org>; Sat, 26 Jun 2021 09:24:50 +1000 (AEST)
Received: from cpsps-ews11.kpnxchange.com ([10.94.84.178]) by
 cpsmtpb-ews07.kpnxchange.com with Microsoft SMTPSVC(8.5.9600.16384); 
 Sat, 26 Jun 2021 01:24:40 +0200
X-Brand: 7abm2Q==
X-KPN-SpamVerdict: e1=0;e2=0;e3=0;e4=;e6=(e1=10;e3=10;e2=11;e4=10;e6=1
 0);EVW:White;BM:NotScanned;FinalVerdict:Clean
X-CMAE-Analysis: v=2.4 cv=N6hKq0xB c=1 sm=1 tr=0 ts=60d665b8
 cx=a_idp_e a=WB5lYbMG1jvHJ1f8o08CVQ==:117
 a=soxbC+bCkqwFbqeW/W/r+Q==:17 a=x1i13A_MHe4A:10 a=IkcTkHD0fZMA:10
 a=r6YtysWOX24A:10 a=cBn9dbOrdUlFdfU0T24A:9 a=QEXdDO2ut3YA:10
X-CM-AcctID: kpn@feedback.cloudmark.com
Received: from smtp.kpnmail.nl ([195.121.84.14]) by cpsps-ews11.kpnxchange.com
 over TLS secured channel with Microsoft SMTPSVC(8.5.9600.16384); 
 Sat, 26 Jun 2021 01:24:40 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=planet.nl; s=planet01;
 h=to:date:message-id:subject:mime-version:content-type:from;
 bh=DAr7O820SYH6BTuHAhH/pKLY3/f1gkdGKEHas2+6fjM=;
 b=u7oXLd9E5D7GUHegkyYCk+PDvQ11mAGlj8aGTBgcRxWQthJDbmXGWoYpaoSvPDeowtzphC0/pDdst
 jzJ+Vit1r3BlBSblpLVBCo/9TBI2oPO7vffrSBWv58iCc8/N6f8cbuYDQa88U+CODc3ioine2dwLHn
 AlxJKH0C2U9NXS1U=
X-KPN-MID: 33|TnoDsUh1ZKaXKBhUCLdQO5f3MYnBhzafo0Vh78tUMBkce+lleAJcnmhdmMWJQ7x
 UpIEFXFwXUntgMcU+0qq2eXsfwnUZEH1BfCUTPpRqbHY=
X-KPN-VerifiedSender: Yes
X-CMASSUN: 33|nz+O1jFJbB1TH9jm/zWJUMiAA1lYlJnNr0+8FWReOQRuGV1JqzZPe9oOnQbiK/E
 8cV94mjFB2TyrWIOeCxakJw==
X-Originating-IP: 80.101.112.122
Received: from mba2.fritz.box (sqlite.xs4all.nl [80.101.112.122])
 by smtp.kpnmail.nl (Halon) with ESMTPSA
 id 8395343e-d60c-11eb-96c1-00505699d6e5;
 Sat, 26 Jun 2021 01:24:40 +0200 (CEST)
Content-Type: text/plain;
	charset=utf-8
Content-Transfer-Encoding: quoted-printable
Mime-Version: 1.0 (Mac OS X Mail 13.4 \(3608.120.23.2.4\))
Message-Id: <06DB5D89-B0FE-4B06-B180-DE08E8E31CC2@planet.nl>
Date: Sat, 26 Jun 2021 01:09:53 +0200
To: TUHS main list <tuhs@minnie.tuhs.org>
X-Mailer: Apple Mail (2.3608.120.23.2.4)
X-OriginalArrivalTime: 25 Jun 2021 23:24:40.0181 (UTC)
 FILETIME=[4566CA50:01D76A19]
X-RcptDomain: minnie.tuhs.org
Subject: [TUHS] demand paged 32V / Contacting Tom Raleigh
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
From: Paul Ruizendaal via TUHS <tuhs@minnie.tuhs.org>
Reply-To: Paul Ruizendaal <pnr@planet.nl>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>


> The demand paging code for SysVR2 was written by Keith A. Kelleman and =
Steven J. Buroff, and in contemporary conference talks they were saying =
that they wanted to combine the best parts of demand-paged 32V and BSD. =
They may have some additional memories that could help with getting a =
better understanding of the final version of 32V.
>=20
> Does anybody have contact details for these two gentlemen?

I=E2=80=99ve managed to contact Keith Kelleman and he had some =
interesting remarks. The paging code in SVR2 was all new code, with a =
focus the 3B dual processor. It does not derive at the code level from =
32V and in fact he does not recall working with the 32V paging code. =
This kills the hope that the SVR2 code had clues about the 32V code. =
Keith did suggest that I tried to contact Tom Raleigh, who might have =
worked with the later 32V code base. Anybody with suggestions for =
locating him?

=3D=3D=3D

Besides functionality, the people that remember paged 32V all recall it =
being very fast. I wonder what made it fast.

First to consider is =E2=80=9Cfaster than what?=E2=80=9D. Maybe Rob P. =
has a specific memory, but I would assume faster than 4BSD: if the =
comparison was with the "scatter loading, partial swapping=E2=80=9D =
version of 32V people would have expected the better performance and not =
remember it as impressive 40 years later. Possibly the comparison is =
with 8th Edition which would have used the 4BSD paging code by then.

If the comparison is with 4BSD, then the CoW feature in paging 32V would =
have been mostly matched by the vfork mechanism in 4BSD: it covers 80% =
of the use and it leaves the code paths simpler. If the comparison is =
with 8th edition, this may be the difference that people remember.

The next possibility is that paging 32V had a better page-out algorithm. =
Joy/Babaoglu mention that the cost of the clock process is noticable. =
Maybe paged 32V used a VMS-like FIFO/second chance algorithm that did =
not need a separate kernel process/thread. Arguably this is not enough =
for a convincing speed difference.

It is also possible that JFR found a more clever way to do LRU =
approximation. He remembers that his code used =E2=80=98strict LRU=E2=80=99=
, but not the algorithm. On Tenex - his conceptual reference - that was =
natural to do, because the MMU hardware maintains a table with 4 words =
of 36 bits for each frame with statistical data. With the VAX hardware =
it is a challenge. Considering his mathematical prowess it is maybe =
plausible that JFR found an efficient way. A slightly better page hit =
rate gives a significant speed improvement.

All speculation of course: only finding the source will truly tell.

