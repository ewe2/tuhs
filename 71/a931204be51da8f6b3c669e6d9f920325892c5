X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 18822 invoked from network); 9 Jan 2021 08:46:49 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 9 Jan 2021 08:46:49 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 24B859CA34; Sat,  9 Jan 2021 18:46:24 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 7CFE49C891;
	Sat,  9 Jan 2021 18:46:05 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id 2F8F09C87F; Sat,  9 Jan 2021 18:44:50 +1000 (AEST)
Received: from oclsc.com (oclsc.com [206.248.137.164])
 by minnie.tuhs.org (Postfix) with SMTP id BB6789C7DA
 for <tuhs@tuhs.org>; Sat,  9 Jan 2021 18:44:49 +1000 (AEST)
From: Norman Wilson <norman@oclsc.org>
To: tuhs@tuhs.org
Date: Sat, 09 Jan 2021 03:44:28 -0500
Message-ID: <1610181871.24117.for-standards-violators@oclsc.org>
Subject: Re: [TUHS] The 2038 bug...
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

Warner Losh:

  Less ugly would be to declare time_t to be unsigned instead of signed...
  It would break less code... Making time_t 64 bits also breaks code, even if
  you declare you don't care about binary compat since many older apps know
  time_t is 32-bits.

===

I remember chatting in 1998 with a consultant who worked with
clients in the financial industry.  They still used 32-bit systems
at the time, and had already converted critical programs (I don't
know whether that included parts of libc or they had their own
conversion routines) to make time_t unsigned.

It mattered early to those folks because of 40-year bonds.

That suggests to me that the financial-services world may have
a head start on the 2038 problem, but I fear many others are
still lagging behind.  64 bits will help but not as much for
embedded systems and legacy stuff.

Us hobbyists will doubtless have fun too, as we already do
(ask Warren) when running the earliest existing UNIX images,
in which times are stored in sixtieths of a second.

Norman Wilson
Toronto ON
