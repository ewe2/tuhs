From: ron@ronnatalie.com (Ron Natalie)
Date: Wed, 4 Jan 2017 16:41:07 -0500
Subject: [TUHS] lost ports
In-Reply-To: <CAP6exYLat4Xucfj7V99Ev8SeA8jV3NDA7axia6Ta=k+mr62Kiw@mail.gmail.com>
References: <CAP6exYLat4Xucfj7V99Ev8SeA8jV3NDA7axia6Ta=k+mr62Kiw@mail.gmail.com>
Message-ID: <01c001d266d3$42294820$c67bd860$@ronnatalie.com>

I worked a lot on the Gould SEL machines.    I believe they copted George Goble from Purdue and some of his gang to do a lot of the initial OS work as the machines were dual processors and George had done the multiprocessor kernel for his “dual VAX” hack.

 

We met with the project leading vice president, Jim Clark when they were planning this and really drove them torwards a BSD based kernel.     His eyes lit up when we told him of Doug Gwyn’s SV on BSD dist which seaeled the deal.    Amusingly, the SEL UNIX didn’t put a memory page at location zero by default.    This should have been fine.    In the PDP-11 kernel, location zero usually held the first few instructions of the program (notably a setd instruction and a few others that would cause printf(“%s”, 0) to print p&P6).   The VAX BSD kernel put a zero at location zero which allowed all sorts of bugs to hide.       We didn’t really mind the SEL behavior until we found a few programs that we didn’t have source code for crashing (notably Oracle).    We had to put a hack in that if the a.out had a non-zero value in one of the unused fields it would put it in to “braindamaged VAX compatilibilty mode” mapping a zero at zero.    This allowed us to poke the afflicted binaries.    

 

Years later a friend of mine was saying…here’s something you don’t see every day…a black computer company VP.   I pointed out that I had worked with Jim Clark at Gould so there must be at least two.    Turns out the article he was reading was about Jim joining AT&T.   He’s still around somewhere (he’s on the board of the EAA right now).   He might be a good guy to invite to the list.

 

The BBN C machines were indeed potentially 20 bits.   They were designed to be a generic hardware emulator, specifically to replace the Honeywell 516s that were being used for IMPS and TIPS at the time.    They then sold someone (DARPA I suspect) the idea that they could write an instrution set that would be ideal for the C language and UNIX.     I’m pretty sure that it was only doing 16 bit operations rather than 20.   If I recall properly the systems were kind of klunky in practice.   The Army had a few of them around.    I never heard the 5 4-bit modules fit into a rack.  The thing was pretty  monolithic looking (about 3’ of 19” rack) and not modular at all.

 

I did kernel work on the PA for HP also worked on their X server (did a few other X servers over the years).

 

The hard part would be finding anybody from these companies who could even remember they made computers let alone had  UNIX software.

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20170104/66dc58f6/attachment-0001.html>

