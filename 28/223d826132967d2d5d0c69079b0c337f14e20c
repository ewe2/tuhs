From: P.A.Osborne@ukc.ac.uk (P.A.Osborne)
Date: Mon, 4 Feb 2002 11:48:28 +0000
Subject: [TUHS] Re: Porting Unix v6 to i386
In-Reply-To: <200202041057.g14AvTs78831@minnie.tuhs.org>; from wkt@minnie.tuhs.org on Mon, Feb 04, 2002 at 08:57:28PM +1000
References: <20020204093343.C18315@apple.ukc.ac.uk> <200202041057.g14AvTs78831@minnie.tuhs.org>
Message-ID: <20020204114828.F18315@apple.ukc.ac.uk>

On Mon, Feb 04, 2002 at 08:57:28PM +1000, Warren Toomey wrote:
> Well, seeing as though Paul referred to me (see below), I'll throw my
> own $0.02 in. I'd recommend V7 for several reasons:
> 
> 	- it's more portable
> 	- the flavour of C used is more modern
> 	- it's got more useful applications (yacc etc.)
> 	- you get the stdio library
> 	- one last thing, there were some awful race conditions and
> 	  bogosities in V6 that just had to be fixed. See the
> 	  `50 bugs' tape, and also Dennis' own admission about
> 	  6th Edition savu/retu at
> 	  http://cm.bell-labs.com/cm/cs/who/dmr/odd.html

Hmmm.  I am starting (I have to admit) to lean towards V7 as my thoughts
continue.  I hadn't seen the "50 bugs" tape - although I believe I have
a copy archived somewhere.  Must take a gander at some point and mount
it on the emulator.

> > Pondering just this over the weekend has left me wondering whether 
> > MiniUnix would be a better initial place to start - as its essentially 
> > V6, but without memory management or pipes.   Which as a starting point 
> > for the experiment may be an easier place to start.
> 
> You could port that in a short amount of time, and treat it as a
> warming-up exercise!

Thats what I was thinking - it also alows a honing of very rusty skills,
and also allows building of tools that will be needed on the way.  

Also I dont suppose that anyone has the tarred up source for MiniUnix
they could mail me?  (It just saves me from extracting it out of
the tape/disk images the hard way).

One thing I am undecided about though is this:

Should the source be converted to from pre K&R C  to ANSI C for
the sake of updating the system to run on a newer architecture (though
not much since the PC was released in 1980 and we only need 16bits).

OR

Should we attempt to provide a new compiler (or preparser) which will
take the pre K&R C and just compile it as is?

I have to admit the above comments are straight off the top of my head,
and haven't been considered at any length and indeed should be (over
several pints of ale).  

> > Also as a sideline,  I don't know how the list owner of this list
> > feels about this discussion potentially swamping the list.
> 
> I think the list needs some traffic :-) It might be worth setting up
> a list for the e-mails between co-developers, but also to have periodic
> status reports and questions sent to this list.

OK once we get to that stage (I am still reading up and checking out
the different architectures at present - so me writing code
isnt going to happen yet until I at least have been over the printed source
with a red pen) which could be a while,  I guess either I can run 
a list here at UKC or maybe Warren would like to put one up at Minnie?

Regards

Paul


