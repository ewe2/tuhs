X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 15044 invoked from network); 7 Sep 2022 05:16:07 -0000
Received: from minnie.tuhs.org (50.116.15.146)
  by inbox.vuxu.org with ESMTPUTF8; 7 Sep 2022 05:16:07 -0000
Received: from minnie.tuhs.org (localhost [IPv6:::1])
	by minnie.tuhs.org (Postfix) with ESMTP id 1F7AC41709;
	Wed,  7 Sep 2022 15:15:59 +1000 (AEST)
Received: from pasta.tip.net.au (pasta.tip.net.au [203.10.76.2])
	by minnie.tuhs.org (Postfix) with ESMTPS id 3ECEB41708
	for <tuhs@tuhs.org>; Wed,  7 Sep 2022 15:15:55 +1000 (AEST)
Received: from [192.168.1.2] (unknown [203.7.122.114])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mailhost.tip.net.au (Postfix) with ESMTPSA id 4MMr7Y2QSJz8srB;
	Wed,  7 Sep 2022 15:15:52 +1000 (AEST)
Content-Type: text/plain;
	charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 12.4 \(3445.104.21\))
From: steve jenkin <sjenkin@canb.auug.org.au>
In-Reply-To: <CALQ0xCBjxQWUfcdKy_tU9Ee=O0TXd0NOyNivYqbeq1rQKg_Ehg@mail.gmail.com>
Date: Wed, 7 Sep 2022 15:15:45 +1000
Content-Transfer-Encoding: quoted-printable
Message-Id: <58D7FE83-15EF-40E8-9DEB-4F6B5E45134E@canb.auug.org.au>
References: <453CCF20-3A01-4655-A956-149EDC08FA36@canb.auug.org.au>
 <CALQ0xCBjxQWUfcdKy_tU9Ee=O0TXd0NOyNivYqbeq1rQKg_Ehg@mail.gmail.com>
To: TUHS <tuhs@tuhs.org>
X-Mailer: Apple Mail (2.3445.104.21)
Message-ID-Hash: FB5WV7JQSGIVRD6SSGMYAXE7A6W7BQ7L
X-Message-ID-Hash: FB5WV7JQSGIVRD6SSGMYAXE7A6W7BQ7L
X-MailFrom: sjenkin@canb.auug.org.au
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation; header-match-tuhs.tuhs.org-0; nonmember-moderation; administrivia; implicit-dest; max-recipients; max-size; news-moderation; no-subject; digests; suspicious-header
CC: Marc Donner <marc.donner@gmail.com>
X-Mailman-Version: 3.3.6b1
Precedence: list
Subject: [TUHS] Re: Has this been discussed on-list? How Unix changed Software.
List-Id: The Unix Heritage Society mailing list <tuhs.tuhs.org>
Archived-At: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/message/FB5WV7JQSGIVRD6SSGMYAXE7A6W7BQ7L/>
List-Archive: <https://www.tuhs.org/mailman3/hyperkitty/list/tuhs@tuhs.org/>
List-Help: <mailto:tuhs-request@tuhs.org?subject=help>
List-Owner: <mailto:tuhs-owner@tuhs.org>
List-Post: <mailto:tuhs@tuhs.org>
List-Subscribe: <mailto:tuhs-join@tuhs.org>
List-Unsubscribe: <mailto:tuhs-leave@tuhs.org>


> On 7 Sep 2022, at 02:09, Marc Donner <marc.donner@gmail.com> wrote:
>=20
> Having spent many formative years at IBM Research throwing =
(metaphorical) bombs at mainframe systems and infiltrating the place =
with BSD, I have thought about this question on and off.
>=20
> I would like to augment your comments with a couple of extra =
observations:
>=20
> UNIX was built for a particular set of users - document writers and =
programmers
>=20
> Before UNIX the systems were industrial in design and scope.  Sort of =
like MVS was a locomotive -  designed to be used for hauling heavy =
freight (acres of data entry clerks answering 800 numbers and entering =
transactions).  UNIX was more like cars and trucks - designed for use by =
knowledge workers.
>=20
> When I was a grad student I hung out with some remarkable programmers. =
 We all observed that learning to program was impossible without a body =
of code to read, study, and learn from.  The best places to learn =
programming in the 70s and 80s were places like MIT, Berkeley, Bell =
Labs, and IBM Research ... places with an established culture of sharing =
code internally and large repositories of code to read.
>=20
> By the mid-1980s the Microsoft folks established the notion that =
software was economically valuable.  People stopped giving away source =
code (IBM's change in strategy was called OCO - "Object Code Only") and =
it totally shocked the software developer community by destroying the =
jobs for programmers at user sites.  Combine that with the mid-1980s =
recession and the first layoffs that programmers had ever seen and we =
saw the first horrified realization that the social contract between =
programmers and employers did not actually exist.
>=20
> We, the programmer community, woke up and committed ourselves as much =
as ever we could to non-proprietary languages and tools, putting our =
shoulders to the OSS movement and hence to UNIX and the layer of tools =
built on top of it.
>=20
> Of course it helped to have some brilliant engineers like Ken, Dennis, =
Doug, Rob, Michael, Stu (and and and) and brilliant writers like Brian =
so that the thing (UNIX) had intellectual integrity and scope.
>=20
> It took UNIX twenty to thirty years, but the economic logic of our =
approach put an end to efforts to totally dominate the tech world.
> =3D=3D=3D=3D=3D
> nygeek.net
> mindthegapdialogs.com/home

Marc,

Good observations. Thank you.
I=E2=80=99ve never heard anyone mention that =E2=80=9Creading large =
codebases=E2=80=9D was the best way to learn programming. Absolutely my =
experience as well.
If Professional Programmers aren=E2=80=99t doing =E2=80=9CProgramming in =
the Large=E2=80=9D to provide critical services for others, then what =
work are they doing?

In its first 10 years (1974-84), the future of Unix was uncertain. The =
formation of SUN in 1982 and other Unix-only vendors made Unix a =
commercial alternative, complete with support and a help number.

At UNSW, there was a significant political battle over Unix. The manager =
of CSU (central Computing Services Unit) resigned over Unix. His 35 =
staff later supported Unix across the Uni.=20
If he=E2=80=99d won the battle, it=E2=80=99s very likely all Unix at =
UNSW would=E2=80=99ve been expunged, stopping the networking work with =
Sydney University, shutting down the Unix kernel course & dramatically =
slowing the spread of Unix in Australia.
Robert Elz at Melbourne Uni was later an important contributor to IP =
protocols and DNS.

In the 1984 BSTJ issue on Unix, there=E2=80=99s no mention of SUN (1982) =
& SUNOS, but they do note =E2=80=9C100,000 licenses=E2=80=9D had been =
shipped, up from the 300 internal & ~600 total licenses mentioned in the =
1978 BSTJ.
While still not =E2=80=9Ccannot fail=E2=80=9D status, Unix=E2=80=99s =
future was becoming more certain.

Today, there are 2-4 billion active smartphone and tablets - almost all =
of which are Unix variants - Android and iOS. [ I=E2=80=99m sure other =
=E2=80=98platforms=E2=80=99 exist, but haven=E2=80=99t followed the =
market closely ]
There=E2=80=99s an estimated 200M-250M =E2=80=9CPersonal Computers=E2=80=9D=
 in active use - 10% of all active devices. Even if all run Microsoft =
and not Chromebooks, MS-Windows is now a minor player.
I=E2=80=99ve no idea how big the fleet of servers powering =E2=80=9CThe =
Cloud=E2=80=9D in Datacentres is, but inferring from power consumption, =
it=E2=80=99s measured in millions.=20
Only MS-Azure provide Windows instances and then it runs on top of a =
hypervisor, not bare metal. Is MS Hyper-V derived from a Unix variant? =
If not, is certainly influenced by VMware & Xen which were.

To a first approximation, 90%+ of =E2=80=98computers' now run a Unix =
variant. [ disregarding the larger fleet of embedded devices, especially =
in cars ]
As you say, UNIX & its variants broke the monopoly / lock-in of software =
by hardware vendors.

The timing of Unix and it displacing hardware enforced =E2=80=9CSoftware =
Silos" wasn=E2=80=99t accidental. [ A notable beneficiary of breaking =
Silos is Oracle - their early promise was database =E2=80=9Cportability=E2=
=80=9D. ]

It falls directly out of =E2=80=9CMoore=E2=80=99s Law=E2=80=9D and =
=E2=80=9CBell's Law of Computer Classes=E2=80=9D.

The PDP-11 =E2=80=98regressed=E2=80=99 to 16-bits compared to the IBM =
360=E2=80=99s 32-bits:
	Bell=E2=80=99s Law in action - a new, much cheaper, lower =
performance =E2=80=9Cclass=E2=80=9D appearing each decade.

In 1977, UNSW acquired a PDP-11/70 for teaching that was 1/10th the =
price of the IBM 360/50 that=E2=80=99d been purchased in 1966. [11/70 =
was in service in April 1978 - hardware delays]
This 11/70 provided at least the same raw performance as the 360/50, but =
had ~50 2400baud terminals attached, not cards + printer.
It was much more effective for learning/ teaching and provided much =
higher =E2=80=9Cuseful throughput=E2=80=9D than the IBM batch system. =
Certainly with VDU=E2=80=99s, much less paper was wasted :)

DEC and others first leveraged the cheaper, faster silicon transistors =
to build bipolar discrete-part machines:
	e.g. the PDP-7 co-opted for =E2=80=9CSpace Travel=E2=80=9D by =
Ken in 1969.
DTL became TTL, digital IC=E2=80=99s grew larger, cheaper, faster - with =
=E2=80=9CMini computer=E2=80=9D manufacturers rolling out new models at =
ever better price-points, more rapidly than =E2=80=99traditional=E2=80=99 =
mainframe vendors.

Minicomputers adopted =E2=80=9Cchipsets=E2=80=9D to implement the CPU, =
leading in a few years to single-chip =E2=80=9CMicroprocessors=E2=80=9D, =
often with co-processors for expensive operations, like floating point.

The invention of RISC led to a whole new class of mini-computers with =
single-chip CPU's and a new class of system:
	the Graphical Workstation [ SUN & SGI ] - not quite Bell=E2=80=99s=
 lowest performance class, one with significant new non-CPU =
capabilities.

Without UNIX, there couldn=E2=80=99t have been a RISC revolution, =
because there=E2=80=99d have been no quality software for vendors to =
pick up: kernel, tools, Graphical UI and 3rd party Software on these =
platforms.

The =E2=80=9CDot Boom=E2=80=9D that ended in 2000 was only possible =
because of high-performance UNIX servers for web, storage & database.
e-Bay started with Oracle on SUN servers. A solid, dependable system =
design.

Google didn=E2=80=99t invent Internet Search, but they did come up with =
the Internet-scale Data Centre, creating highly available systems using =
low-cost, =E2=80=9Cless=E2=80=9D reliabile commodity hardware.
Is this a new Bell=E2=80=99s Law Class?
	 it=E2=80=99s more a system architecture and operational =
arrangement, implemented almost alone in software.

Amazon leveraged their expertise and design of Internet-scale =
DataCentres into a massive =E2=80=9CCloud=E2=80=9D business - not =
bundled into its own products, but =E2=80=98rentable=E2=80=99 by =
customers by the hour.

Netflix, when it changed from mailing DVD=E2=80=99s to streaming, based =
its business on renting Amazon servers, storage & bandwidth.
We now have cheaper again computing services available, with zero =
Capital outlay and scalable to unprecedented sizes.
It follows Bells=E2=80=99 Law, while extending it.

In 2007 when Apple redefined the Smartphone - using ARM (Acorn RISC =
Machine) and a variant of Unix - they created a new class of computing =
device.

The device was designed to =E2=80=9CJust Work=E2=80=9D - near zero =
admin, self-configuring and a highly reliable O/S, UI & Apps.
Critically, Apple never tried to maximise the =E2=80=9Cutilisation=E2=80=9D=
 of the CPU & its resources - they put in fast CPU=E2=80=99s & =
aggressively managed power consumption to extend battery life.

The Mainframe era economic model was inverted with the desktop computer =
- minimise wasted User time, not Computer time.
The Smartphone took this =E2=80=9Cpeople first=E2=80=9D approach to a =
new level.

For me, Apple=E2=80=99s most important invention - on top of =E2=80=9CJust=
 Works=E2=80=9D platform - was the App Store.
It builds on =E2=80=9CThe Cloud=E2=80=9D and Internet services, =
providing an almost direct Software Vendor to Client channel, using a =
secure & verified distribution system with embedded payments.

Modern smartphone/ tablet system design, based around =E2=80=9CSandboxes=E2=
=80=9D and a stringent control layer, seems to contain =E2=80=9Cmalevolent=
=E2=80=9D Apps well enough (no security is perfect, but =E2=80=9CGood =
Enough=E2=80=9D seems attainable).
Without the App Store and Sandboxed Apps, we couldn=E2=80=99t have 2B-4B =
smartphones.

We know from the MS-Windows PC & Server ecosystem [ and PHP/ Wordpress ] =
that "Bad Actors=E2=80=9D will organise and actively exploit system =
vulnerabilities, making large fleets of exploitable devices unusable =
either because resources are co-opted and the device is unresponsive, or =
it=E2=80=99s compromised and can=E2=80=99t be trusted.

Ironically, Moore=E2=80=99s Law couldn=E2=80=99t have proceeded as long =
and as quickly as it has since 1965 without the availability of Software =
to turn raw Silicon + Watts into functional, useful systems.
Intel now owes a lot more business to Unix and its variants than to =
MS-Windows.

It=E2=80=99s not unreasonable IMHO to say that Unix and its variants =
=E2=80=9CChanged the World=E2=80=9D and are now are the most prevalent =
O/S on the planet.

=3D=3D=3D=3D=3D=3D=3D

Sorry for the long piece - I know that TUHS is not the forum for these =
observations not confined to Early Unix.

I=E2=80=99d have moved this to COFF, but I=E2=80=99ve not been able to =
get onto that list so far.

regards
steve


--
Steve Jenkin, IT Systems and Design=20
0412 786 915 (+61 412 786 915)
PO Box 38, Kippax ACT 2615, AUSTRALIA

mailto:sjenkin@canb.auug.org.au http://members.tip.net.au/~sjenkin

