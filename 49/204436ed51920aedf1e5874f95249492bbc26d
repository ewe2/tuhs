From: schily@schily.net (Joerg Schilling)
Date: Mon, 27 Jun 2016 12:31:04 +0200
Subject: [TUHS] Origin year of BSD csh?
In-Reply-To: <CAC20D2N1gHSsQYNCmUixdK4D5hhbfMuyD7wnYPmvD-3dTgtV7Q@mail.gmail.com>
References: <201606261014.u5QAE1qX015184@skeeve.com>
 <5770032F.8030306@mhorton.net> <20160626181450.GK26734@mcvoy.com>
 <CAC20D2N1gHSsQYNCmUixdK4D5hhbfMuyD7wnYPmvD-3dTgtV7Q@mail.gmail.com>
Message-ID: <57710068.Y5JOWn5FNyxO2PxU%schily@schily.net>

Clem Cole <clemc at ccc.com> wrote:

> A few years later, I did switch to typing to the csh when I got to UCB, but
> that was not until after the MIT job control stuff had been spliced into
> the BSD kernel (Horton & Kleckner were probably the ones that convinced me
> to learn it).  With job control I became a fan, but never warmed up to the
> programming syntax.   I picked up the mantra that I still consider wise --
> "type to Joy and program to Bourne."   This is comfortable for the ROMS in
> the muscles of my fingers, but my scripts are portable.

Job control of course was an important improvement. I took the idea and 
implemented in my bsh in 1985.

Now looking back, it is interesting, that there are just four shells that 
implement support for vfork():

-	csh - the first

-	bsh since 1985

-	ksh vfork() probably since 1984, jobcontrol apparently since 1982.

-	bosh (my recent Bourne Shell) since 2014

But on a decent OS, vfork() helps a lot to speed up the shell.

On Solaris, fork() is copy-on-write based but still 3x slower than vfork().

Jörg

-- 
 EMail:joerg at schily.net                  (home) Jörg Schilling D-13353 Berlin
       joerg.schilling at fokus.fraunhofer.de (work) Blog: http://schily.blogspot.com/
 URL:  http://cdrecord.org/private/ http://sourceforge.net/projects/schilytools/files/'

