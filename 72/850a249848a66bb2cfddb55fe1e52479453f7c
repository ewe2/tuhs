From: clemc@ccc.com (Clem Cole)
Date: Tue, 6 Jan 2015 17:00:20 -0500
Subject: [TUHS] pdp11 UNIX memory allocation.
In-Reply-To: <5E62DDAA-0055-46FB-8077-92DB856DEEE0@ronnatalie.com>
References: <mailman.147.1420574271.3354.tuhs@minnie.tuhs.org>
 <54AC4394.3050302@update.uu.se>
 <1420576433.410248.210385277.513EF8EC@webmail.messagingengine.com>
 <5E62DDAA-0055-46FB-8077-92DB856DEEE0@ronnatalie.com>
Message-ID: <CAC20D2M3s76LGqj77kH8bhmyUZ4E9b79iza45Q-O9m+CnJrwcQ@mail.gmail.com>

Right - that's how the kernel set up the page tables for the user processes.

On Tue, Jan 6, 2015 at 4:57 PM, Ronald Natalie <ron at ronnatalie.com> wrote:

>
> > On Jan 6, 2015, at 3:33 PM, random832 at fastmail.us wrote:
> >
> > Was it possible to read/write to the instruction space, or execute the
> > data space?
>
> In split I/D mode (411) magic number.    It is imposible to execute in D
> space or use regular data access instructions to access i-space.   The
> addresses are in completely different spaces (i.e, 0 in data is mapped to
> different memory than 0 in instruction space).  Some access at the kernel
> level can be done with MFPI and MPFD instructions.
>
> In write protected, non-split more (410 magic), you could read the I space
> and you could jump in to D space.   You were prohibited to write the i
> space.
>
> In non protected mode (407 magic) everything was fair game.
>
> _______________________________________________
> TUHS mailing list
> TUHS at minnie.tuhs.org
> https://minnie.tuhs.org/mailman/listinfo/tuhs
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20150106/2c5538dc/attachment.html>

