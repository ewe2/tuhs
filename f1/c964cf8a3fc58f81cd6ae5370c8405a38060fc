From: toby@telegraphics.com.au (Toby Thain)
Date: Thu, 11 May 2017 21:05:55 -0400
Subject: [TUHS] The evolution of Unix facilities and architecture
In-Reply-To: <alpine.BSF.2.20.1705120944510.67621@aneurin.horsfall.org>
References: <20170511140729.2262B18C09A@mercury.lcs.mit.edu>
 <CAC20D2MDG0Mc3jJcbvZYXCo_FZcswt_no=3ajqvx45r-q9gKow@mail.gmail.com>
 <CANCZdfrbxzkMesjPPX3A0qcHL-Hz_g+k1F2PtBicOkZv3JB5Cw@mail.gmail.com>
 <CAC20D2Ndb54AqUx=qn48Rkc37b7pr9rwEVs+m+Aq1zR6ALjw6w@mail.gmail.com>
 <013b01d2ca96$6901b370$3b051a50$@ronnatalie.com>
 <20170511222547.GJ4341@mcvoy.com>
 <alpine.BSF.2.20.1705120944510.67621@aneurin.horsfall.org>
Message-ID: <1873b923-6f5e-83a2-753d-6d7a2f8b580a@telegraphics.com.au>

On 2017-05-11 7:47 PM, Dave Horsfall wrote:
> On Thu, 11 May 2017, Larry McVoy wrote:
>
> [...]
>
>> Try the same thing with Linux.  The file system will come back, starting
>> with, I believe, ext2.
>
> That's a journalled FS, isn't it?  In which case the transactions get
> replayed.

No, I think ext3fs was the first version that was journaled.

So was reiserfs. With pull-plug tests I could get ext3fs to toss cookies 
but not reiserfs.

Now of course the state of the art is copy-on-write, like ZFS.

--Toby


>
>> My belief is that Linux orders writes such that while you may lose data
>> (as in, a process created a file, the OS said it was OK, but that file
>> will not be in the file system after a crash), but the rest of the file
>> system will be consistent.  I think it's as if you powered off the
>> machine a few seconds earlier than you actually did, some stuff is in
>> flight and until they can write stuff out in the proper order you may
>> lose data on a hard reset.
>
> And FreeBSD (at least) has been doing ordered writes for quite some time.
>


