X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=DKIM_INVALID,DKIM_SIGNED,
	HTML_MESSAGE,MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham
	autolearn_force=no version=3.4.4
Received: (qmail 23015 invoked from network); 20 Sep 2020 22:14:53 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 20 Sep 2020 22:14:53 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 10356940FD; Mon, 21 Sep 2020 08:14:51 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 110DB94483;
	Mon, 21 Sep 2020 08:14:17 +1000 (AEST)
Authentication-Results: minnie.tuhs.org;
	dkim=fail reason="signature verification failed" (1024-bit key; unprotected) header.d=ccc.com header.i=@ccc.com header.b="WT1lYVRB";
	dkim-atps=neutral
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id D394693F5B; Mon, 21 Sep 2020 08:14:13 +1000 (AEST)
Received: from mail-qt1-f173.google.com (mail-qt1-f173.google.com
 [209.85.160.173])
 by minnie.tuhs.org (Postfix) with ESMTPS id 3746D93F0F
 for <tuhs@tuhs.org>; Mon, 21 Sep 2020 08:14:13 +1000 (AEST)
Received: by mail-qt1-f173.google.com with SMTP id e7so10684715qtj.11
 for <tuhs@tuhs.org>; Sun, 20 Sep 2020 15:14:13 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ccc.com; s=google;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to
 :cc; bh=9oa+WIv2BYrUiQA7BJjyzfvgf2J+KCUQrn3PIamR6hY=;
 b=WT1lYVRB3BoAP4ZTBD6fxQxDwmursNxtdnNbBZbtT3hesJG/WaJyuhqcc9hjJhFmqj
 4BguBGBNfFvJcqrFFQS56oHm/J0SpwqRG3kPccBxeM/KUztwtD09zswKDhcRWJBWQn7J
 LBN+NDfbzt5STQ2t4ENGwxca/Dyy4zZeGPH6o=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to:cc;
 bh=9oa+WIv2BYrUiQA7BJjyzfvgf2J+KCUQrn3PIamR6hY=;
 b=eKXTz0g+tU55cYx+rCeQA1Soa0mUcJih5nSZAYl733zI8XFqm7x+n/pm6P4UkatLfq
 uMGO0GWpdBEPNcI3hNeA8NUMoFYJ+ctRB6W49MdTkFCpEP+CRHDo3qS4VIpjlmn4v7c9
 /61w0oEWMR1JppFwI3idD8sPXQlHyuY7lhGWbOj53N1+0NG9BXNfwStanTFCIvHuSjHa
 Atd53YWTZ3tswMc1E6zfVNeFIWqkUw5vHL34wqnB8mf/BpTvYFTohftnmSIx5JWXJovf
 m8tirRrxm/jmvyKqhrCWF19CVphn/tWsa/BseoFKrZxfI1H07JNkR8bbotl11O2eN/v/
 VZxA==
X-Gm-Message-State: AOAM531bIM6kV8HNsN0/POMx6xRJRLzAqtd0xBNaZiIyAjiYLRpPUtZC
 WV2ZTHoD8vFdJY+hQkjbv5dWA1ts1ENBo85KHtpvDg==
X-Google-Smtp-Source: ABdhPJz/A7YLCfcEv1Wbd6cmLA4AEUDlbDJKmSDOf1PudCoJjofUt5ewOUr+6ISz/MoNhH+AdUeTA7Ko0fgFGMifWZY=
X-Received: by 2002:ac8:7219:: with SMTP id a25mr44699508qtp.4.1600640052204; 
 Sun, 20 Sep 2020 15:14:12 -0700 (PDT)
MIME-Version: 1.0
References: <202009190151.08J1pYnb066792@tahoe.cs.dartmouth.edu>
 <202009201842.08KIgn2f022401@freefriends.org>
 <04211470-AD63-452A-A0BB-6A7A6FD85AAE@gmail.com>
 <alpine.DEB.2.21.2009201609410.10514@sd-119843.dedibox.fr>
 <202009202026.08KKQ2x6137303@tahoe.cs.dartmouth.edu>
 <202009202057.08KKvxAu141367@tahoe.cs.dartmouth.edu>
In-Reply-To: <202009202057.08KKvxAu141367@tahoe.cs.dartmouth.edu>
From: Clem Cole <clemc@ccc.com>
Date: Sun, 20 Sep 2020 18:13:46 -0400
Message-ID: <CAC20D2Mxf6vwDDd2g7cvod8uBihH50htaAgsiXYJ7zvZ_NsJjQ@mail.gmail.com>
To: Doug McIlroy <doug@cs.dartmouth.edu>
Content-Type: multipart/alternative; boundary="000000000000b9ab1105afc60d1f"
Subject: Re: [TUHS] reviving a bit of WWB
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

--000000000000b9ab1105afc60d1f
Content-Type: text/plain; charset="UTF-8"

On Sun, Sep 20, 2020 at 4:58 PM Doug McIlroy <doug@cs.dartmouth.edu> wrote:

>
> To put it more strongly. this is not a legal C source file.
>         char *s = NULL;
> But this is.
>         char *s = 0;
>

Hmmm ...  Doug - As the risk of playing language lawyer here, I'm going to
argue that between sections 6.3.2.3 and 7.19 the first is legal.
 Cut/pasted from my cope of the 2017 standard (I don't think this has
changed in later drafts):

ISO/IEC 9899:2017 Section 6.3.2.3 *Pointers*
*....*

   1.

   An integer constant expression with the value 0, or such an expression
   cast to type void *, is called a null pointer constant.67) If a null
   pointer constant is converted to a pointer type, the resulting pointer,
   called a null pointer, is guaranteed to compare unequal to a pointer to
   any object or function.
   2.

   67)The macro NULL is defined in <stddef.h> (and other headers) as a null
   pointer constant; see 7.19.
   3.



....
ISO/IEC 9899:2017 Section 7.19 *Common definitions <stddef,h>*
....

   1.

   The macros are

   NULL

   which expands to an implementation-defined null pointer constant;

For whatever its worth, in a number of common coding standards where I have
worked, have always required that when NULL was used, it was always cast
first to the actual data type.  Yes, this is verbose, but it means that a
casual reader sees the type and in particularly in a commerical SW
development setting, that is money in the bank from a maintence standpoint
--  IIRC Gimpel's flexelint <https://www.gimpel.com/about.html> (which IMO
oppinion was always the best lint around), has a switch that will force
that behavior.

As I understand it, the idea behind -Wall *et al*, is that if we can get
code to be 'flexelint clean' the number of latent bugs drops dramatically.
This is particularly true when dealing with code that started be written on
a system with one word or pointer size and now needs to run elsewhere;
which is a common issue commerical ISVs live a great deal [this is a
codified in the 10th of Henry's commandments:

Thou shalt foreswear, renounce, and abjure the vile heresy which claimeth
that ``All the world's a VAX'', and have no commerce with the benighted
heathens who cling to this barbarous belief, that the days of thy program
may be long even though the days of thy current machine be short.

: .

--000000000000b9ab1105afc60d1f
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><div class=3D"gmail_default" style=3D"fon=
t-family:arial,helvetica,sans-serif"><br></div></div><br><div class=3D"gmai=
l_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Sun, Sep 20, 2020 at 4:58=
 PM Doug McIlroy &lt;<a href=3D"mailto:doug@cs.dartmouth.edu">doug@cs.dartm=
outh.edu</a>&gt; wrote:</div><blockquote class=3D"gmail_quote" style=3D"mar=
gin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1=
ex">
<br>
To put it more strongly. this is not a legal C source file.<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 char *s =3D NULL;<br>
But this is.<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 char *s =3D 0;<br></blockquote><div><span class=
=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif"><br></s=
pan></div><div><span class=3D"gmail_default" style=3D"font-family:arial,hel=
vetica,sans-serif">Hmmm ...=C2=A0 Doug - As the risk of playing language la=
wyer here, I&#39;m going to argue that between sections 6.3.2.3 and 7.19 th=
e first is legal.=C2=A0 =C2=A0Cut/pasted from my cope of the 2017 standard =
(I don&#39;t think this has changed in later drafts):</span></div><div><spa=
n class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">=
<br></span></div><div><span class=3D"gmail_default" style=3D"font-family:ar=
ial,helvetica,sans-serif">ISO/IEC 9899:2017 Section 6.3.2.3 <b>Pointers</b>=
</span><b>=C2=A0</b></div><div><b><span class=3D"gmail_default" style=3D"">=
....</span></b></div>
=09
=09
		<div class=3D"gmail-page" title=3D"Page 60">
			<div class=3D"gmail-layoutArea">
				<div class=3D"gmail-column">
					<ol style=3D"list-style-type:none">
						<li>
							<p><span style=3D"font-size:10pt;font-family:URWPalladioL">An intege=
r constant expression with the value </span><span style=3D"font-size:10pt;f=
ont-family:CMR10">0</span><span style=3D"font-size:10pt;font-family:URWPall=
adioL">, or such an expression cast to type </span><span style=3D"font-size=
:9pt;font-family:BeraSansMono;font-weight:700">void </span><span style=3D"f=
ont-size:9pt;font-family:BeraSansMono;vertical-align:-2pt">*</span><span st=
yle=3D"font-size:10pt;font-family:URWPalladioL">, is called
a </span><span style=3D"font-size:10pt;font-family:URWPalladioL;font-style:=
italic">null pointer constant</span><span style=3D"font-size:10pt;font-fami=
ly:URWPalladioL">.</span><span style=3D"font-size:7pt;font-family:URWPallad=
ioL;vertical-align:4pt">67) </span><span style=3D"font-size:10pt;font-famil=
y:URWPalladioL">If a null pointer constant is converted to a pointer type, =
the resulting
pointer, called a </span><span style=3D"font-size:10pt;font-family:URWPalla=
dioL;font-style:italic">null pointer</span><span style=3D"font-size:10pt;fo=
nt-family:URWPalladioL">, is guaranteed to compare unequal to a pointer to =
any object or function.=C2=A0</span></p>
						</li><li><p><span style=3D"font-size:6pt;font-family:URWPalladioL;ver=
tical-align:3pt">67)</span><span style=3D"font-size:8pt;font-family:URWPall=
adioL">The macro </span><span style=3D"font-size:7pt;font-family:BeraSansMo=
no;font-weight:700;color:rgb(42,42,42)">NULL </span><span style=3D"font-siz=
e:8pt;font-family:URWPalladioL">is defined in </span><span style=3D"font-si=
ze:7pt;font-family:BeraSansMono">&lt;stddef.h&gt; </span><span style=3D"fon=
t-size:8pt;font-family:URWPalladioL">(and other headers) as a null pointer =
constant; see 7.19.=C2=A0</span><br></p></li><li><p><span style=3D"font-siz=
e:8pt;font-family:URWPalladioL"><br></span></p></li>
					</ol>
				</div>
			</div>
		</div>....</div><div class=3D"gmail_quote">ISO/IEC 9899:2017<span class=
=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">=C2=A0<=
/span><span class=3D"gmail_default" style=3D"font-family:arial,helvetica,sa=
ns-serif">Section 7.19=C2=A0<b>Common definitions &lt;stddef,h&gt;</b></spa=
n></div><div class=3D"gmail_quote">....<b>=C2=A0</b><span style=3D"font-fam=
ily:arial,helvetica,sans-serif"></span></div><div class=3D"gmail_quote"><di=
v class=3D"gmail-page" title=3D"Page 230">
			<div class=3D"gmail-layoutArea">
				<div class=3D"gmail-column">
					<ol style=3D"list-style-type:none">
						<li>
							<p><span style=3D"font-size:10pt;font-family:URWPalladioL">The macro=
s are
</span></p>
							<p><span style=3D"font-size:8pt;font-family:BeraSansMono;font-weight=
:700;color:rgb(42,42,42);background-color:rgb(247,247,247)">NULL
</span></p>
							<p><span style=3D"font-size:10pt;font-family:URWPalladioL">which exp=
ands to an implementation-defined null pointer constant;=C2=A0</span></p>
						</li>
					</ol>
				</div>
			</div>
		</div><div><b><span class=3D"gmail_default" style=3D"font-family:arial,he=
lvetica,sans-serif"></span></b></div><div><span class=3D"gmail_default" sty=
le=3D"font-family:arial,helvetica,sans-serif">For whatever its worth, in a =
number of common coding standards where I have worked, have always=C2=A0req=
uired that when NULL was used, it was always cast first to the actual data =
type.=C2=A0 Yes, this is verbose, but it means that a casual reader sees th=
e type and in particularly in a commerical=C2=A0SW development setting, tha=
t is money in the bank from a maintence standpoint --=C2=A0 IIRC <a href=3D=
"https://www.gimpel.com/about.html">Gimpel&#39;s flexelint</a> (which IMO o=
ppinion=C2=A0was always the best lint around), has a switch that will force=
 that behavior.=C2=A0=C2=A0</span></div><div><span class=3D"gmail_default" =
style=3D"font-family:arial,helvetica,sans-serif"><br></span></div><div><spa=
n class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">=
As I understand it, the=C2=A0idea behind </span><span class=3D"gmail_defaul=
t" style=3D""><font face=3D"monospace" color=3D"#0000ff">-Wall</font></span=
><span class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-se=
rif"> <i>et al</i>, is that if we can get code to be &#39;flexelint clean&#=
39; the number of latent bugs drops dramatically.=C2=A0 This is particularl=
y true when dealing with code that started be written on a system with one =
word or pointer size and now needs to run elsewhere; which is a common issu=
e commerical ISVs live=C2=A0a=C2=A0great deal [this is a codified in the 10=
th of Henry&#39;s commandments:</span></div></div><blockquote style=3D"marg=
in:0 0 0 40px;border:none;padding:0px"><div class=3D"gmail_quote"><h2 style=
=3D"font-family:Times"><font size=3D"2" style=3D"" color=3D"#ff0000">Thou s=
halt foreswear, renounce, and abjure the vile heresy which claimeth that ``=
All the world&#39;s a VAX&#39;&#39;, and have no commerce with the benighte=
d heathens who cling to this barbarous belief, that the days of thy program=
 may be long even though the days of thy current machine be short.</font></=
h2></div></blockquote><div class=3D"gmail_quote"><div><span class=3D"gmail_=
default" style=3D"font-family:arial,helvetica,sans-serif">: .=C2=A0</span><=
/div></div></div>

--000000000000b9ab1105afc60d1f--
