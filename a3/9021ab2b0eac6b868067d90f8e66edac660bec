From: kevin.bowling@kev009.com (Kevin Bowling)
Date: Thu, 15 Feb 2018 04:43:45 -0700
Subject: [TUHS] Clueless programmers
In-Reply-To: <005301d3a5a0$226410d0$672c3270$@ronnatalie.com>
References: <005301d3a5a0$226410d0$672c3270$@ronnatalie.com>
Message-ID: <CAK7dMtD20zX-=RbzhnZPCh3E=RBkMHWrYnwUrXBVVX040a+-Pw@mail.gmail.com>

I've never seen anything this bad, and it gave me a hearty laugh out
loud.  I guess in my years people mostly self select toward safer
languages if they are human fuzzers.

On Wed, Feb 14, 2018 at 7:28 AM, Ron Natalie <ron at ronnatalie.com> wrote:
>
>> already 20 years ago I met a guy (masters degree, university) who never freed dynamically allocated memory. He told me he is 'instantiating a object', but had no idea what an heap is, and what dynamically allocated memory means.
>
> Years ago, I had an new programmer who I just couldn't teach.    He never understood the difference between an array and pointer, and apparently couldn't be bothered to learn.
> After string him along for three months, I was on my way into his office to fire him when I found out he had quit, but not before he checked a bunch of drek into our source code control system.
> I thought I backed all his commits out at the time.
>
> Years later I was running "purify" on our product looking for memory leaks.   I found this small utility function that predated the source code control system leaking.   This, I thought was odd, as it had been there FOREVER and was well tested.   I brought up the source code system and checked it anyhow and found the afore mentioned programmer had checked in one change:   he deleted the "free" call in it.
>
> I KNOW what happened.    He did something else to corrupt the malloc heap in his code and often this causes a core dump in a subsequent malloc/free call.   Apparently this was the place it struck him, so he just deleted the free call there.
>

