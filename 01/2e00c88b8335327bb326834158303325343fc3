From: random832@fastmail.com (Random832)
Date: Thu, 09 Feb 2017 09:37:34 -0500
Subject: [TUHS] // comment in C++
In-Reply-To: <86inojsg6p.fsf@molnjunk.nocrew.org>
References: <CAP6exYJ_ifC=9zLTwq99fXt+nFAt2SSoPzdQKZwTHEG0NBcoSg@mail.gmail.com>
 <20170208224556.GG65698@eureka.lemis.com>
 <04c401d2825d$d0758da0$7160a8e0$@ronnatalie.com>
 <20170209121204.GJ5418@yeono.kjorling.se>
 <86inojsg6p.fsf@molnjunk.nocrew.org>
Message-ID: <1486651054.1665917.875659504.05C3D685@webmail.messagingengine.com>

On Thu, Feb 9, 2017, at 07:26, Lars Brinkhoff wrote:
> Michael Kj√∂rling <michael at kjorling.se> writes:
> > That wouldn't have anything to do with how ^@ is a somewhat common
> > representation of 000, would it? (Yes, using octal on purpose.) I've
> > always kind of wondered where that notation came from.  That ^A
> > through ^Z were representations of 001 through 032 makes more sense.
> 
> Look at two slices of the ASCII table:

And for where ^? for DEL comes from, (0377 + 0100) & 0377 == 0077 [where
the first 0377 is the control character of interest.] I am sure I've
seen code that calculates the character to be displayed in precisely
this way, but I can't remember where.

In fact, this is exactly how the control key worked on early terminals
(I recently had reason to look up an ASR-33 manual). The Shift key
toggled the 0020 bit (so shift-2 is " - if you look at the relevant
slice of an ASCII table), resulting in shift-K is [ (which did not have
a dedicated key) and shift-ctrl-K is ESC (which did have a dedicated key
as well, but the other non-letter control characters did not, and were
on shift-ctrl-LMNOP).

There was a mechanical lockout for keys that shift didn't make sense
with - all other letters and zero (which would otherwise have produced a
space), and one for ctrl (which locked out all the number and symbol
keys)

