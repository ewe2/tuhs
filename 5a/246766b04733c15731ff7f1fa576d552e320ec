From: drb@msu.edu (Dennis Boone)
Date: Wed, 21 Mar 2018 17:15:37 -0400
Subject: [TUHS] FORTRAN
In-Reply-To: (Your message of Wed, 21 Mar 2018 19:10:42 +1100.)
 <20180321081042.GA7611@server.rulingia.com>
References: <20180321081042.GA7611@server.rulingia.com>
 <CAC20D2P-dNX8AM_mh5N+Th-VYsG9COP8PX8QufLmFE2zh7MUqw@mail.gmail.com>
 <61051ebbca4809c08b60e92014851069e83a07f8@webmail.yaccman.com>
 <CAEoi9W6kLW5U-=kycN_8Orp228XZfFBv=88xzgam=76AWcJV3w@mail.gmail.com>
 <002f01d3c085$6b5a26d0$420e7470$@ronnatalie.com>
 <CABH=_VSjLP1XRVa6MG-q_nCyNRMqF8iKSrt8o5Tu-e+615zDMQ@mail.gmail.com>
Message-ID: <20180321211537.BFE39A58617@yagi.h-net.msu.edu>

 > >Yes, Fortran is as awful for system programming as C is for numeric
 > >programming that involves throwing multidimensional arrays around.

 > Note that Pr1meOS was written in Fortran.  I did study it but no
 > longer recall what extensions it had to make that practical.

It's just PRIMOS, no E.  And the '1' in place of 'i' thing was just a
marketing/logo gimmick.

Surprisingly few language extensions.  Octal constants (:1234567).  A
file inclusion facility ($INSERT FILE>PATH>XYZ.INS.FTN).  Not much else.

Originally, much of PRIMOS was in FORTRAN, with some assembler (PMA).
Later, significant rewrites and extensions were done in PL/1 derived
systems languages (PLP and SPL), and even later some in Modula.

Awfulness is relative.  Bill Poduska has said that writing most of the
system in a higher level language saved them a lot of time, over using
assembler.

De

