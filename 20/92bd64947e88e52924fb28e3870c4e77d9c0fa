From: ron@ronnatalie.com (Ron Natalie)
Date: Sun, 26 Feb 2017 11:27:01 -0500
Subject: [TUHS] Un-released/internal/special UNIX versions/ports during
	the years?
In-Reply-To: <FBE55275-7730-4F9E-81AF-A585F5AC6328@tfeb.org>
References: <20170226123956.DBD3C18C088@mercury.lcs.mit.edu>
 <BA1995BD-B9D1-4F88-9690-45B36CE59347@tfeb.org>
 <CAHfSdrUsMzu-KB6fFGp9XeZbr5ecxvnEPzGS-CQ+jRQqGuFDGg@mail.gmail.com>
 <58b2ec12.PWETi07hYb+bxrO0%schily@schily.net>
 <13D1D81F-F878-4D23-922A-279AADF29CFE@tfeb.org>
 <58b2f9c8.N21HJWDG1ABXGZ/w%schily@schily.net>
 <FBE55275-7730-4F9E-81AF-A585F5AC6328@tfeb.org>
Message-ID: <008701d2904d$29d56c60$7d804520$@ronnatalie.com>

Tim is right.   EINE predates Gosling's EMACS by a few years.   Of course,
it uses LISP as an extension language not because they thought that would be
novel but since the whole thing was implemented in LISP to begin with (much
as you could extend the TECO EMACS with more TECO).

And you are right, since EMACS (both the TECO and EINE and other variants)
were coming out of the AI realm where LISP prevails, using LISP as a
language certainly made sense.   It was also really easy to implmenet a
cheap mocklisp parser as Gosling did in the an otherwise C language
implementation.

I worked with Gosling and his successor Mike Gallaher (at Unipress) for
years on the Unipress commercialization of Gosling's EMACS (I had been using
the early non-commercial version at BRL).    Gosling was a big fan of
programmable interfaces.   From the EMACS mocklisp, he went to developing
the NeWS window system (which used a variant of PostScript as it's language)
and then on to JAVA.    I did a bunch of stuff with NeWS and Gallaher's
subsequent similar extension module SoftWire (also commercially used by my
company as PixScript).    Even with Owen Densmore's (Sun Microsystems)
object oriented changes, it was a horrendous language to actually write
stuff in.   



-----Original Message-----
From: TUHS [mailto:tuhs-bounces@minnie.tuhs.org] On Behalf Of tfb@tfeb.org


I'd have to check the chronology but I'm fairly sure that EINE predates
Gosling Emacs by several years: I'd assume that either EINE is where Gosling
got the idea, or that it was just obvious, since Emacs came from an
environment where implementing things in Lisp was not a strange idea, to put
it rather mildly.





