From: M.Engel@leedsbeckett.ac.uk (Engel, Michael)
Date: Fri, 10 Oct 2014 19:21:52 +0000
Subject: [TUHS] Codata restoration - day 1
In-Reply-To: <alpine.BSF.2.00.1410110450370.31844@aneurin.horsfall.org>
References: <B2E15B59-0249-468F-A4CF-CB1D099F0006@leedsbeckett.ac.uk>
 <alpine.BSF.2.00.1410110450370.31844@aneurin.horsfall.org>
Message-ID: <6EFBDEDF-67F2-4519-97BB-34087757EA09@leedsmet.ac.uk>


On 10 Oct 2014, at 19:00, Dave Horsfall <dave at horsfall.org> wrote:

> On Fri, 10 Oct 2014, Engel, Michael wrote:
> 
>> After carefully examining the power supply and checking the generated 
>> voltages, we were convinced that this wouldn't kill our Multibus boards. 
>> Maybe some of you are interested in our progress, so I though I would 
>> send you an update.
> 
> Yes please!  I long for the days when it was possible to understand the 
> entire kernel source...

Thanks, Dave! Unfortunately, I haven't heard back from Unisoft so far, 
but I have tried something else last night. A few months ago, ragge
(of NetBSD/VAX and pcc fame) added a 68k backend to (modern) 
pcc. With this, I was able to (cross-)compile more than half of the files of 
the PDP11 v7 kernel without changes (but the compiler still seems to have
some problems, I'll try to generate a useful error report over the weekend).

So, a new 7th Edition Unix port to Sun 100U-derived boards seems to
be possible, perhaps also incorporating pieces from System III or early
BSDs. Another alternative would be a port of RetroBSD, the 2.11 BSD
port which currently runs on the PIC32 MIPS microcontroller cores in
just 128kB RAM. One of these systems will also be the basis for my
upcoming operating systems course :-).

Nevertheless, I will first try to get the existing installation to work, maybe
there are some interesting sources on the disks (and we have also found
a number of 1600bpi 9-track backup tapes and 5.25" backup floppies...).

>> After reconnecting the Multibus backplane, we started the system with 
>> only a CPU board and a memory board. On one of our CPU boards the 
>> smaller (P2) Multibus connector is masked with tape, I'll have to dig 
>> deeper to find out what is deactivated by thisâ€¦
> 
> The P2 bus is designated as "private" i.e. do whatever you want with it 
> with your proprietary hardware.  I don't think the "standard" CPU board 
> even looks at it.

That's what I also thought. Do you know if there were systems which used
P2 to connect to memory boards?

[...]
>> The serial cable is working, we tried all sorts of handshake 
>> configurations. If we get any characters back (the system is running at 
>> 9600 baud, I tried all combinations of 7/8 bit, none/even/odd/mark/space 
>> parity and 1/2 stop bits), these are garbled and contain mostly "1" bits 
>> (0xfc, 0xfe, 0xff or similar).
> 
> Have you tried speeds other than 9600?  They look to me like framing 
> errors.

The terminal emulator (screen and minicom behave identically) receives 
the output from the console perfectly - otherwise, I would have also 
suspected an incorrect baudrate. And different baudrates for RX and TX
would be highly unusual (I have only seen these in German BTX dialup
systems in the 1980s, which used 1200/75 baud modems).

Luckily, the driver chip for the UART RX line is an AM26LS32. While
this chip is no longer available, I can get an AM26LS32A here at Farnell
(which is just around the corner from my house :-)). Does anyone know
the difference between the 26LS32 and the 26LS32A? I only found a
page at TI that didn't list specific differences...

-- Michael




