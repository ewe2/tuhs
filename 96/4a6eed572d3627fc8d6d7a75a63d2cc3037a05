From: clemc@ccc.com (Clem Cole)
Date: Tue, 19 Sep 2017 10:32:20 -0400
Subject: [TUHS] Happy birthday,
 Dennis Ritchie! [ really sun vs dec/apollo --> X and NeWS ]
In-Reply-To: <20170919025031.GA25650@mcvoy.com>
References: <f05f5fe905a5279e242c1ff265f43c690eb4052e@webmail.yaccman.com>
 <1505782328.3172479.1110519744.63D53ACC@webmail.messagingengine.com>
 <20170919025031.GA25650@mcvoy.com>
Message-ID: <CAC20D2NZLK32S-01xubuo5yqiRswf5gJP2vwHnBi1fobnzmVrw@mail.gmail.com>

On Mon, Sep 18, 2017 at 10:50 PM, Larry McVoy <lm at mcvoy.com> wrote:

> So in the BitKeeper source, perror is redifined to my_perror which is
> this:
>
> void
> my_perror(char *file, int line, char *msg)
> {
>         char    *p = 0;
>         int     save = errno;
>
>         if (p = getenv("_BK_VERSION")) {
>                 if (strneq(p, "bk-", 3)) p += 3;
>                 fprintf(stderr, "%s:%d (%s): ", file, line, p);
>         } else {
>                 fprintf(stderr, "%s:%d: ", file, line);
>         }
>         if (p = strerror(errno)) {
>                 fprintf(stderr, "%s: %s\n", msg, p);
>         } else {
>                 fprintf(stderr, "%s: errno=%d\n", msg, errno);
>         }
>         errno = save;
> }
>
> libc should do that.


​+1,  indeed!​ - knowing where the the error came from (file and line) is
huge. Yeah it means putting it in the preprocessor, which has some issues;
but it comes back to a previous comment I have made -- I really believe a
serious production language needs a preprocessor that is carefully used
because there are places (like this one) that just makes the right things
happen.

Clem
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20170919/32420dee/attachment.html>

