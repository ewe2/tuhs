From: michael@kjorling.se (Michael =?utf-8?B?S2rDtnJsaW5n?=)
Date: Wed, 15 Mar 2017 14:32:28 +0000
Subject: [TUHS] System Economics (was is Linux "officially branded UNIX")
In-Reply-To: <ddfb5858-5817-99b3-67fb-34cdc60314ed@kilonet.net>
References: <CAC20D2OcXnAmBdCEM3GLkOqqW=X96aF3AGQv=yWrd93NeSF9TA@mail.gmail.com>
 <20170314153815.GA32726@mcvoy.com>
 <9deec795-ecd6-7924-c10f-b722ee388a0c@kilonet.net>
 <20170314155718.GH32139@yeono.kjorling.se>
 <47c38ea0-accb-407b-26c8-6b4877657b21@kilonet.net>
 <CAC20D2OhodnTWZ1GWOJCbBwefq7H=Dn+ZvN=z1fFy4O9CP8BMQ@mail.gmail.com>
 <ddfb5858-5817-99b3-67fb-34cdc60314ed@kilonet.net>
Message-ID: <20170315143228.GG25424@yeono.kjorling.se>

On 14 Mar 2017 15:48 -0400, from krewat at kilonet.net (Arthur Krewat):
> Again, I'm including everything ... You could make a case for
> certain Unixes that do not include a pre-existing C compiler being
> bounded by their own development (or any other operating system that
> needs a precursor).  For example, say there was an operating system
> that used a C compiler to build itself that was developed 10 years
> before. That example operating system's timeline would have to
> include said C compiler IMHO.
> 
> On the other hand, an operating system who's sole method of creation
> was engineered in year 0, and was "developed" for 10 years and
> ended, we could say that OS's timeline was a solid 10 years.

Then why limit yourself to the C compiler? The operating system
probably relies on an early bootstrapper layer to start (on the IBM PC
and similar systems this is the BIOS or more recently UEFI; other
architectures are similar or different). The code was probably written
using keyboards, which may or may not rely on firmware for the
physical key to key code to operating system input mapping, let alone
the editor and file system code used to store those first few chunks
of code. And what about the timelines of _those_? At some point the
system becomes self-hosting in the software sense, but it took work to
get to that point. And so on.

I think you see where I am heading with this; if we're going to
include things that were not done specifically for the operating
system in question, then unless we draw a clear line somewhere, we end
up with some guy working on vacuum tube theory a century ago and
_still_ aren't anywhere near an answer to "how long is the timeline of
this piece of software?". Hence, absent some kind of demarcation, that
discussion becomes meaningless.

-- 
Michael Kjörling • https://michael.kjorling.se • michael at kjorling.se
                 “People who think they know everything really annoy
                 those of us who know we don’t.” (Bjarne Stroustrup)

