X-Spam-Checker-Version: SpamAssassin 3.4.4 (2020-01-24) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-1.0 required=5.0 tests=MAILING_LIST_MULTI,
	T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no version=3.4.4
Received: (qmail 3758 invoked from network); 4 Feb 2022 20:44:36 -0000
Received: from minnie.tuhs.org (45.79.103.53)
  by inbox.vuxu.org with ESMTPUTF8; 4 Feb 2022 20:44:36 -0000
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id 878059D4D8; Sat,  5 Feb 2022 06:44:32 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id BD18095192;
	Sat,  5 Feb 2022 06:44:14 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id E3A8F95192; Sat,  5 Feb 2022 06:44:08 +1000 (AEST)
X-Greylist: delayed 954 seconds by postgrey-1.36 at minnie.tuhs.org;
 Sat, 05 Feb 2022 06:44:07 AEST
Received: from mout1.fh-giessen.de (mout1.fh-giessen.de [212.201.18.42])
 by minnie.tuhs.org (Postfix) with ESMTPS id C6D3B95111
 for <tuhs@minnie.tuhs.org>; Sat,  5 Feb 2022 06:44:07 +1000 (AEST)
Received: from mx1.fh-giessen.de ([212.201.18.40])
 by mout1.fh-giessen.de with esmtps (TLS1.3:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.92) (envelope-from <hellwig.geisse@mni.thm.de>)
 id 1nG5Bj-00084H-3u
 for tuhs@minnie.tuhs.org; Fri, 04 Feb 2022 21:28:11 +0100
Received: from mailgate-1.its.fh-giessen.de ([212.201.18.15])
 by mx1.fh-giessen.de with esmtps (TLS1.3:ECDHE_RSA_AES_256_GCM_SHA384:256)
 (Exim 4.92) (envelope-from <hellwig.geisse@mni.thm.de>)
 id 1nG5Bj-006bDf-1B
 for tuhs@minnie.tuhs.org; Fri, 04 Feb 2022 21:28:11 +0100
Received: from p5deb5266.dip0.t-ipconnect.de ([93.235.82.102]
 helo=papa2.fritz.box) by mailgate-1.its.fh-giessen.de with esmtpsa
 (TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim 4.92)
 (envelope-from <hellwig.geisse@mni.thm.de>) id 1nG5Bi-0006T3-SQ
 for tuhs@minnie.tuhs.org; Fri, 04 Feb 2022 21:28:10 +0100
Message-ID: <1644006490.2458.78.camel@mni.thm.de>
From: Hellwig Geisse <hellwig.geisse@mni.thm.de>
To: tuhs@minnie.tuhs.org
Date: Fri, 04 Feb 2022 21:28:10 +0100
In-Reply-To: <e201372274da4ed9cf75bcaaf43a5d95@firemail.de>
References: <c0fd1aec-55a8-54a4-94dc-748068d9e15d@gmail.com>
 <202202011537.211FbYSe017204@freefriends.org>
 <20220201155225.5A9541FB21@orac.inputplus.co.uk>
 <202202020747.2127lTTh005669@freefriends.org>
 <7C19F93B-4F21-4BB1-A064-0307D3568DB7@cfcl.com> <1nFWmo-1Gn-00@marmaro.de>
 <CAP2nic37m2aSCffgr8o_J+BkAbnrzFDUaHX9V0brd+L8+PqdPA@mail.gmail.com>
 <CALMnNGjfvtd=6qsmT6kXm3eEBM7OhhGSJ4Wbbjiv+B9P9rLafA@mail.gmail.com>
 <alpine.DEB.2.21.2202040304380.28373@sd-119843.dedibox.fr>
 <CAD2gp_Rn_==vzUw80geH7ryLwmU+uiCidQVfMLn51HhZV1VHfA@mail.gmail.com>
 <e201372274da4ed9cf75bcaaf43a5d95@firemail.de>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.18.5.2-0ubuntu3.2 
Mime-Version: 1.0
Content-Transfer-Encoding: 8bit
Subject: Re: [TUHS] more about Brian...
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

Hi Thomas,

On Fr, 2022-02-04 at 20:45 +0100, Thomas Paulsen wrote:
> I tell you one thing: I never ever experienced any problems with
> traditional malloc()/free().Â­

did you ever write a program which does heavy malloc()/free()
on complicated (i.e., shared) data structures *and* runs for
days, perhaps weeks? IMO it's very difficult to do this without
a GC, and you have to exercise quite an amount of discipline
to do it right.

> A kernel using GC is a kernel written by inexperienced kids.

Well, not exactly. Niklaus Wirth's Oberon kernel (around 1990)
used a GC, and it did that quite efficiently.

Hellwig
