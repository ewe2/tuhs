From: usotsuki@buric.co (Steve Nickolas)
Date: Wed, 8 Nov 2017 15:50:47 -0500 (EST)
Subject: [TUHS] origins of void* -- Apology!
In-Reply-To: <00d801d358cb$af9a5990$0ecf0cb0$@ronnatalie.com>
References: <CANCZdfoLzdp6q4VsXo+cZ_gwMhyRxk2FT-jh2Dz2Ggt5pQdfJg@mail.gmail.com>
 <7617c69abf46fbe3f206c6208000fe3b26854359@webmail.yaccman.com>
 <065d01d3575e$f71f6ad0$e55e4070$@ronnatalie.com>
 <E0183799-3153-4DFD-9879-47515821F8BA@bitblocks.com>
 <20171108174450.5564F20334@orac.inputplus.co.uk>
 <00d801d358cb$af9a5990$0ecf0cb0$@ronnatalie.com>
Message-ID: <alpine.BSF.2.02.1711081548040.44242@frieza.hoshinet.org>

On Wed, 8 Nov 2017, Ron Natalie wrote:

> Ralph is right.  You don't have to go any further than the old x86 
> implementations to find machines where the function pointers are bigger 
> than the data pointers.

It could get pretty baroque, depending on your memory model; as you had 
16-bit pointers and 32-bit (actually 20-bit because of the hairy way 
segmentation worked) pointers and what was used for what depended on 
compiler switches or the nonstandard "near" and "far" keywords (e.g., char 
far *screen=0xA0000000;).

-uso.

