From: dds@aueb.gr (Diomidis Spinellis)
Date: Thu, 30 Jun 2016 22:21:27 +0300
Subject: [TUHS] Algol68 vs. C at Bell Labs
In-Reply-To: <CAEoi9W5RA0Eb90YT5t_23Q8bwj_Hi8pfmzsNpE0ujWLH-GnC6Q@mail.gmail.com>
References: <0f57f9d8248db61cba34372814d2f45e.squirrel@webmail.yaccman.com>
 <CAC20D2OT2k6TqvdBiCzM8PoJ6Bs4YZKZ1BPPT_czJT0koGMk_g@mail.gmail.com>
 <CAOkr1zV9_vtMtZ65Cf-+qOAWYdHvpZ+-CXS9zz7Q5UaNDP5wFw@mail.gmail.com>
 <CAEoi9W5RA0Eb90YT5t_23Q8bwj_Hi8pfmzsNpE0ujWLH-GnC6Q@mail.gmail.com>
Message-ID: <2c674075-db86-827b-fd97-30921757e9ae@aueb.gr>

On 30/06/2016 18:32, Dan Cross wrote:
> Of
> course it's only of historical interest now, but from a technology
> standpoint MC68000 vs Intel 8088 seems like a no-brainer: the 68k is the
> superior chip.

Two factors might had made the choice of 8088 a more practical one for IBM.

First, the 8088 was a 16-bit CPU with an 8-bit data bus in a cheap 
40-pin package.  This halved the number DRAM chips required and allowed 
the IBM PC to be easily designed along existing easily-available 8-bit 
peripherals.  In contrast the 68000 had a 16-bit data bus in a more 
expensive 64-pin package.  Remember that in the 1980s glue logic was 
implemented through simple TTL chips, so adopting the 68000 might have 
doubled the number of chips on the motherboard.

In addition, the 8086 architecture was an extension of the 8080 one, 
which made it easier to make the MS-DOS API compatible with the CP/M 
one, which was used by many popular programs.  This would simplify their 
porting.  (A lot of early IBM PC software was written in assembly 
language.)  The MS-DOS 1.0 interrupts (system calls) even used the same 
numbers and structures (file control blocks - FCBs) as those used by 
CP/M.  MS-DOS 2.0 added file paths and other Unix-influenced abstractions.


