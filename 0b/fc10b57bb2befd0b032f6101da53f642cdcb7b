From: lm@mcvoy.com (Larry McVoy)
Date: Mon, 21 Mar 2016 19:28:08 -0700
Subject: [TUHS] Etymology of the open file table?
In-Reply-To: <CAOkr1zU5Ay8PaLsZeGNgnAei+cvbUXgp9Qyto78KrjvRyFC+NQ@mail.gmail.com>
References: <CAEoi9W6m-va2u0ZCRdSMrvSS-ELq8GFSWg=QUyWBOsVakqeMFA@mail.gmail.com>
 <CAOkr1zU5Ay8PaLsZeGNgnAei+cvbUXgp9Qyto78KrjvRyFC+NQ@mail.gmail.com>
Message-ID: <20160322022808.GA24345@mcvoy.com>

So if you think about it you need two levels, the fd that is per open
that knows the offset, and the fd to the object in question.  The file
table is the latter.

On Mon, Mar 21, 2016 at 08:23:43PM -0600, Marc Rochkind wrote:
> A ref-counted data structure organized how, for what language? Integers are
> really easy to work with.
> 
> (Perhaps I misunderstood your post.)
> 
> On Mon, Mar 21, 2016 at 8:07 PM, Dan Cross <crossd at gmail.com> wrote:
> 
> > This came up today at work; what's the origin of the open file table? The
> > suggestion was made that, instead, a ref-counted data structure could be
> > allocated at open() time to serve the same purpose, and that a table of
> > open files was superfluous. My guess was that this made it (relatively)
> > easy to look up what files referred to a particular device?
> >

-- 
---
Larry McVoy            	     lm at mcvoy.com             http://www.mcvoy.com/lm 

