Return-Path: <tuhs-bounces@minnie.tuhs.org>
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.2
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id 5660e2b6
	for <ml@inbox.vuxu.org>;
	Sat, 31 Aug 2019 03:19:43 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id B64909C0BF; Sat, 31 Aug 2019 13:19:42 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id E1D8D9C0A7;
	Sat, 31 Aug 2019 13:19:29 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id B8F039C0A7; Sat, 31 Aug 2019 13:19:27 +1000 (AEST)
Received: from mail.bitblocks.com (ns1.bitblocks.com [173.228.5.8])
 by minnie.tuhs.org (Postfix) with ESMTP id C78D29C00B
 for <tuhs@tuhs.org>; Sat, 31 Aug 2019 13:19:26 +1000 (AEST)
Received: from mob.bitblocks.com (mob.bitblocks.com [192.168.125.11])
 by mail.bitblocks.com (Postfix) with ESMTP id 236861570CE9;
 Fri, 30 Aug 2019 20:19:05 -0700 (PDT)
Content-Type: text/plain;
	charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 12.4 \(3445.104.11\))
From: Bakul Shah <bakul@bitblocks.com>
In-Reply-To: <88242A0D-D08E-47EB-84DC-A7205780A417@ccc.com>
Date: Fri, 30 Aug 2019 20:19:04 -0700
Content-Transfer-Encoding: quoted-printable
Message-Id: <8BFD5926-B916-4AA2-A896-4BA9E5AFDB69@bitblocks.com>
References: <1567196510.21824.for-standards-violators@oclsc.org>
 <CAC20D2OJ=uNZ0yMwpL13TPPW_q9tJeY6559gwsDGUYVkUin+TA@mail.gmail.com>
 <20190830215202.GA974@mcvoy.com>
 <CAC20D2Pp5hpZraaANsXg0Sgc-sU3fJ4=_N17ogQii3=p-H4Oeg@mail.gmail.com>
 <20190831011359.E9F491570CE9@mail.bitblocks.com>
 <88242A0D-D08E-47EB-84DC-A7205780A417@ccc.com>
To: Clem cole <clemc@ccc.com>
X-Mailer: Apple Mail (2.3445.104.11)
Subject: Re: [TUHS] dmr streams & networking [was: Re: If not Linux,
 then what?]
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: The Eunuchs Hysterical Society <tuhs@tuhs.org>
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

It would be interesting to see its MMU details.

> On Aug 30, 2019, at 7:46 PM, Clem cole <clemc@ccc.com> wrote:
>=20
> There was most definitely a TLB or as Dave called it =E2=80=98The =
TB=E2=80=99 ***
> Remember Dave Cane (Masscomp hw lead) was part of the 780, led the 750 =
and designed the BI before he left dec.  He was a bus and memory =
specialist=20
>=20
>=20
> *** west coast VS east coast training - calling it a TB vs a TLB. =20
>=20
> Sent from my PDP-7 Running UNIX V0 expect things to be almost but not =
quite.=20
>=20
>> On Aug 30, 2019, at 9:13 PM, Bakul Shah <bakul@bitblocks.com> wrote:
>>=20
>>> On Fri, 30 Aug 2019 20:58:13 -0400 Clem Cole <clemc@ccc.com> wrote:
>>>=20
>>> Actually not in lock step.  They were independent.  One was called =
the
>>> executor and the other the fixer.  When a fault was detected the =
executor
>>> was sent wait stated while the fixer handled the fault and refilled =
the
>>> TLB.   Once the TLB was set to instruction was allowed to complete.  =
  Btw
>>> when the 68010 was released the pals on the board were changed to =
allow the
>>> executor to actually take the fault and do something else while the =
fixer
>>> replaced the TLB entry
>>=20
>> As I remember, the issue with 68000 was that instructions were
>> not restartable so in case of accessing memory that didn't
>> exist, you couldn't take a segfault and do anything useful.
>> This is why you needed a second processor to deal with an
>> external MMU. There would have been no TLB unless you actually
>> added an external TLB -- but an external CAM would've been
>> very expensive. May be a direct map?
>>=20
>> What we did at Fortune was to utilize a 4 entry external map:
>> text, data, extra and stack.  When a new function was invoked
>> it would do a 'probe'. If the probe caused a segfault, stack
>> was extended in the handler. The probe didn't have to be
>> restartable. So we didn't need a second 68k. This logic may
>> have been in the V7 port we started from.

