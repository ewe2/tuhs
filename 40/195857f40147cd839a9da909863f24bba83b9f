From: clemc@ccc.com (Clem Cole)
Date: Fri, 16 Feb 2018 10:03:11 -0500
Subject: [TUHS] Do Interface specifications such POSIX or the LSB Still
	Matter
In-Reply-To: <201802161128.w1GBSmsg012148@freefriends.org>
References: <CAC20D2PqfaQcHLZ9QCrRxAXM7rYeFBO1nLb2cwoj=sNvu=mYRw@mail.gmail.com>
 <201802161128.w1GBSmsg012148@freefriends.org>
Message-ID: <CAC20D2O37mfO48BDnhbNtNBFf25+juF+4+y+oVWvZbQh0C-GDg@mail.gmail.com>

Aharon - is this article you were referring:  POSIX Has Become Outdated:
Atlidakis, Andrus & Geambasu
<https://www.usenix.org/system/files/login/articles/login_fall16_02_atlidakis.pdf>

I have it and have read it.   It is a great piece and I think spot on for
new(er) applications being written fresh for Mac OSx, Android, *etc.*

I'm personally poking at this from the large (clustered) view of a
commercial ISV (think in Geo Sciences, Mech E CAD, Fluids, Chem, or
Financial) that has valuable code (much still in Fortran BTW).  More over
their customers have huge amounts of data developed over 30-40 years using
those codes, so if you magically tried to replace the codes, you need to
revalidate the data too.

So how do your define/agree upon/build interfaces that that ISV can trust
and an IHV/OEM can use to sell systems, particularly for the commercial
part of the market.  The very high end (national labs/high energy physics
types) write their own code.   But the main part of the commercial
scientific community does not.


POSIX.1 and LSB certainly helped to solve a set of problems.   But it seems
like the developers of the systems don't care any more.  They have a use my
'framework' and my app store mentality.    Which sort of is working for
mass market where you sell millions of copies.

The problem is that those codes were all developed when an older market
model and market model has changed as the market great to include a new
group of players.  The problem is that the market does not care much for
that older portion of the total market these days, so their model is
squeezed.    But as I said, even if magically new codes appeared to replace
the old ones, the old data is still an issue.

Clem
·êß

On Fri, Feb 16, 2018 at 6:28 AM, <arnold at skeeve.com> wrote:

> There was an article about this in ;login: in 2015 if I recall
> correctly. Worth trying to find.  The issue is a real one.
>
> HTH,
>
> Arnold
>
> Clem Cole <clemc at ccc.com> wrote:
>
> > I've send a couple of you private messages with some more details of why
> I
> > ask this, but I'll bring the large question to debate here:
> >
> >
> > ???Have POSIX and???
> > LSB lost
> > ???their
> >  usefulness/relevance?  If so, we know ISV???s like Ansys are not going
> to go
> > ???FOSS??? and make their sources available (ignore religious beliefs,
> it just
> > is not their business model); how to we get that level of precision to
> > allow
> > ???the part of the
> >  market
> > ??? that will be 'binary only' continue to
> >  create applications?
> >
> > Seriously, please try to stay away from religion on this
> > ??? question.   Clearly, there are a large number of ISVs have
> traditionally
> > used interface specifications.  To me it started with things like the old
> > Cobol and Fortran standards for the languages.   That was not good enough
> > since the systems diverge, and /usr/group then IEEE/ANSI/ISO did Posix.
> >
> >
> > Clearly, Posix enabled Unix implementations such a Linux to shine,
> although
> > Linux does not doggedly follow it.  Apple was once Posix conformant, but
> > I'd not think they worry to much about it.   Linux created LSB, but I see
> > fewer and fewer references to it.
> >
> > I worry that without a real binary definition, it's darned hard (at least
> > in the higher end of the business that I live day-to-day) to get ISV's to
> > care.
> >
> > What do you folks think?
> >
> > Clem
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://minnie.tuhs.org/pipermail/tuhs/attachments/20180216/095225f7/attachment.html>

