From: stewart@serissa.com (Lawrence Stewart)
Date: Thu, 15 Feb 2018 20:56:21 -0500
Subject: [TUHS] Happy birthday, Niklaus Wirth!
In-Reply-To: <20180216011815.GD8295@mcvoy.com>
References: <alpine.BSF.2.21.1802150801090.5573@aneurin.horsfall.org>
 <d718364c-87f4-280e-9bcc-9753493a75a5@telegraphics.com.au>
 <alpine.BSF.2.21.1802161058010.798@aneurin.horsfall.org>
 <CAEoi9W51rVASfMjMrK8RhPorWuPNmUa7YYg0Oy56pF6hVaV4Cg@mail.gmail.com>
 <20180216011815.GD8295@mcvoy.com>
Message-ID: <F607EBF3-08FF-433A-9C2D-353A54DFDBED@serissa.com>

ITA’s airline flight booking system, that was used by Orbitz and others was pretty much entirely written in Common LISP, and it was certainly both large and commercially successful.  Orbitz was bought by Google for $700 million.  I don’t know how much of the LISP survived sustained attention by Google.

Paul Graham’s company Viaweb was all LISP.  It was bought by Yahoo! for $50 million and became Yahoo! Store.

I think of myself as a systems person and C is still my primary language, but I wrote the routing software for the wacky Kautz graph in the Sicortex machines in Common LISP. It was substantially easier!  After it worked I recoded in C for production.  It isn’t that Common LISP isn’t perfectly fast enough, we just didn’t want garbage collection at that level of the software.

My favorite LISP story is the time I was hired to evaluate a proposed Cryptosystem.  I was handed 40 pages of C code.  I reimplemented it in 15 (short) lines of Common LISP.  It wasn’t hard to crack after it fit on one page!

I came to LISP 30 years late because I was in 6-1 at MIT rather than 6-3 so I didn’t learn LISP or Scheme.  I am not one of the awesome folks of which you speak, but I’ve met them and know what you mean.  One MIT physicist I met thought MILC was too complicated so his quantum chromodynamics code was in LISP.  He wrote his own LISP->C translator to get it to generate exactly the code he wanted.

-L

> On 2018, Feb 15, at 8:18 PM, Larry McVoy <lm at mcvoy.com> wrote:
> 
> On Thu, Feb 15, 2018 at 07:51:14PM -0500, Dan Cross wrote:
>>>> Worth mentioning one significant exception: the Lisp family.
>> 
>> So anyway...some of you who were there, was there cross-pollination? Was
>> Franz Lisp a thing Unix people at Berkeley played with, or was it mostly
>> Lisp people who just happened to be using Unix because VAXen were expensive?
> 
> This is just my opinion so there is a grain of salt.  Or a salt shaker.
> 
> I think there are two (at least) sorts of programmers, the systems people
> and the lisp people.  Sometimes you get both kinds in the same person
> but that tends to be rare (and awesome, I've employeed several of those,
> they were magic).
> 
> I'm a systems guy.  I've played with lisp, even wrote a tiny lisp (haven't
> we all?), tried to get to like it and utterly failed.  All sorts of smart
> people I knew in my career loved lisp, sneered at any other language,
> tended to think in ASTs, etc, etc.  I definitely felt inferior and tried
> to like lisp but just never got what was so neat about it.
> 
> For good reason, I think.  Nobody has written a serious operating system,
> or a serious $BIG_PROJECT in Lisp.  Not one that has been commercially
> successful, so far as I know.  I know there were attempts but all those
> attempts failed.  Why?  Performance I think.  C performs far better even
> though it is, in the eyes of lisp people, far more awkward to do things.
> 
> I can't tell you the number of times I've heard "If we were using Lisp
> we'd be done by now".  100's, 1000's.  What I have never heard is "I
> recoded this pile of C in lisp and it's 10x faster".
> 
> I think the thing is that lisp programmers were optimizing for speed
> of coding and C programmers were optimizing for speed of execution.
> 
> So I suspect that Franz Lisp was mostly lisp people who happened to be
> using Unix.  But I wasn't at Berkeley so what do I know?
> 
> --lm


