From: grog@lemis.com (Greg Lehey)
Date: Thu, 31 Jan 2002 09:17:03 +1030
Subject: [TUHS] Re: Porting Unix v6 to i386
In-Reply-To: <20020130.135403.48398950.imp@village.org>
References: <20020130091842.A12653@apple.ukc.ac.uk> <200201301952.g0UJq0E39966@ducky.net> <20020130.135403.48398950.imp@village.org>
Message-ID: <20020131091703.B38947@wantadilla.lemis.com>

On Wednesday, 30 January 2002 at 13:54:03 -0700, Warner Losh wrote:
> In message: <200201301952.g0UJq0E39966 at ducky.net>
>             Mike Haertel <mike at ducky.net> writes:
>>> Anyhow I have started gathering the tools (Watcom C compiler now
>>> open source and free!  www.openwatcom.org)
>>
>> They have announced that it *will be* open source and free,
>> but so far as far as I can tell there is nothing available
>> at openwatcom.org except a binary-only patch to upgrade
>> the last commercial version 11 to 11.0c.
>>
>> So, it isn't yet.  Right now it's just vaporware.
>
> The only compiler I know of that deals properly with generating 16-bit
> x86 code is bcc, which the Elks folks use to build their kernel.  This
> is Bruce Evan's compiler with support for prototypes bolted on, iirc.
>
> 	http://www.cix.co.uk/~mayday/
>
> It is a tad Linux centric, but I was able to get it to build with only
> a few tweaks on FreeBSD.  It is sufficient to build the elks tree, but
> I've not tried it on anything else.

Both the Sixth and Seventh editions contain code which doesn't compile
with modern compilers (the dreaded =-, for example).  What do you want
to do with that?  Of course you can fix it, but then you can go
further and further and end up with 4.4BSD.  I think that if you're
going to do this, you'll want to do it with as few code changes as
possible.  This would really suggest modifying the compiler to
generate i86 code.

Greg
--
Finger grog at lemis.com for PGP public key
See complete headers for address and phone numbers


