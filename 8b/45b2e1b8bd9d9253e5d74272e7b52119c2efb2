From tuhs-bounces@minnie.tuhs.org Thu Jun 28 20:48:04 2018
Return-Path: tuhs-bounces@minnie.tuhs.org
X-Spam-Checker-Version: SpamAssassin 3.4.1 (2015-04-28) on inbox.vuxu.org
X-Spam-Level: 
X-Spam-Status: No, score=-0.8 required=5.0 tests=HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_NONE autolearn=ham autolearn_force=no
	version=3.4.1
Received: from minnie.tuhs.org (minnie.tuhs.org [45.79.103.53])
	by inbox.vuxu.org (OpenSMTPD) with ESMTP id 650ee27d
	for <ml@inbox.vuxu.org>;
	Thu, 28 Jun 2018 20:48:04 +0000 (UTC)
Received: by minnie.tuhs.org (Postfix, from userid 112)
	id E6625A1B29; Fri, 29 Jun 2018 06:48:02 +1000 (AEST)
Received: from minnie.tuhs.org (localhost [127.0.0.1])
	by minnie.tuhs.org (Postfix) with ESMTP id 37A1AA1B2A;
	Fri, 29 Jun 2018 06:47:48 +1000 (AEST)
Received: by minnie.tuhs.org (Postfix, from userid 112)
 id AD496A1B2C; Fri, 29 Jun 2018 06:47:47 +1000 (AEST)
Received: from hacklheber.piermont.com (hacklheber.piermont.com [166.84.7.14])
 by minnie.tuhs.org (Postfix) with ESMTPS id 67EA4A1B21
 for <tuhs@minnie.tuhs.org>; Fri, 29 Jun 2018 06:47:22 +1000 (AEST)
Received: from snark.cb.piermont.com (localhost [127.0.0.1])
 by hacklheber.piermont.com (Postfix) with ESMTP id B06241F0;
 Thu, 28 Jun 2018 16:47:21 -0400 (EDT)
Received: from jabberwock.cb.piermont.com (jabberwock.cb.piermont.com
 [10.160.2.107])
 by snark.cb.piermont.com (Postfix) with ESMTP id 8C7072DED65;
 Thu, 28 Jun 2018 16:47:21 -0400 (EDT)
Date: Thu, 28 Jun 2018 16:47:21 -0400
From: "Perry E. Metzger" <perry@piermont.com>
To: Paul Winalski <paul.winalski@gmail.com>
Message-ID: <20180628164721.25c3f4d4@jabberwock.cb.piermont.com>
In-Reply-To: <CABH=_VQyoKgCcfRGJgpac5freEGBAeGetr9v9L8bTh0Oe6PYzA@mail.gmail.com>
References: <af780f9fb5c14e37f12ce5c2a4e40376669c730f@webmail.yaccman.com>
 <81277CC3-3C4A-49B8-8720-CFAD22BB28F8@bitblocks.com>
 <20180628141538.GB663@thunk.org>
 <CABH=_VQyoKgCcfRGJgpac5freEGBAeGetr9v9L8bTh0Oe6PYzA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Subject: Re: [TUHS] PDP-11 legacy, C, and modern architectures
X-BeenThere: tuhs@minnie.tuhs.org
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: The Unix Heritage Society mailing list <tuhs.minnie.tuhs.org>
List-Unsubscribe: <https://minnie.tuhs.org/cgi-bin/mailman/options/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=unsubscribe>
List-Archive: <http://minnie.tuhs.org/pipermail/tuhs/>
List-Post: <mailto:tuhs@minnie.tuhs.org>
List-Help: <mailto:tuhs-request@minnie.tuhs.org?subject=help>
List-Subscribe: <https://minnie.tuhs.org/cgi-bin/mailman/listinfo/tuhs>,
 <mailto:tuhs-request@minnie.tuhs.org?subject=subscribe>
Cc: tuhs@minnie.tuhs.org
Errors-To: tuhs-bounces@minnie.tuhs.org
Sender: "TUHS" <tuhs-bounces@minnie.tuhs.org>

On Thu, 28 Jun 2018 12:45:39 -0400 Paul Winalski
<paul.winalski@gmail.com> wrote:
> On 6/28/18, Theodore Y. Ts'o <tytso@mit.edu> wrote:
> >
> > It's the same mistake
> > Chisnall made when he assrted the parallel programming a myth that
> > humans writing parallel programs was "hard", and "all you needed"
> > was the right language.  
> 
> I''ve heard the "all you need is the right language" solution to the
> parallel processing development problem since I joined DEC in 1980.
> Here we are in 2018 and nobody's found that "right language" yet.

Dunno. Rust does some amazing things because it has a linear type
system, which means both that it can be a fully safe language even
though it doesn't have a garbage collector, and that it can allow
sharing of memory without any fear of multiple writers touching the
same block of memory.

I used to think that there hadn't been much progress in computer
science in decades and then I fell down the rabbit hole of modern
type theory. The evolution of type systems over the last few decades
has changed the game in a lot of ways. Most people aren't aware of
the progress that has been made, which is a shame.

> There have been some advancements in software development tools to
> make parallel programming easier.  Modern compilers are getting
> pretty good at loop analysis to discover opportunities for parallel
> execution and vectorization in sequentially-written code.

You're not mentioning things like linear types, effect systems, etc.

Perry
-- 
Perry E. Metzger		perry@piermont.com
