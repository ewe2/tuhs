From: toby@telegraphics.com.au (Toby Thain)
Date: Thu, 31 Aug 2017 15:47:28 -0400
Subject: [TUHS] Why Pascal is Not My Favorite Programming Language -
 Unearthed!
In-Reply-To: <CAC20D2NT-z_an3vPsj3F+xLcVOYqnMLFT5FZnMctWmM+23UXyQ@mail.gmail.com>
References: <201708301234.v7UCYsPQ002608@freefriends.org>
 <20170831011339.9465B124AEA5@mail.bitblocks.com>
 <20170831144852.GK11202@mcvoy.com>
 <CAJc6K3Wy_GqX4MV631hsEzFZFBFy4n3Ywh5XnCPd811bmOMo2Q@mail.gmail.com>
 <CANCZdfoY-t2hyJ6QRPKyAPjTrV47y5Fk8O3P0EUkwfjbktx5Yg@mail.gmail.com>
 <20170831175120.GM11202@mcvoy.com>
 <CAC20D2NT-z_an3vPsj3F+xLcVOYqnMLFT5FZnMctWmM+23UXyQ@mail.gmail.com>
Message-ID: <58653222-af68-ba25-bc87-3dc9f36b6c7a@telegraphics.com.au>

On 2017-08-31 2:40 PM, Clem Cole wrote:
> Without reliving the Pascal/C war of the day, I have to admit that I too
> loved Brian’s piece when we wrote it and love it still.   But you have
> to understand the context.   
> 
> 
> 
> 
>>>  If Unix was written in Pascal I would've happily continued using Pascal!
> 
>>Amusing in the context of Brian's piece, which essentially says if Unix
>>could have been written in Pascal, then Pascal wouldn't have been Pascal.
> 
> Doug amen.
> 
> 
> There really are a few pieces of information that I think are lost from
> history.    Pascal was and is still as difficult to match as a teaching
> language.   Brian says exactly that in is piece – it is like a ‘Piper
> Cub.’   I /still/ use it for just that when I teach scouts, nieces,
> nephews or anyone else that asks me, where to start.  Today’s "Free
> Pascal" system is pretty hard to beat - runs on anything and "just works."
> 
>  
> 
> When BWK wrote that paper, other than MIT stubbornly hanging on to LISP,
> all the major CS departments used Pascal as the language that they
> taught freshman CS courses.   Cooper and Clancy’s “Oh Pascal” was pretty
> much /de rigor/ as the text (I still have a couple of editions from when
> I taught with it).  I fear that many (?most?) of the traditional
> language types hated C as ‘dirty’ if not ‘almost industrial.’   No one
> but an “OS-weenie” would use it.
> 
>  
> 
> But the problem was that in those days, because Wirth had designed it
> for complete small student programs, it was hard to write large real
> programs (as Brian points).  So people fixed it and every fixed it
> differently.  Pascal was hardly standardized. ...
> 
>  
> 
> And this was the root of the real problem.
> 
> 
> You could not write “real” programs in it and really make them run on
> actual systems.   Brian was writing that paper, after an exercise in


Professor Knuth seemed to manage OK, writing TeX and METAFONT in Pascal
(using his literate programming toolset, but that did not extend the
language much).

I suppose Apple's Pascal and Object Pascal -- used for Lisa and
Macintosh applications and systems software -- comes under the "so
people fixed it" category?

--Toby


> exactly that task – rewriting the Software Tools into Pascal.   That
> paper was his lessons learned.
> 
>  
> 
> BTW:  I’ve always thought part of the reason C++ and Java got the jump
> they did, was because the language type could say “C didn’t win.”   But
> I do find it interesting that they now use Python as a teaching
> language, which I think is almost ‘dirtier’ than C ever was.
> 
> ...

