From: LyricalNanoha@dosius.net (Lyrical Nanoha)
Date: Wed, 16 Nov 2005 16:41:38 -0500 (EST)
Subject: [TUHS] Redoing "V6on286" or porting V7...?
In-Reply-To: <20051114194946.GE6574@gsmx07.alcatel.com.au>
References: <20051113201609.GW6574@gsmx07.alcatel.com.au>
	<8a61b612cf43394f33e6531339fe4263@coraid.com>
	<20051114194946.GE6574@gsmx07.alcatel.com.au>
Message-ID: <Pine.LNX.4.62.0511161637001.14020@static-141-149-129-16.buff.east.verizon.net>

I'm the original poster of this thread.

On Tue, 15 Nov 2005, Peter Jeremy wrote:

> Wesley Parish mentioned bcc and OpenWatcom.  I looked into the former
> and it's probably the best starting point (though, with due respect to
> BDE, the code it generates could be better).  Assuming that Unix fits
> into the C subset implemented by bcc, you'd be better off spending the
> effort on improving bcc than porting PCC.  At the time I looked,
> OpenWatcom was either still vapourware or not self-hosting.

I don't think everything needs to be bootstrapped with an open-source 
compiler.  I have Turbo C++ 1.01 which is a more than adequate C compiler 
for anything I've done with it (ranging from clones of Unix tools to a 
COMMAND.COM to an Apple //e emulator).  Whatever does the job is fine for 
me.

So getting the kernel up and getting files in and out of the image until a 
native C compiler is ready (pcc?) can be done with anything, practically. 
QEMU is a good enough testbed, and gives you well-defined hardware.  Once 
everything is up and running, then maybe one can migrate on to newer 
systems (V7, 2BSD), though V6 should be simple enough as a starting point, 
provided most of it is in C (I haven't really looked).

-uso.


